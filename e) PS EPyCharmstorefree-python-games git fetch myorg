[1mdiff --git a/.github/workflows/integration.yml b/.github/workflows/integration.yml[m
[1mdeleted file mode 100644[m
[1mindex 1b4ee3f..0000000[m
[1m--- a/.github/workflows/integration.yml[m
[1m+++ /dev/null[m
[36m@@ -1,50 +0,0 @@[m
[31m-name: integration[m
[31m-[m
[31m-on:[m
[31m-  push:[m
[31m-    branches:[m
[31m-      - master[m
[31m-  pull_request:[m
[31m-    branches:[m
[31m-      - master[m
[31m-[m
[31m-jobs:[m
[31m-[m
[31m-  checks:[m
[31m-    runs-on: ubuntu-latest[m
[31m-    strategy:[m
[31m-      max-parallel: 6[m
[31m-      matrix:[m
[31m-        check: [bluecheck, doc8, docs, flake8, isortcheck, rstcheck][m
[31m-    steps:[m
[31m-    - uses: actions/checkout@v3[m
[31m-    - uses: actions/setup-python@v4[m
[31m-      with:[m
[31m-        python-version: '3.10'[m
[31m-    - name: Setup tox[m
[31m-      run: |[m
[31m-        pip install --upgrade pip[m
[31m-        pip install tox[m
[31m-    - name: Run checks with tox[m
[31m-      run: |[m
[31m-        tox -e ${{ matrix.check }}[m
[31m-[m
[31m-  tests:[m
[31m-    needs: checks[m
[31m-    runs-on: ${{ matrix.os }}[m
[31m-    strategy:[m
[31m-      max-parallel: 5[m
[31m-      matrix:[m
[31m-        os: [ubuntu-latest][m
[31m-        python-version: [3.7, 3.8, 3.9, '3.10', 3.11][m
[31m-    steps:[m
[31m-      - uses: actions/checkout@v3[m
[31m-      - uses: actions/setup-python@v4[m
[31m-        with:[m
[31m-          python-version: ${{ matrix.python-version }}[m
[31m-      - name: Setup tox[m
[31m-        run: |[m
[31m-          pip install --upgrade pip[m
[31m-          pip install tox[m
[31m-      - name: Test with tox[m
[31m-        run: tox -e py[m
[1mdiff --git a/.github/workflows/release.yml b/.github/workflows/release.yml[m
[1mdeleted file mode 100644[m
[1mindex d902ad8..0000000[m
[1m--- a/.github/workflows/release.yml[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-name: release[m
[31m-[m
[31m-on:[m
[31m-  push:[m
[31m-    tags:[m
[31m-      - v*[m
[31m-[m
[31m-jobs:[m
[31m-[m
[31m-  upload:[m
[31m-    runs-on: ubuntu-latest[m
[31m-[m
[31m-    steps:[m
[31m-    - uses: actions/checkout@v3[m
[31m-[m
[31m-    - name: Set up Python[m
[31m-      uses: actions/setup-python@v4[m
[31m-      with:[m
[31m-        python-version: 3.11[m
[31m-[m
[31m-    - name: Install dependencies[m
[31m-      run: |[m
[31m-        pip install --upgrade pip[m
[31m-        pip install -r requirements-dev.txt[m
[31m-[m
[31m-    - name: Create dist[m
[31m-      run: python -m build[m
[31m-[m
[31m-    - name: Upload with twine[m
[31m-      env:[m
[31m-        TWINE_USERNAME: __token__[m
[31m-        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}[m
[31m-      run: |[m
[31m-        twine upload dist/*[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex dc23d9b..0000000[m
[1m--- a/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-# Python byte-code[m
[31m-*.py[co][m
[31m-[m
[31m-# virutalenv directories[m
[31m-/env*/[m
[31m-[m
[31m-# coverage files[m
[31m-.coverage[m
[31m-[m
[31m-# setup, test and upload directories[m
[31m-/.cache/[m
[31m-/.tox/[m
[31m-/build/[m
[31m-/dist/[m
[31m-/docs/_build/[m
[31m-*.egg-info/[m
[31m-[m
[31m-.DS_Store[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mdeleted file mode 100644[m
[1mindex 9de2865..0000000[m
[1m--- a/.idea/misc.xml[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="Black">[m
[31m-    <option name="sdkName" value="Python 3.10" />[m
[31m-  </component>[m
[31m-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mdeleted file mode 100644[m
[1mindex 94a25f7..0000000[m
[1m--- a/.idea/vcs.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="VcsDirectoryMappings">[m
[31m-    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mdeleted file mode 100644[m
[1mindex 7d11a81..0000000[m
[1m--- a/.idea/workspace.xml[m
[1m+++ /dev/null[m
[36m@@ -1,74 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="AutoImportSettings">[m
[31m-    <option name="autoReloadType" value="SELECTIVE" />[m
[31m-  </component>[m
[31m-  <component name="ChangeListManager">[m
[31m-    <list default="true" id="67394bc7-e494-40cf-9605-1b1b1797bb56" name="更改" comment="The initial version of the Pac-Bean game">[m
[31m-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />[m
[31m-    </list>[m
[31m-    <option name="SHOW_DIALOG" value="false" />[m
[31m-    <option name="HIGHLIGHT_CONFLICTS" value="true" />[m
[31m-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />[m
[31m-    <option name="LAST_RESOLUTION" value="IGNORE" />[m
[31m-  </component>[m
[31m-  <component name="Git.Settings">[m
[31m-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />[m
[31m-  </component>[m
[31m-  <component name="ProjectColorInfo"><![CDATA[{[m
[31m-  "associatedIndex": 6[m
[31m-}]]></component>[m
[31m-  <component name="ProjectId" id="2x8rnRYzv9zWqdc1AP2Ahvon0g6" />[m
[31m-  <component name="ProjectViewState">[m
[31m-    <option name="hideEmptyMiddlePackages" value="true" />[m
[31m-    <option name="showLibraryContents" value="true" />[m
[31m-  </component>[m
[31m-  <component name="PropertiesComponent"><![CDATA[{[m
[31m-  "keyToString": {[m
[31m-    "RunOnceActivity.OpenProjectViewOnStart": "true",[m
[31m-    "RunOnceActivity.ShowReadmeOnStart": "true",[m
[31m-    "git-widget-placeholder": "master",[m
[31m-    "node.js.detected.package.eslint": "true",[m
[31m-    "node.js.detected.package.tslint": "true",[m
[31m-    "node.js.selected.package.eslint": "(autodetect)",[m
[31m-    "node.js.selected.package.tslint": "(autodetect)",[m
[31m-    "nodejs_package_manager_path": "npm",[m
[31m-    "vue.rearranger.settings.migration": "true"[m
[31m-  }[m
[31m-}]]></component>[m
[31m-  <component name="SharedIndexes">[m
[31m-    <attachedChunks>[m
[31m-      <set>[m
[31m-        <option value="bundled-python-sdk-7a29c1521ef0-c986f194a52a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.11799.298" />[m
[31m-      </set>[m
[31m-    </attachedChunks>[m
[31m-  </component>[m
[31m-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />[m
[31m-  <component name="TaskManager">[m
[31m-    <task active="true" id="Default" summary="默认任务">[m
[31m-      <changelist id="67394bc7-e494-40cf-9605-1b1b1797bb56" name="更改" comment="" />[m
[31m-      <created>1747330708037</created>[m
[31m-      <option name="number" value="Default" />[m
[31m-      <option name="presentableId" value="Default" />[m
[31m-      <updated>1747330708037</updated>[m
[31m-      <workItem from="1747330711501" duration="2347000" />[m
[31m-    </task>[m
[31m-    <task id="LOCAL-00001" summary="The initial version of the Pac-Bean game">[m
[31m-      <option name="closed" value="true" />[m
[31m-      <created>1747331998613</created>[m
[31m-      <option name="number" value="00001" />[m
[31m-      <option name="presentableId" value="LOCAL-00001" />[m
[31m-      <option name="project" value="LOCAL" />[m
[31m-      <updated>1747331998613</updated>[m
[31m-    </task>[m
[31m-    <option name="localTasksCounter" value="2" />[m
[31m-    <servers />[m
[31m-  </component>[m
[31m-  <component name="TypeScriptGeneratedFilesManager">[m
[31m-    <option name="version" value="3" />[m
[31m-  </component>[m
[31m-  <component name="VcsManagerConfiguration">[m
[31m-    <MESSAGE value="The initial version of the Pac-Bean game" />[m
[31m-    <option name="LAST_COMMIT_MESSAGE" value="The initial version of the Pac-Bean game" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.pylintrc b/.pylintrc[m
[1mdeleted file mode 100644[m
[1mindex 734ddc5..0000000[m
[1m--- a/.pylintrc[m
[1m+++ /dev/null[m
[36m@@ -1,508 +0,0 @@[m
[31m-[MASTER][m
[31m-[m
[31m-# A comma-separated list of package or module names from where C extensions may[m
[31m-# be loaded. Extensions are loading into the active Python interpreter and may[m
[31m-# run arbitrary code[m
[31m-extension-pkg-whitelist=[m
[31m-[m
[31m-# Add files or directories to the blacklist. They should be base names, not[m
[31m-# paths.[m
[31m-ignore=CVS[m
[31m-[m
[31m-# Add files or directories matching the regex patterns to the blacklist. The[m
[31m-# regex matches against base names, not paths.[m
[31m-ignore-patterns=[m
[31m-[m
[31m-# Python code to execute, usually for sys.path manipulation such as[m
[31m-# pygtk.require().[m
[31m-#init-hook=[m
[31m-[m
[31m-# Use multiple processes to speed up Pylint.[m
[31m-jobs=1[m
[31m-[m
[31m-# List of plugins (as comma separated values of python modules names) to load,[m
[31m-# usually to register additional checkers.[m
[31m-load-plugins=[m
[31m-[m
[31m-# Pickle collected data for later comparisons.[m
[31m-persistent=yes[m
[31m-[m
[31m-# Specify a configuration file.[m
[31m-#rcfile=[m
[31m-[m
[31m-# Allow loading of arbitrary C extensions. Extensions are imported into the[m
[31m-# active Python interpreter and may run arbitrary code.[m
[31m-unsafe-load-any-extension=no[m
[31m-[m
[31m-[m
[31m-[MESSAGES CONTROL][m
[31m-[m
[31m-# Only show warnings with the listed confidence levels. Leave empty to show[m
[31m-# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED[m
[31m-confidence=[m
[31m-[m
[31m-# Disable the message, report, category or checker with the given id(s). You[m
[31m-# can either give multiple identifiers separated by comma (,) or put this[m
[31m-# option multiple times (only on the command line, not in the configuration[m
[31m-# file where it should appear only once).You can also use "--disable=all" to[m
[31m-# disable everything first and then reenable specific checks. For example, if[m
[31m-# you want to run only the similarities checker, you can use "--disable=all[m
[31m-# --enable=similarities". If you want to run only the classes checker, but have[m
[31m-# no Warning level messages displayed, use"--disable=all --enable=classes[m
[31m-# --disable=W"[m
[31m-disable=[m
[31m-    apply-builtin,[m
[31m-    backtick,[m
[31m-    bad-inline-option,[m
[31m-    bad-python3-import,[m
[31m-    bare-except,[m
[31m-    basestring-builtin,[m
[31m-    buffer-builtin,[m
[31m-    cmp-builtin,[m
[31m-    cmp-method,[m
[31m-    coerce-builtin,[m
[31m-    coerce-method,[m
[31m-    consider-using-enumerate,[m
[31m-    delslice-method,[m
[31m-    deprecated-pragma,[m
[31m-    deprecated-str-translate-call,[m
[31m-    deprecated-string-function,[m
[31m-    dict-iter-method,[m
[31m-    dict-view-method,[m
[31m-    div-method,[m
[31m-    eq-without-hash,[m
[31m-    exception-message-attribute,[m
[31m-    execfile-builtin,[m
[31m-    file-builtin,[m
[31m-    file-ignored,[m
[31m-    filter-builtin-not-iterating,[m
[31m-    fixme,[m
[31m-    getslice-method,[m
[31m-    hex-method,[m
[31m-    idiv-method,[m
[31m-    import-star-module-level,[m
[31m-    indexing-exception,[m
[31m-    input-builtin,[m
[31m-    intern-builtin,[m
[31m-    invalid-name,[m
[31m-    invalid-sequence-index,[m
[31m-    invalid-str-codec,[m
[31m-    invalid-unary-operand-type,[m
[31m-    len-as-condition,[m
[31m-    locally-disabled,[m
[31m-    locally-enabled,[m
[31m-    long-builtin,[m
[31m-    long-suffix,[m
[31m-    map-builtin-not-iterating,[m
[31m-    metaclass-assignment,[m
[31m-    next-method-called,[m
[31m-    no-absolute-import,[m
[31m-    nonzero-method,[m
[31m-    oct-method,[m
[31m-    old-division,[m
[31m-    old-ne-operator,[m
[31m-    old-octal-literal,[m
[31m-    old-raise-syntax,[m
[31m-    parameter-unpacking,[m
[31m-    print-statement,[m
[31m-    raising-string,[m
[31m-    range-builtin-not-iterating,[m
[31m-    raw-checker-failed,[m
[31m-    raw_input-builtin,[m
[31m-    rdiv-method,[m
[31m-    reduce-builtin,[m
[31m-    reload-builtin,[m
[31m-    round-builtin,[m
[31m-    setslice-method,[m
[31m-    standarderror-builtin,[m
[31m-    suppressed-message,[m
[31m-    sys-max-int,[m
[31m-    undefined-variable,[m
[31m-    unichr-builtin,[m
[31m-    unicode-builtin,[m
[31m-    unpacking-in-except,[m
[31m-    unused-argument,[m
[31m-    unused-variable,[m
[31m-    unused-wildcard-import,[m
[31m-    useless-suppression,[m
[31m-    using-cmp-argument,[m
[31m-    wildcard-import,[m
[31m-    xrange-builtin,[m
[31m-    zip-builtin-not-iterating,[m
[31m-    no-else-return,[m
[31m-    assigning-non-slot,[m
[31m-    unnecessary-pass,[m
[31m-    consider-using-sys-exit,[m
[31m-    import-outside-toplevel,[m
[31m-[m
[31m-# Enable the message, report, category or checker with the given id(s). You can[m
[31m-# either give multiple identifier separated by comma (,) or put this option[m
[31m-# multiple time (only on the command line, not in the configuration file where[m
[31m-# it should appear only once). See also the "--disable" option for examples.[m
[31m-enable=[m
[31m-[m
[31m-[m
[31m-[REPORTS][m
[31m-[m
[31m-# Python expression which should return a note less than 10 (10 is the highest[m
[31m-# note). You have access to the variables errors warning, statement which[m
[31m-# respectively contain the number of errors / warnings messages and the total[m
[31m-# number of statements analyzed. This is used by the global evaluation report[m
[31m-# (RP0004).[m
[31m-evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)[m
[31m-[m
[31m-# Template used to display messages. This is a python new-style format string[m
[31m-# used to format the message information. See doc for all details[m
[31m-#msg-template=[m
[31m-[m
[31m-# Set the output format. Available formats are text, parseable, colorized, json[m
[31m-# and msvs (visual studio).You can also give a reporter class, eg[m
[31m-# mypackage.mymodule.MyReporterClass.[m
[31m-output-format=text[m
[31m-[m
[31m-# Tells whether to display a full report or only the messages[m
[31m-reports=no[m
[31m-[m
[31m-# Activate the evaluation score.[m
[31m-score=yes[m
[31m-[m
[31m-[m
[31m-[REFACTORING][m
[31m-[m
[31m-# Maximum number of nested blocks for function / method body[m
[31m-max-nested-blocks=5[m
[31m-[m
[31m-[m
[31m-[BASIC][m
[31m-[m
[31m-# Naming hint for argument names[m
[31m-argument-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Regular expression matching correct argument names[m
[31m-argument-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Naming hint for attribute names[m
[31m-attr-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Regular expression matching correct attribute names[m
[31m-attr-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Bad variable names which should always be refused, separated by a comma[m
[31m-bad-names=foo,bar,baz,toto,tutu,tata[m
[31m-[m
[31m-# Naming hint for class attribute names[m
[31m-class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$[m
[31m-[m
[31m-# Regular expression matching correct class attribute names[m
[31m-class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$[m
[31m-[m
[31m-# Naming hint for class names[m
[31m-class-name-hint=[A-Z_][a-zA-Z0-9]+$[m
[31m-[m
[31m-# Regular expression matching correct class names[m
[31m-class-rgx=[A-Z_][a-zA-Z0-9]+$[m
[31m-[m
[31m-# Naming hint for constant names[m
[31m-const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$[m
[31m-[m
[31m-# Regular expression matching correct constant names[m
[31m-const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$[m
[31m-[m
[31m-# Minimum line length for functions/classes that require docstrings, shorter[m
[31m-# ones are exempt.[m
[31m-docstring-min-length=-1[m
[31m-[m
[31m-# Naming hint for function names[m
[31m-function-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Regular expression matching correct function names[m
[31m-function-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Good variable names which should always be accepted, separated by a comma[m
[31m-good-names=i,j,k,ex,Run,_[m
[31m-[m
[31m-# Include a hint for the correct naming format with invalid-name[m
[31m-include-naming-hint=no[m
[31m-[m
[31m-# Naming hint for inline iteration names[m
[31m-inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$[m
[31m-[m
[31m-# Regular expression matching correct inline iteration names[m
[31m-inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$[m
[31m-[m
[31m-# Naming hint for method names[m
[31m-method-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Regular expression matching correct method names[m
[31m-method-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Naming hint for module names[m
[31m-module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$[m
[31m-[m
[31m-# Regular expression matching correct module names[m
[31m-module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$[m
[31m-[m
[31m-# Colon-delimited sets of names that determine each other's naming style when[m
[31m-# the name regexes allow several styles.[m
[31m-name-group=[m
[31m-[m
[31m-# Regular expression which should only match function or class names that do[m
[31m-# not require a docstring.[m
[31m-no-docstring-rgx=^_[m
[31m-[m
[31m-# List of decorators that produce properties, such as abc.abstractproperty. Add[m
[31m-# to this list to register other decorators that produce valid properties.[m
[31m-property-classes=abc.abstractproperty[m
[31m-[m
[31m-# Naming hint for variable names[m
[31m-variable-name-hint=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-# Regular expression matching correct variable names[m
[31m-variable-rgx=(([a-z][a-z0-9_]{2,30})|(_[a-z0-9_]*))$[m
[31m-[m
[31m-[m
[31m-[FORMAT][m
[31m-[m
[31m-# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.[m
[31m-expected-line-ending-format=[m
[31m-[m
[31m-# Regexp for a line that is allowed to be longer than the limit.[m
[31m-ignore-long-lines=^\s*(# )?<?https?://\S+>?$[m
[31m-[m
[31m-# Number of spaces of indent required inside a hanging  or continued line.[m
[31m-indent-after-paren=4[m
[31m-[m
[31m-# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1[m
[31m-# tab).[m
[31m-indent-string='    '[m
[31m-[m
[31m-# Maximum number of characters on a single line.[m
[31m-max-line-length=100[m
[31m-[m
[31m-# Maximum number of lines in a module[m
[31m-max-module-lines=1000[m
[31m-[m
[31m-# List of optional constructs for which whitespace checking is disabled. `dict-[m
[31m-# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.[m
[31m-# `trailing-comma` allows a space between comma and closing bracket: (a, ).[m
[31m-# `empty-line` allows space-only lines.[m
[31m-no-space-check=trailing-comma,dict-separator[m
[31m-[m
[31m-# Allow the body of a class to be on the same line as the declaration if body[m
[31m-# contains single statement.[m
[31m-single-line-class-stmt=no[m
[31m-[m
[31m-# Allow the body of an if to be on the same line as the test if there is no[m
[31m-# else.[m
[31m-single-line-if-stmt=no[m
[31m-[m
[31m-[m
[31m-[LOGGING][m
[31m-[m
[31m-# Logging modules to check that the string format arguments are in logging[m
[31m-# function parameter format[m
[31m-logging-modules=logging[m
[31m-[m
[31m-[m
[31m-[MISCELLANEOUS][m
[31m-[m
[31m-# List of note tags to take in consideration, separated by a comma.[m
[31m-notes=FIXME,XXX,TODO[m
[31m-[m
[31m-[m
[31m-[SIMILARITIES][m
[31m-[m
[31m-# Ignore comments when computing similarities.[m
[31m-ignore-comments=yes[m
[31m-[m
[31m-# Ignore docstrings when computing similarities.[m
[31m-ignore-docstrings=yes[m
[31m-[m
[31m-# Ignore imports when computing similarities.[m
[31m-ignore-imports=no[m
[31m-[m
[31m-# Minimum lines number of a similarity.[m
[31m-min-similarity-lines=8[m
[31m-[m
[31m-[m
[31m-[SPELLING][m
[31m-[m
[31m-# Spelling dictionary name. Available dictionaries: none. To make it working[m
[31m-# install python-enchant package.[m
[31m-spelling-dict=[m
[31m-[m
[31m-# List of comma separated words that should not be checked.[m
[31m-spelling-ignore-words=[m
[31m-[m
[31m-# A path to a file that contains private dictionary; one word per line.[m
[31m-spelling-private-dict-file=[m
[31m-[m
[31m-# Tells whether to store unknown words to indicated private dictionary in[m
[31m-# --spelling-private-dict-file option instead of raising a message.[m
[31m-spelling-store-unknown-words=no[m
[31m-[m
[31m-[m
[31m-[TYPECHECK][m
[31m-[m
[31m-# List of decorators that produce context managers, such as[m
[31m-# contextlib.contextmanager. Add to this list to register other decorators that[m
[31m-# produce valid context managers.[m
[31m-contextmanager-decorators=contextlib.contextmanager[m
[31m-[m
[31m-# List of members which are set dynamically and missed by pylint inference[m
[31m-# system, and so shouldn't trigger E1101 when accessed. Python regular[m
[31m-# expressions are accepted.[m
[31m-generated-members=[m
[31m-[m
[31m-# Tells whether missing members accessed in mixin class should be ignored. A[m
[31m-# mixin class is detected if its name ends with "mixin" (case insensitive).[m
[31m-ignore-mixin-members=yes[m
[31m-[m
[31m-# This flag controls whether pylint should warn about no-member and similar[m
[31m-# checks whenever an opaque object is returned when inferring. The inference[m
[31m-# can return multiple potential results while evaluating a Python object, but[m
[31m-# some branches might not be evaluated, which results in partial inference. In[m
[31m-# that case, it might be useful to still emit no-member and other checks for[m
[31m-# the rest of the inferred objects.[m
[31m-ignore-on-opaque-inference=yes[m
[31m-[m
[31m-# List of class names for which member attributes should not be checked (useful[m
[31m-# for classes with dynamically set attributes). This supports the use of[m
[31m-# qualified names.[m
[31m-ignored-classes=optparse.Values,thread._local,_thread._local[m
[31m-[m
[31m-# List of module names for which member attributes should not be checked[m
[31m-# (useful for modules/projects where namespaces are manipulated during runtime[m
[31m-# and thus existing member attributes cannot be deduced by static analysis. It[m
[31m-# supports qualified module names, as well as Unix pattern matching.[m
[31m-ignored-modules=[m
[31m-[m
[31m-# Show a hint with possible names when a member name was not found. The aspect[m
[31m-# of finding the hint is based on edit distance.[m
[31m-missing-member-hint=yes[m
[31m-[m
[31m-# The minimum edit distance a name should have in order to be considered a[m
[31m-# similar match for a missing member name.[m
[31m-missing-member-hint-distance=1[m
[31m-[m
[31m-# The total number of similar names that should be taken in consideration when[m
[31m-# showing a hint for a missing member.[m
[31m-missing-member-max-choices=1[m
[31m-[m
[31m-[m
[31m-[VARIABLES][m
[31m-[m
[31m-# List of additional names supposed to be defined in builtins. Remember that[m
[31m-# you should avoid to define new builtins when possible.[m
[31m-additional-builtins=[m
[31m-[m
[31m-# Tells whether unused global variables should be treated as a violation.[m
[31m-allow-global-unused-variables=yes[m
[31m-[m
[31m-# List of strings which can identify a callback function by name. A callback[m
[31m-# name must start or end with one of those strings.[m
[31m-callbacks=cb_,_cb[m
[31m-[m
[31m-# A regular expression matching the name of dummy variables (i.e. expectedly[m
[31m-# not used).[m
[31m-dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_[m
[31m-[m
[31m-# Argument names that match this expression will be ignored. Default to name[m
[31m-# with leading underscore[m
[31m-ignored-argument-names=_.*|^ignored_|^unused_[m
[31m-[m
[31m-# Tells whether we should check for unused import in __init__ files.[m
[31m-init-import=no[m
[31m-[m
[31m-# List of qualified module names which can have objects that can redefine[m
[31m-# builtins.[m
[31m-redefining-builtins-modules=six.moves,future.builtins[m
[31m-[m
[31m-[m
[31m-[CLASSES][m
[31m-[m
[31m-# List of method names used to declare (i.e. assign) instance attributes.[m
[31m-defining-attr-methods=__init__,__new__,setUp[m
[31m-[m
[31m-# List of member names, which should be excluded from the protected access[m
[31m-# warning.[m
[31m-exclude-protected=_asdict,_fields,_replace,_source,_make[m
[31m-[m
[31m-# List of valid names for the first argument in a class method.[m
[31m-valid-classmethod-first-arg=cls[m
[31m-[m
[31m-# List of valid names for the first argument in a metaclass class method.[m
[31m-valid-metaclass-classmethod-first-arg=mcs[m
[31m-[m
[31m-[m
[31m-[DESIGN][m
[31m-[m
[31m-# Maximum number of arguments for function / method[m
[31m-max-args=5[m
[31m-[m
[31m-# Maximum number of attributes for a class (see R0902).[m
[31m-max-attributes=7[m
[31m-[m
[31m-# Maximum number of boolean expressions in a if statement[m
[31m-max-bool-expr=5[m
[31m-[m
[31m-# Maximum number of branch for function / method body[m
[31m-max-branches=12[m
[31m-[m
[31m-# Maximum number of locals for function / method body[m
[31m-max-locals=15[m
[31m-[m
[31m-# Maximum number of parents for a class (see R0901).[m
[31m-max-parents=7[m
[31m-[m
[31m-# Maximum number of public methods for a class (see R0904).[m
[31m-max-public-methods=20[m
[31m-[m
[31m-# Maximum number of return / yield for function / method body[m
[31m-max-returns=6[m
[31m-[m
[31m-# Maximum number of statements in function / method body[m
[31m-max-statements=50[m
[31m-[m
[31m-# Minimum number of public methods for a class (see R0903).[m
[31m-min-public-methods=2[m
[31m-[m
[31m-[m
[31m-[IMPORTS][m
[31m-[m
[31m-# Allow wildcard imports from modules that define __all__.[m
[31m-allow-wildcard-with-all=no[m
[31m-[m
[31m-# Analyse import fallback blocks. This can be used to support both Python 2 and[m
[31m-# 3 compatible code, which means that the block might have code that exists[m
[31m-# only in one or another interpreter, leading to false positives when analysed.[m
[31m-analyse-fallback-blocks=no[m
[31m-[m
[31m-# Deprecated modules which should not be used, separated by a comma[m
[31m-deprecated-modules=optparse[m
[31m-[m
[31m-# Create a graph of external dependencies in the given file (report RP0402 must[m
[31m-# not be disabled)[m
[31m-ext-import-graph=[m
[31m-[m
[31m-# Create a graph of every (i.e. internal and external) dependencies in the[m
[31m-# given file (report RP0402 must not be disabled)[m
[31m-import-graph=[m
[31m-[m
[31m-# Create a graph of internal dependencies in the given file (report RP0402 must[m
[31m-# not be disabled)[m
[31m-int-import-graph=[m
[31m-[m
[31m-# Force import order to recognize a module as part of the standard[m
[31m-# compatibility libraries.[m
[31m-known-standard-library=[m
[31m-[m
[31m-# Force import order to recognize a module as part of a third party library.[m
[31m-known-third-party=enchant[m
[31m-[m
[31m-[m
[31m-[EXCEPTIONS][m
[31m-[m
[31m-# Exceptions that will emit a warning when being caught. Defaults to[m
[31m-# "Exception"[m
[31m-overgeneral-exceptions=Exception[m
[1mdiff --git a/LICENSE b/LICENSE[m
[1mindex 38cce0a..261eeb9 100644[m
[1m--- a/LICENSE[m
[1m+++ b/LICENSE[m
[36m@@ -1,12 +1,201 @@[m
[31m-Copyright 2017-2023 Grant Jenks[m
[32m+[m[32m                                 Apache License[m
[32m+[m[32m                           Version 2.0, January 2004[m
[32m+[m[32m                        http://www.apache.org/licenses/[m
 [m
[31m-Licensed under the Apache License, Version 2.0 (the "License"); you may not use[m
[31m-this file except in compliance with the License.  You may obtain a copy of the[m
[31m-License at[m
[32m+[m[32m   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION[m
 [m
[31m-    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m   1. Definitions.[m
 [m
[31m-Unless required by applicable law or agreed to in writing, software distributed[m
[31m-under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR[m
[31m-CONDITIONS OF ANY KIND, either express or implied.  See the License for the[m
[31m-specific language governing permissions and limitations under the License.[m
[32m+[m[32m      "License" shall mean the terms and conditions for use, reproduction,[m
[32m+[m[32m      and distribution as defined by Sections 1 through 9 of this document.[m
[32m+[m
[32m+[m[32m      "Licensor" shall mean the copyright owner or entity authorized by[m
[32m+[m[32m      the copyright owner that is granting the License.[m
[32m+[m
[32m+[m[32m      "Legal Entity" shall mean the union of the acting entity and all[m
[32m+[m[32m      other entities that control, are controlled by, or are under common[m
[32m+[m[32m      control with that entity. For the purposes of this definition,[m
[32m+[m[32m      "control" means (i) the power, direct or indirect, to cause the[m
[32m+[m[32m      direction or management of such entity, whether by contract or[m
[32m+[m[32m      otherwise, or (ii) ownership of fifty percent (50%) or more of the[m
[32m+[m[32m      outstanding shares, or (iii) beneficial ownership of such entity.[m
[32m+[m
[32m+[m[32m      "You" (or "Your") shall mean an individual or Legal Entity[m
[32m+[m[32m      exercising permissions granted by this License.[m
[32m+[m
[32m+[m[32m      "Source" form shall mean the preferred form for making modifications,[m
[32m+[m[32m      including but not limited to software source code, documentation[m
[32m+[m[32m      source, and configuration files.[m
[32m+[m
[32m+[m[32m      "Object" form shall mean any form resulting from mechanical[m
[32m+[m[32m      transformation or translation of a Source form, including but[m
[32m+[m[32m      not limited to compiled object code, generated documentation,[m
[32m+[m[32m      and conversions to other media types.[m
[32m+[m
[32m+[m[32m      "Work" shall mean the work of authorship, whether in Source or[m
[32m+[m[32m      Object form, made available under the License, as indicated by a[m
[32m+[m[32m      copyright notice that is included in or attached to the work[m
[32m+[m[32m      (an example is provided in the Appendix below).[m
[32m+[m
[32m+[m[32m      "Derivative Works" shall mean any work, whether in Source or Object[m
[32m+[m[32m      form, that is based on (or derived from) the Work and for which the[m
[32m+[m[32m      editorial revisions, annotations, elaborations, or other modifications[m
[32m+[m[32m      represent, as a whole, an original work of authorship. For the purposes[m
[32m+[m[32m      of this License, Derivative Works shall not include works that remain[m
[32m+[m[32m      separable from, or merely link (or bind by name) to the interfaces of,[m
[32m+[m[32m      the Work and Derivative Works thereof.[m
[32m+[m
[32m+[m[32m      "Contribution" shall mean any work of authorship, including[m
[32m+[m[32m      the original version of the Work and any modifications or additions[m
[32m+[m[32m      to that Work or Derivative Works thereof, that is intentionally[m
[32m+[m[32m      submitted to Licensor for inclusion in the Work by the copyright owner[m
[32m+[m[32m      or by an individual or Legal Entity authorized to submit on behalf of[m
[32m+[m[32m      the copyright owner. For the purposes of this definition, "submitted"[m
[32m+[m[32m      means any form of electronic, verbal, or written communication sent[m
[32m+[m[32m      to the Licensor or its representatives, including but not limited to[m
[32m+[m[32m      communication on electronic mailing lists, source code control systems,[m
[32m+[m[32m      and issue tracking systems that are managed by, or on behalf of, the[m
[32m+[m[32m      Licensor for the purpose of discussing and improving the Work, but[m
[32m+[m[32m      excluding communication that is conspicuously marked or otherwise[m
[32m+[m[32m      designated in writing by the copyright owner as "Not a Contribution."[m
[32m+[m
[32m+[m[32m      "Contributor" shall mean Licensor and any individual or Legal Entity[m
[32m+[m[32m      on behalf of whom a Contribution has been received by Licensor and[m
[32m+[m[32m      subsequently incorporated within the Work.[m
[32m+[m
[32m+[m[32m   2. Grant of Copyright License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      copyright license to reproduce, prepare Derivative Works of,[m
[32m+[m[32m      publicly display, publicly perform, sublicense, and distribute the[m
[32m+[m[32m      Work and such Derivative Works in Source or Object form.[m
[32m+[m
[32m+[m[32m   3. Grant of Patent License. Subject to the terms and conditions of[m
[32m+[m[32m      this License, each Contributor hereby grants to You a perpetual,[m
[32m+[m[32m      worldwide, non-exclusive, no-charge, royalty-free, irrevocable[m
[32m+[m[32m      (except as stated in this section) patent license to make, have made,[m
[32m+[m[32m      use, offer to sell, sell, import, and otherwise transfer the Work,[m
[32m+[m[32m      where such license applies only to those patent claims licensable[m
[32m+[m[32m      by such Contributor that are necessarily infringed by their[m
[32m+[m[32m      Contribution(s) alone or by combination of their Contribution(s)[m
[32m+[m[32m      with the Work to which such Contribution(s) was submitted. If You[m
[32m+[m[32m      institute patent litigation against any entity (including a[m
[32m+[m[32m      cross-claim or counterclaim in a lawsuit) alleging that the Work[m
[32m+[m[32m      or a Contribution incorporated within the Work constitutes direct[m
[32m+[m[32m      or contributory patent infringement, then any patent licenses[m
[32m+[m[32m      granted to You under this License for that Work shall terminate[m
[32m+[m[32m      as of the date such litigation is filed.[m
[32m+[m
[32m+[m[32m   4. Redistribution. You may reproduce and distribute copies of the[m
[32m+[m[32m      Work or Derivative Works thereof in any medium, with or without[m
[32m+[m[32m      modifications, and in Source or Object form, provided that You[m
[32m+[m[32m      meet the following conditions:[m
[32m+[m
[32m+[m[32m      (a) You must give any other recipients of the Work or[m
[32m+[m[32m          Derivative Works a copy of this License; and[m
[32m+[m
[32m+[m[32m      (b) You must cause any modified files to carry prominent notices[m
[32m+[m[32m          stating that You changed the files; and[m
[32m+[m
[32m+[m[32m      (c) You must retain, in the Source form of any Derivative Works[m
[32m+[m[32m          that You distribute, all copyright, patent, trademark, and[m
[32m+[m[32m          attribution notices from the Source form of the Work,[m
[32m+[m[32m          excluding those notices that do not pertain to any part of[m
[32m+[m[32m          the Derivative Works; and[m
[32m+[m
[32m+[m[32m      (d) If the Work includes a "NOTICE" text file as part of its[m
[32m+[m[32m          distribution, then any Derivative Works that You distribute must[m
[32m+[m[32m          include a readable copy of the attribution notices contained[m
[32m+[m[32m          within such NOTICE file, excluding those notices that do not[m
[32m+[m[32m          pertain to any part of the Derivative Works, in at least one[m
[32m+[m[32m          of the following places: within a NOTICE text file distributed[m
[32m+[m[32m          as part of the Derivative Works; within the Source form or[m
[32m+[m[32m          documentation, if provided along with the Derivative Works; or,[m
[32m+[m[32m          within a display generated by the Derivative Works, if and[m
[32m+[m[32m          wherever such third-party notices normally appear. The contents[m
[32m+[m[32m          of the NOTICE file are for informational purposes only and[m
[32m+[m[32m          do not modify the License. You may add Your own attribution[m
[32m+[m[32m          notices within Derivative Works that You distribute, alongside[m
[32m+[m[32m          or as an addendum to the NOTICE text from the Work, provided[m
[32m+[m[32m          that such additional attribution notices cannot be construed[m
[32m+[m[32m          as modifying the License.[m
[32m+[m
[32m+[m[32m      You may add Your own copyright statement to Your modifications and[m
[32m+[m[32m      may provide additional or different license terms and conditions[m
[32m+[m[32m      for use, reproduction, or distribution of Your modifications, or[m
[32m+[m[32m      for any such Derivative Works as a whole, provided Your use,[m
[32m+[m[32m      reproduction, and distribution of the Work otherwise complies with[m
[32m+[m[32m      the conditions stated in this License.[m
[32m+[m
[32m+[m[32m   5. Submission of Contributions. Unless You explicitly state otherwise,[m
[32m+[m[32m      any Contribution intentionally submitted for inclusion in the Work[m
[32m+[m[32m      by You to the Licensor shall be under the terms and conditions of[m
[32m+[m[32m      this License, without any additional terms or conditions.[m
[32m+[m[32m      Notwithstanding the above, nothing herein shall supersede or modify[m
[32m+[m[32m      the terms of any separate license agreement you may have executed[m
[32m+[m[32m      with Licensor regarding such Contributions.[m
[32m+[m
[32m+[m[32m   6. Trademarks. This License does not grant permission to use the trade[m
[32m+[m[32m      names, trademarks, service marks, or product names of the Licensor,[m
[32m+[m[32m      except as required for reasonable and customary use in describing the[m
[32m+[m[32m      origin of the Work and reproducing the content of the NOTICE file.[m
[32m+[m
[32m+[m[32m   7. Disclaimer of Warranty. Unless required by applicable law or[m
[32m+[m[32m      agreed to in writing, Licensor provides the Work (and each[m
[32m+[m[32m      Contributor provides its Contributions) on an "AS IS" BASIS,[m
[32m+[m[32m      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or[m
[32m+[m[32m      implied, including, without limitation, any warranties or conditions[m
[32m+[m[32m      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A[m
[32m+[m[32m      PARTICULAR PURPOSE. You are solely responsible for determining the[m
[32m+[m[32m      appropriateness of using or redistributing the Work and assume any[m
[32m+[m[32m      risks associated with Your exercise of permissions under this License.[m
[32m+[m
[32m+[m[32m   8. Limitation of Liability. In no event and under no legal theory,[m
[32m+[m[32m      whether in tort (including negligence), contract, or otherwise,[m
[32m+[m[32m      unless required by applicable law (such as deliberate and grossly[m
[32m+[m[32m      negligent acts) or agreed to in writing, shall any Contributor be[m
[32m+[m[32m      liable to You for damages, including any direct, indirect, special,[m
[32m+[m[32m      incidental, or consequential damages of any character arising as a[m
[32m+[m[32m      result of this License or out of the use or inability to use the[m
[32m+[m[32m      Work (including but not limited to damages for loss of goodwill,[m
[32m+[m[32m      work stoppage, computer failure or malfunction, or any and all[m
[32m+[m[32m      other commercial damages or losses), even if such Contributor[m
[32m+[m[32m      has been advised of the possibility of such damages.[m
[32m+[m
[32m+[m[32m   9. Accepting Warranty or Additional Liability. While redistributing[m
[32m+[m[32m      the Work or Derivative Works thereof, You may choose to offer,[m
[32m+[m[32m      and charge a fee for, acceptance of support, warranty, indemnity,[m
[32m+[m[32m      or other liability obligations and/or rights consistent with this[m
[32m+[m[32m      License. However, in accepting such obligations, You may act only[m
[32m+[m[32m      on Your own behalf and on Your sole responsibility, not on behalf[m
[32m+[m[32m      of any other Contributor, and only if You agree to indemnify,[m
[32m+[m[32m      defend, and hold each Contributor harmless for any liability[m
[32m+[m[32m      incurred by, or claims asserted against, such Contributor by reason[m
[32m+[m[32m      of your accepting any such warranty or additional liability.[m
[32m+[m
[32m+[m[32m   END OF TERMS AND CONDITIONS[m
[32m+[m
[32m+[m[32m   APPENDIX: How to apply the Apache License to your work.[m
[32m+[m
[32m+[m[32m      To apply the Apache License to your work, attach the following[m
[32m+[m[32m      boilerplate notice, with the fields enclosed by brackets "[]"[m
[32m+[m[32m      replaced with your own identifying information. (Don't include[m
[32m+[m[32m      the brackets!)  The text should be enclosed in the appropriate[m
[32m+[m[32m      comment syntax for the file format. We also recommend that a[m
[32m+[m[32m      file or class name and description of purpose be included on the[m
[32m+[m[32m      same "printed page" as the copyright notice for easier[m
[32m+[m[32m      identification within third-party archives.[m
[32m+[m
[32m+[m[32m   Copyright [yyyy] [name of copyright owner][m
[32m+[m
[32m+[m[32m   Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m   you may not use this file except in compliance with the License.[m
[32m+[m[32m   You may obtain a copy of the License at[m
[32m+[m
[32m+[m[32m       http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m
[32m+[m[32m   Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m   distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m   See the License for the specific language governing permissions and[m
[32m+[m[32m   limitations under the License.[m
[1mdiff --git a/MANIFEST.in b/MANIFEST.in[m
[1mdeleted file mode 100644[m
[1mindex e8c5c2a..0000000[m
[1m--- a/MANIFEST.in[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-include README.rst[m
[31m-include LICENSE[m
[31m-include freegames/*.gif[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..9788722[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# free-python-games[m
\ No newline at end of file[m
[1mdiff --git a/README.rst b/README.rst[m
[1mdeleted file mode 100644[m
[1mindex ca6b1cb..0000000[m
[1m--- a/README.rst[m
[1m+++ /dev/null[m
[36m@@ -1,374 +0,0 @@[m
[31m-Free Python Games[m
[31m-=================[m
[31m-[m
[31m-`Free Python Games`_ is an Apache2 licensed collection of free Python games[m
[31m-intended for education and fun. The games are written in simple Python code and[m
[31m-designed for experimentation and changes. Simplified versions of several[m
[31m-classic arcade games are included.[m
[31m-[m
[31m-Python is one of the top-five most popular programming languages in the world[m
[31m-and available for free from `Python.org <https://www.python.org/>`_. Python[m
[31m-includes an extensive Standard Library distributed with your installation. The[m
[31m-Standard Library has a module called Turtle which is a popular way to introduce[m
[31m-programming to kids. Turtle was part of the original Logo programming language[m
[31m-developed by Wally Feurzig and Seymour Papert in 1966. All of the games in[m
[31m-`Free Python Games`_ are implemented using Python and its Turtle module.[m
[31m-[m
[31m-Starting in 2012, `Free Python Games`_ began as an after school program to[m
[31m-teach programming to inner-city youth. The goal was to have fun as much as it[m
[31m-was to learn. Since then the games have been improved and used in a variety of[m
[31m-settings ranging from classrooms to summer day-camps.[m
[31m-[m
[31m-The games run anywhere Python can be installed which includes desktop computers[m
[31m-running Windows, Mac OS, or Linux and older or low-power hardware such as the[m
[31m-Raspberry Pi. Kids across the United States in grades 6th-12th have enjoyed[m
[31m-learning about topics such as encryption and projectile motion through games.[m
[31m-[m
[31m-Each game is entirely independent from the others and includes comments along[m
[31m-with a list of exercises to work through with students. Creativity and[m
[31m-flexibility is important. There is no right or wrong way to implement a new[m
[31m-feature or behavior! You never know which games students will engage with best.[m
[31m-[m
[31m-.. _`Free Python Games`: https://grantjenks.com/docs/freegames/[m
[31m-[m
[31m-[m
[31m-Testimonials[m
[31m-------------[m
[31m-[m
[31m-*"I love Free Python Games because the games are fun and they're easy to[m
[31m-understand and change. I like making my own games now."*[m
[31m-[m
[31m--- Luke Martin, Student[m
[31m-[m
[31m-*"Free Python Games inspired and introduced a new hobby to our son. Thank you so[m
[31m-much for exposing him to coding. He is having so much fun!"*[m
[31m-[m
[31m--- Mary Lai, Parent[m
[31m-[m
[31m-*"Free Python Games are great because they really engage students and let them[m
[31m-learn at their own pace."*[m
[31m-[m
[31m--- Rick Schertle, Teacher, Steindorf STEAM School[m
[31m-[m
[31m-*"Free Python Games combines play and learning in a flexible environment that[m
[31m-reduces the stress of a difficult topic like programming."*[m
[31m-[m
[31m--- Brett Bymaster, Youth Pastor, The River Church Community[m
[31m-[m
[31m-*"Free Python Games is great for students, is highly organized and flexible,[m
[31m-and seeks to unleash inquiry and understanding."*[m
[31m-[m
[31m--- Terri Furton, Principal, Downtown College Prep[m
[31m-[m
[31m-[m
[31m-Features[m
[31m---------[m
[31m-[m
[31m-- Fun to play![m
[31m-- Simple Python code[m
[31m-- Easy to install[m
[31m-- Designed for education[m
[31m-- Depends only on the Python Standard Library[m
[31m-- Used in hundreds of hours of classroom instruction[m
[31m-- Fully Documented[m
[31m-- 100% Test Coverage[m
[31m-- Developed on Python 3.10[m
[31m-- Tested on CPython 3.6, 3.7, 3.8, 3.9, 3.10[m
[31m-- Tested on Linux, Mac OS X, and Windows[m
[31m-- Tested using GitHub Actions[m
[31m-[m
[31m-.. image:: https://github.com/grantjenks/free-python-games/workflows/integration/badge.svg[m
[31m-   :target: https://grantjenks.com/docs/freegames/[m
[31m-[m
[31m-[m
[31m-Quickstart[m
[31m-----------[m
[31m-[m
[31m-Installing Free Python Games is simple with `pip[m
[31m-<https://pypi.python.org/pypi/pip>`_::[m
[31m-[m
[31m-  $ python3 -m pip install freegames[m
[31m-[m
[31m-Free Python Games supports a command-line interface (CLI). Help for the CLI is[m
[31m-available using::[m
[31m-[m
[31m-  $ python3 -m freegames --help[m
[31m-[m
[31m-The CLI supports three commands: list, copy, and show. For a list of all games[m
[31m-run::[m
[31m-[m
[31m-  $ python3 -m freegames list[m
[31m-[m
[31m-Any of the listed games may be played by executing the Python module from the[m
[31m-command-line. To reference the Python module, combine "freegames" with the name[m
[31m-of the game. For example, to play the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m freegames.snake[m
[31m-[m
[31m-Games can be modified by copying their source code. The copy command will[m
[31m-create a Python file in your local directory which you can edit. For example,[m
[31m-to copy and play the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m freegames copy snake[m
[31m-  $ python3 snake.py[m
[31m-[m
[31m-Python includes a built-in text editor named IDLE which can also execute Python[m
[31m-code. To launch the editor and make changes to the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m idlelib.idle snake.py[m
[31m-[m
[31m-You can also access documentation in the interpreter with Python's built-in[m
[31m-help function::[m
[31m-[m
[31m-  >>> import freegames[m
[31m-  >>> help(freegames)[m
[31m-[m
[31m-Free Python Games also provides an entry-point script for compatibility with[m
[31m-`pipx <https://pypa.github.io/pipx/>`_::[m
[31m-[m
[31m-  $ pipx install freegames[m
[31m-  $ freegames play life[m
[31m-[m
[31m-[m
[31m-Free Games[m
[31m-----------[m
[31m-[m
[31m-Paint[m
[31m-.....[m
[31m-[m
[31m-`Paint`_ -- draw lines and shapes on the screen. Click to mark the start of a[m
[31m-shape and click again to mark its end. Different shapes and colors can be[m
[31m-selected using the keyboard.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/paint.gif[m
[31m-   :alt: Paint Free Python Game[m
[31m-[m
[31m-.. _`Paint`: https://grantjenks.com/docs/freegames/paint.html[m
[31m-[m
[31m-Snake[m
[31m-.....[m
[31m-[m
[31m-`Snake`_ -- classic arcade game. Use the arrow keys to navigate and eat the[m
[31m-green food. Each time the food is consumed, the snake grows one segment[m
[31m-longer. Avoid eating yourself or going out of bounds![m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/snake.gif[m
[31m-   :alt: Snake Free Python Game[m
[31m-[m
[31m-.. _`Snake`: https://grantjenks.com/docs/freegames/snake.html[m
[31m-[m
[31m-Pacman[m
[31m-......[m
[31m-[m
[31m-`Pacman`_ -- classic arcade game. Use the arrow keys to navigate and eat all[m
[31m-the white food. Watch out for red ghosts that roam the maze.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/pacman.gif[m
[31m-   :alt: Pacman Free Python Game[m
[31m-[m
[31m-.. _`Pacman`: https://grantjenks.com/docs/freegames/pacman.html[m
[31m-[m
[31m-Cannon[m
[31m-......[m
[31m-[m
[31m-`Cannon`_ -- projectile motion. Click the screen to fire your cannnonball. The[m
[31m-cannonball pops blue balloons in its path. Pop all the balloons before they can[m
[31m-cross the screen.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/cannon.gif[m
[31m-   :alt: Cannon Free Python Game[m
[31m-[m
[31m-.. _`Cannon`: https://grantjenks.com/docs/freegames/cannon.html[m
[31m-[m
[31m-Connect[m
[31m-.......[m
[31m-[m
[31m-`Connect`_ -- Connect 4 game. Click a row to drop a disc. The first player to[m
[31m-connect four discs vertically, horizontally, or diagonally wins![m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/connect.gif[m
[31m-   :alt: Connect 4 Free Python Game[m
[31m-[m
[31m-.. _`Connect`: https://grantjenks.com/docs/freegames/connect.html[m
[31m-[m
[31m-Flappy[m
[31m-......[m
[31m-[m
[31m-`Flappy`_ -- Flappy-bird inspired game. Click the screen to flap your[m
[31m-wings. Watch out for black ravens as you fly across the screen.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/flappy.gif[m
[31m-   :alt: Flappy Bird Free Python Game[m
[31m-[m
[31m-.. _`Flappy`: https://grantjenks.com/docs/freegames/flappy.html[m
[31m-[m
[31m-Memory[m
[31m-......[m
[31m-[m
[31m-`Memory`_ -- puzzle game of number pairs. Click a tile to reveal a[m
[31m-number. Match two numbers and the tiles will disappear to reveal an image.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/memory.gif[m
[31m-   :alt: Memory Free Python Game[m
[31m-[m
[31m-.. _`Memory`: https://grantjenks.com/docs/freegames/memory.html[m
[31m-[m
[31m-Pong[m
[31m-....[m
[31m-[m
[31m-`Pong`_ -- classic arcade game. Use the keyboard to move your paddle up and[m
[31m-down. The first player to miss the ball loses.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/pong.gif[m
[31m-   :alt: Pong Free Python Game[m
[31m-[m
[31m-.. _`Pong`: https://grantjenks.com/docs/freegames/pong.html[m
[31m-[m
[31m-Simon Says[m
[31m-..........[m
[31m-[m
[31m-`Simon Says`_ -- classic memory puzzle game. Click the screen to start. Watch[m
[31m-the pattern and then click the tiles in the same order. Each time you get the[m
[31m-sequence right the pattern gets one step longer.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/simonsays.gif[m
[31m-   :alt: Simon Says Free Python Game[m
[31m-[m
[31m-.. _`Simon Says`: https://grantjenks.com/docs/freegames/simonsays.html[m
[31m-[m
[31m-Tic Tac Toe[m
[31m-...........[m
[31m-[m
[31m-`Tic Tac Toe`_ -- classic game. Click the screen to place an X or O. Connect[m
[31m-three in a row and you win![m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/tictactoe.gif[m
[31m-   :alt: Tic Tac Toe Free Python Game[m
[31m-[m
[31m-.. _`Tic Tac Toe`: https://grantjenks.com/docs/freegames/tictactoe.html[m
[31m-[m
[31m-Tiles[m
[31m-.....[m
[31m-[m
[31m-`Tiles`_ -- puzzle game of sliding numbers into place. Click a tile adjacent to[m
[31m-the empty square to swap positions. Can you make the tiles count one to fifteen[m
[31m-from left to right and bottom to top?[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/tiles.gif[m
[31m-   :alt: Tiles Free Python Game[m
[31m-[m
[31m-.. _`Tiles`: https://grantjenks.com/docs/freegames/tiles.html[m
[31m-[m
[31m-Tron[m
[31m-....[m
[31m-[m
[31m-`Tron`_ -- classic arcade game. Use the keyboard to change the direction of[m
[31m-your Tron player. Avoid touching the line drawn by your opponent.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/tron.gif[m
[31m-   :alt: Tron Free Python Game[m
[31m-[m
[31m-.. _`Tron`: https://grantjenks.com/docs/freegames/tron.html[m
[31m-[m
[31m-Life[m
[31m-....[m
[31m-[m
[31m-`Life`_ -- Conway's Game of Life. The classic, zero-player, cellular automation[m
[31m-created in 1970 by John Conway.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/life.gif[m
[31m-   :alt: Game of Life Free Python Game[m
[31m-[m
[31m-.. _`Life`: https://grantjenks.com/docs/freegames/life.html[m
[31m-[m
[31m-Maze[m
[31m-....[m
[31m-[m
[31m-`Maze`_ -- move from one side to another. Inspired by `A Universe in One Line[m
[31m-of Code with 10 PRINT`_. Tap the screen to trace a path from one side to[m
[31m-another.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/maze.gif[m
[31m-   :alt: Maze Free Python Game[m
[31m-[m
[31m-.. _`Maze`: https://grantjenks.com/docs/freegames/maze.html[m
[31m-.. _`A Universe in One Line of Code with 10 PRINT`: https://www.makeartwithpython.com/blog/10-print-in-python/[m
[31m-[m
[31m-Fidget[m
[31m-......[m
[31m-[m
[31m-`Fidget`_ -- fidget spinner inspired animation. Click the screen to accelerate[m
[31m-the fidget spinner.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/fidget.gif[m
[31m-   :alt: Fidget Spinner Free Python Game[m
[31m-[m
[31m-.. _`Fidget`: https://grantjenks.com/docs/freegames/fidget.html[m
[31m-[m
[31m-Illusion[m
[31m-........[m
[31m-[m
[31m-`Illusion`_ -- an optical illusion.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/illusion.gif[m
[31m-   :alt: Optical Illusion Free Python Game[m
[31m-[m
[31m-.. _`Illusion`: https://grantjenks.com/docs/freegames/illusion.html[m
[31m-[m
[31m-Typing[m
[31m-......[m
[31m-[m
[31m-`Typing`_ -- practice typing while letters fall down the screen.[m
[31m-[m
[31m-.. image:: https://grantjenks.com/docs/freegames/_static/typing.gif[m
[31m-   :alt: Typing Free Python Game[m
[31m-[m
[31m-.. _`Typing`: https://grantjenks.com/docs/freegames/typing.html[m
[31m-[m
[31m-[m
[31m-User Guide[m
[31m-----------[m
[31m-[m
[31m-For those wanting more details, this part of the documentation describes[m
[31m-curriculum, API, and development.[m
[31m-[m
[31m-* `Talk: Give the Gift of Python`_[m
[31m-* `Free Python Games Curriculum`_[m
[31m-* `Free Python Games API Reference`_[m
[31m-* `Free Python Games Development`_[m
[31m-[m
[31m-.. _`Talk: Give the Gift of Python`: https://grantjenks.com/docs/freegames/give-gift-python.html[m
[31m-.. _`Free Python Games Curriculum`: https://grantjenks.com/docs/freegames/curriculum.html[m
[31m-.. _`Free Python Games API Reference`: https://grantjenks.com/docs/freegames/api.html[m
[31m-.. _`Free Python Games Development`: https://grantjenks.com/docs/freegames/development.html[m
[31m-[m
[31m-[m
[31m-References[m
[31m-----------[m
[31m-[m
[31m-* `Free Python Games Documentation`_[m
[31m-* `Free Python Games at PyPI`_[m
[31m-* `Free Python Games at GitHub`_[m
[31m-* `Free Python Games Issue Tracker`_[m
[31m-[m
[31m-.. _`Free Python Games Documentation`: https://grantjenks.com/docs/freegames/[m
[31m-.. _`Free Python Games at PyPI`: https://pypi.python.org/pypi/freegames[m
[31m-.. _`Free Python Games at GitHub`: https://github.com/grantjenks/free-python-games[m
[31m-.. _`Free Python Games Issue Tracker`: https://github.com/grantjenks/free-python-games/issues[m
[31m-[m
[31m-[m
[31m-Free Python Games License[m
[31m--------------------------[m
[31m-[m
[31m-Copyright 2017-2023 Grant Jenks[m
[31m-[m
[31m-Licensed under the Apache License, Version 2.0 (the "License"); you may not use[m
[31m-this file except in compliance with the License.  You may obtain a copy of the[m
[31m-License at[m
[31m-[m
[31m-    http://www.apache.org/licenses/LICENSE-2.0[m
[31m-[m
[31m-Unless required by applicable law or agreed to in writing, software distributed[m
[31m-under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR[m
[31m-CONDITIONS OF ANY KIND, either express or implied.  See the License for the[m
[31m-specific language governing permissions and limitations under the License.[m
[1mdiff --git a/docs/Makefile b/docs/Makefile[m
[1mdeleted file mode 100644[m
[1mindex 359209f..0000000[m
[1m--- a/docs/Makefile[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-# Minimal makefile for Sphinx documentation[m
[31m-#[m
[31m-[m
[31m-# You can set these variables from the command line.[m
[31m-SPHINXOPTS    =[m
[31m-SPHINXBUILD   = python -msphinx[m
[31m-SPHINXPROJ    = FreeGames[m
[31m-SOURCEDIR     = .[m
[31m-BUILDDIR      = _build[m
[31m-[m
[31m-# Put it first so that "make" without argument is like "make help".[m
[31m-help:[m
[31m-	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)[m
[31m-[m
[31m-.PHONY: help Makefile[m
[31m-[m
[31m-# Catch-all target: route all unknown targets to Sphinx using the new[m
[31m-# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).[m
[31m-%: Makefile[m
[31m-	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)[m
\ No newline at end of file[m
[1mdiff --git a/docs/_static/cannon.gif b/docs/_static/cannon.gif[m
[1mdeleted file mode 100644[m
[1mindex 9e6dbbc..0000000[m
Binary files a/docs/_static/cannon.gif and /dev/null differ
[1mdiff --git a/docs/_static/connect.gif b/docs/_static/connect.gif[m
[1mdeleted file mode 100644[m
[1mindex be7b362..0000000[m
Binary files a/docs/_static/connect.gif and /dev/null differ
[1mdiff --git a/docs/_static/fidget.gif b/docs/_static/fidget.gif[m
[1mdeleted file mode 100644[m
[1mindex 3c2e615..0000000[m
Binary files a/docs/_static/fidget.gif and /dev/null differ
[1mdiff --git a/docs/_static/flappy.gif b/docs/_static/flappy.gif[m
[1mdeleted file mode 100644[m
[1mindex e6d060f..0000000[m
Binary files a/docs/_static/flappy.gif and /dev/null differ
[1mdiff --git a/docs/_static/gj-logo.png b/docs/_static/gj-logo.png[m
[1mdeleted file mode 100755[m
[1mindex 5b7ef14..0000000[m
Binary files a/docs/_static/gj-logo.png and /dev/null differ
[1mdiff --git a/docs/_static/illusion.gif b/docs/_static/illusion.gif[m
[1mdeleted file mode 100644[m
[1mindex edc3f49..0000000[m
Binary files a/docs/_static/illusion.gif and /dev/null differ
[1mdiff --git a/docs/_static/life.gif b/docs/_static/life.gif[m
[1mdeleted file mode 100644[m
[1mindex 03fcf05..0000000[m
Binary files a/docs/_static/life.gif and /dev/null differ
[1mdiff --git a/docs/_static/maze.gif b/docs/_static/maze.gif[m
[1mdeleted file mode 100644[m
[1mindex c6be11a..0000000[m
Binary files a/docs/_static/maze.gif and /dev/null differ
[1mdiff --git a/docs/_static/memory.gif b/docs/_static/memory.gif[m
[1mdeleted file mode 100644[m
[1mindex 3f82148..0000000[m
Binary files a/docs/_static/memory.gif and /dev/null differ
[1mdiff --git a/docs/_static/pacman.gif b/docs/_static/pacman.gif[m
[1mdeleted file mode 100644[m
[1mindex ff96b7d..0000000[m
Binary files a/docs/_static/pacman.gif and /dev/null differ
[1mdiff --git a/docs/_static/paint.gif b/docs/_static/paint.gif[m
[1mdeleted file mode 100644[m
[1mindex 8af4c6d..0000000[m
Binary files a/docs/_static/paint.gif and /dev/null differ
[1mdiff --git a/docs/_static/pong.gif b/docs/_static/pong.gif[m
[1mdeleted file mode 100644[m
[1mindex 7c6511b..0000000[m
Binary files a/docs/_static/pong.gif and /dev/null differ
[1mdiff --git a/docs/_static/simonsays.gif b/docs/_static/simonsays.gif[m
[1mdeleted file mode 100644[m
[1mindex 3540ef8..0000000[m
Binary files a/docs/_static/simonsays.gif and /dev/null differ
[1mdiff --git a/docs/_static/snake.gif b/docs/_static/snake.gif[m
[1mdeleted file mode 100644[m
[1mindex 9333ec4..0000000[m
Binary files a/docs/_static/snake.gif and /dev/null differ
[1mdiff --git a/docs/_static/tictactoe.gif b/docs/_static/tictactoe.gif[m
[1mdeleted file mode 100644[m
[1mindex 9a26e21..0000000[m
Binary files a/docs/_static/tictactoe.gif and /dev/null differ
[1mdiff --git a/docs/_static/tiles.gif b/docs/_static/tiles.gif[m
[1mdeleted file mode 100644[m
[1mindex 6bdd173..0000000[m
Binary files a/docs/_static/tiles.gif and /dev/null differ
[1mdiff --git a/docs/_static/tron.gif b/docs/_static/tron.gif[m
[1mdeleted file mode 100644[m
[1mindex 84c04d6..0000000[m
Binary files a/docs/_static/tron.gif and /dev/null differ
[1mdiff --git a/docs/_static/typing.gif b/docs/_static/typing.gif[m
[1mdeleted file mode 100644[m
[1mindex d38f090..0000000[m
Binary files a/docs/_static/typing.gif and /dev/null differ
[1mdiff --git a/docs/_templates/gumroad.html b/docs/_templates/gumroad.html[m
[1mdeleted file mode 100644[m
[1mindex c9c9687..0000000[m
[1m--- a/docs/_templates/gumroad.html[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-<h3>Donate</h3>[m
[31m-<p>If you or your organization uses Free Games, consider donating:</p>[m
[31m-<p>[m
[31m-  <a href="http://gum.co/freegames" target="_blank">Donate to Free Python Games</a>[m
[31m-</p>[m
[1mdiff --git a/docs/_templates/pagetoc.html b/docs/_templates/pagetoc.html[m
[1mdeleted file mode 100644[m
[1mindex faf8d55..0000000[m
[1m--- a/docs/_templates/pagetoc.html[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-{#[m
[31m-    basic/localtoc.html[m
[31m-    ~~~~~~~~~~~~~~~~~~~[m
[31m-[m
[31m-    Sphinx sidebar template: local table of contents.[m
[31m-[m
[31m-    :copyright: Copyright 2007-2017 by the Sphinx team, see AUTHORS.[m
[31m-    :license: BSD, see LICENSE for details.[m
[31m-#}[m
[31m-{%- if display_toc %}[m
[31m-  <h3><a href="{{ pathto(master_doc) }}">{{ _('Contents') }}</a></h3>[m
[31m-  {{ toc }}[m
[31m-{%- endif %}[m
[1mdiff --git a/docs/_templates/search.html b/docs/_templates/search.html[m
[1mdeleted file mode 100644[m
[1mindex dae4604..0000000[m
[1m--- a/docs/_templates/search.html[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-{#[m
[31m-    Modified by Grant Jenks, 2017.[m
[31m-[m
[31m-    basic/searchbox.html[m
[31m-    ~~~~~~~~~~~~~~~~~~~~[m
[31m-[m
[31m-    Sphinx sidebar template: quick search box.[m
[31m-[m
[31m-    :copyright: Copyright 2007-2017 by the Sphinx team, see AUTHORS.[m
[31m-    :license: BSD, see LICENSE for details.[m
[31m-#}[m
[31m-{%- if pagename != "search" and builder != "singlehtml" %}[m
[31m-<div id="searchbox" style="display: none" role="search">[m
[31m-  <h3>{{ _('Search') }}</h3>[m
[31m-    <form class="search" action="{{ pathto('search') }}" method="get">[m
[31m-      <div><input type="text" name="q" /></div><br>[m
[31m-      <div><input type="submit" value="{{ _('Search') }}" /></div>[m
[31m-      <input type="hidden" name="check_keywords" value="yes" />[m
[31m-      <input type="hidden" name="area" value="default" />[m
[31m-    </form>[m
[31m-</div>[m
[31m-<script type="text/javascript">$('#searchbox').show(0);</script>[m
[31m-{%- endif %}[m
[1mdiff --git a/docs/_templates/topics.html b/docs/_templates/topics.html[m
[1mdeleted file mode 100644[m
[1mindex f53de28..0000000[m
[1m--- a/docs/_templates/topics.html[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-<h3>Topics</h3>[m
[31m-{{ toctree(includehidden=theme_sidebar_includehidden, collapse=theme_sidebar_collapse) }}[m
[31m-{% if theme_extra_nav_links %}[m
[31m-<ul>[m
[31m-    {% for text, uri in theme_extra_nav_links.items() %}[m
[31m-    <li><a href="{{ uri }}">{{ text }}</a></li>[m
[31m-    {% endfor %}[m
[31m-</ul>[m
[31m-{% endif %}[m
[1mdiff --git a/docs/ant.rst b/docs/ant.rst[m
[1mdeleted file mode 100644[m
[1mindex 43beaf9..0000000[m
[1m--- a/docs/ant.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Ant[m
[31m-===[m
[31m-[m
[31m-Ant, simple animation demo.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/ant.py[m
[1mdiff --git a/docs/api.rst b/docs/api.rst[m
[1mdeleted file mode 100644[m
[1mindex c7d68cb..0000000[m
[1m--- a/docs/api.rst[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-Free Python Games API Reference[m
[31m-===============================[m
[31m-[m
[31m-:doc:`Free Python Games <index>` includes a few helpful utilities. The best way[m
[31m-to expose beginners to these functions is with Python's built-in help[m
[31m-function. Learners should be able to understand and write the drawing functions[m
[31m-themselves.[m
[31m-[m
[31m-.. contents::[m
[31m-   :local:[m
[31m-[m
[31m-Drawing Functions[m
[31m------------------[m
[31m-[m
[31m-.. autofunction:: freegames.line[m
[31m-[m
[31m-.. autofunction:: freegames.square[m
[31m-[m
[31m-Helper Functions[m
[31m-----------------[m
[31m-[m
[31m-.. autofunction:: freegames.floor[m
[31m-[m
[31m-.. autofunction:: freegames.path[m
[31m-[m
[31m-Vectors[m
[31m--------[m
[31m-[m
[31m-.. autoclass:: freegames.vector[m
[31m-   :members:[m
[31m-   :special-members:[m
[1mdiff --git a/docs/avoid.rst b/docs/avoid.rst[m
[1mdeleted file mode 100644[m
[1mindex 274f453..0000000[m
[1m--- a/docs/avoid.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Avoid[m
[31m-======[m
[31m-[m
[31m-Avoid, classic arcade game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/avoid.py[m
[1mdiff --git a/docs/bagels.rst b/docs/bagels.rst[m
[1mdeleted file mode 100644[m
[1mindex 154f58f..0000000[m
[1m--- a/docs/bagels.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Bagels[m
[31m-======[m
[31m-[m
[31m-Bagels, a number puzzle game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/bagels.py[m
[1mdiff --git a/docs/bounce.rst b/docs/bounce.rst[m
[1mdeleted file mode 100644[m
[1mindex f557df6..0000000[m
[1m--- a/docs/bounce.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Bounce[m
[31m-======[m
[31m-[m
[31m-Bounce, a simple animation demo.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/bounce.py[m
[1mdiff --git a/docs/cannon.rst b/docs/cannon.rst[m
[1mdeleted file mode 100644[m
[1mindex 77f66a2..0000000[m
[1m--- a/docs/cannon.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Cannon[m
[31m-======[m
[31m-[m
[31m-Cannon, hitting targets with projectiles.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/cannon.py[m
[1mdiff --git a/docs/conf.py b/docs/conf.py[m
[1mdeleted file mode 100644[m
[1mindex fc41c1e..0000000[m
[1m--- a/docs/conf.py[m
[1m+++ /dev/null[m
[36m@@ -1,201 +0,0 @@[m
[31m-# -*- coding: utf-8 -*-[m
[31m-#[m
[31m-# Configuration file for the Sphinx documentation builder.[m
[31m-#[m
[31m-# This file does only contain a selection of the most common options. For a[m
[31m-# full list see the documentation:[m
[31m-# http://www.sphinx-doc.org/en/master/config[m
[31m-[m
[31m-# -- Path setup --------------------------------------------------------------[m
[31m-[m
[31m-# If extensions (or modules to document with autodoc) are in another directory,[m
[31m-# add these directories to sys.path here. If the directory is relative to the[m
[31m-# documentation root, use os.path.abspath to make it absolute, like shown here.[m
[31m-[m
[31m-import os[m
[31m-import sys[m
[31m-sys.path.insert(0, os.path.abspath('..'))[m
[31m-import freegames[m
[31m-[m
[31m-[m
[31m-# -- Project information -----------------------------------------------------[m
[31m-[m
[31m-project = 'Free Python Games'[m
[31m-copyright = freegames.__copyright__[m
[31m-author = freegames.__author__[m
[31m-[m
[31m-# The short X.Y version[m
[31m-version = freegames.__version__[m
[31m-# The full version, including alpha/beta/rc tags[m
[31m-release = freegames.__version__[m
[31m-[m
[31m-[m
[31m-# -- General configuration ---------------------------------------------------[m
[31m-[m
[31m-# If your documentation needs a minimal Sphinx version, state it here.[m
[31m-#[m
[31m-# needs_sphinx = '1.0'[m
[31m-[m
[31m-# Add any Sphinx extension module names here, as strings. They can be[m
[31m-# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom[m
[31m-# ones.[m
[31m-extensions = [[m
[31m-    'sphinx.ext.autodoc',[m
[31m-    'sphinx.ext.todo',[m
[31m-    'sphinx.ext.viewcode',[m
[31m-][m
[31m-[m
[31m-# Add any paths that contain templates here, relative to this directory.[m
[31m-templates_path = ['_templates'][m
[31m-[m
[31m-# The suffix(es) of source filenames.[m
[31m-# You can specify multiple suffix as a list of string:[m
[31m-#[m
[31m-# source_suffix = ['.rst', '.md'][m
[31m-source_suffix = '.rst'[m
[31m-[m
[31m-# The master toctree document.[m
[31m-master_doc = 'index'[m
[31m-[m
[31m-# The language for content autogenerated by Sphinx. Refer to documentation[m
[31m-# for a list of supported languages.[m
[31m-#[m
[31m-# This is also used if you do content translation via gettext catalogs.[m
[31m-# Usually you set "language" from the command line for these cases.[m
[31m-language = 'en'[m
[31m-[m
[31m-# List of patterns, relative to source directory, that match files and[m
[31m-# directories to ignore when looking for source files.[m
[31m-# This pattern also affects html_static_path and html_extra_path.[m
[31m-exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store'][m
[31m-[m
[31m-# The name of the Pygments (syntax highlighting) style to use.[m
[31m-pygments_style = None[m
[31m-[m
[31m-[m
[31m-# -- Options for HTML output -------------------------------------------------[m
[31m-[m
[31m-# The theme to use for HTML and HTML Help pages.  See the documentation for[m
[31m-# a list of builtin themes.[m
[31m-#[m
[31m-html_theme = 'alabaster'[m
[31m-[m
[31m-# Theme options are theme-specific and customize the look and feel of a theme[m
[31m-# further.  For a list of options available for each theme, see the[m
[31m-# documentation.[m
[31m-html_theme_options = {[m
[31m-    'logo': 'gj-logo.png',[m
[31m-    'logo_name': True,[m
[31m-    'logo_text_align': 'center',[m
[31m-    'analytics_id': 'UA-19364636-2',[m
[31m-    'show_powered_by': False,[m
[31m-    'show_related': True,[m
[31m-    'github_user': 'grantjenks',[m
[31m-    'github_repo': 'free-python-games',[m
[31m-    'github_type': 'star',[m
[31m-}[m
[31m-[m
[31m-# Add any paths that contain custom static files (such as style sheets) here,[m
[31m-# relative to this directory. They are copied after the builtin static files,[m
[31m-# so a file named "default.css" will overwrite the builtin "default.css".[m
[31m-html_static_path = ['_static'][m
[31m-[m
[31m-# Custom sidebar templates, must be a dictionary that maps document names[m
[31m-# to template names.[m
[31m-#[m
[31m-# The default sidebars (for documents that don't match any pattern) are[m
[31m-# defined by theme itself.  Builtin themes are using these templates by[m
[31m-# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',[m
[31m-# 'searchbox.html']``.[m
[31m-html_sidebars = {[m
[31m-    '**': [[m
[31m-        'about.html',[m
[31m-        'gumroad.html',[m
[31m-        'localtoc.html',[m
[31m-        'relations.html',[m
[31m-        'searchbox.html',[m
[31m-    ][m
[31m-}[m
[31m-[m
[31m-[m
[31m-# -- Options for HTMLHelp output ---------------------------------------------[m
[31m-[m
[31m-# Output file base name for HTML help builder.[m
[31m-htmlhelp_basename = 'FreePythonGamesDoc'[m
[31m-[m
[31m-[m
[31m-# -- Options for LaTeX output ------------------------------------------------[m
[31m-[m
[31m-latex_elements = {[m
[31m-    # The paper size ('letterpaper' or 'a4paper').[m
[31m-    #[m
[31m-    # 'papersize': 'letterpaper',[m
[31m-[m
[31m-    # The font size ('10pt', '11pt' or '12pt').[m
[31m-    #[m
[31m-    # 'pointsize': '10pt',[m
[31m-[m
[31m-    # Additional stuff for the LaTeX preamble.[m
[31m-    #[m
[31m-    # 'preamble': '',[m
[31m-[m
[31m-    # Latex figure (float) alignment[m
[31m-    #[m
[31m-    # 'figure_align': 'htbp',[m
[31m-}[m
[31m-[m
[31m-# Grouping the document tree into LaTeX files. List of tuples[m
[31m-# (source start file, target name, title,[m
[31m-#  author, documentclass [howto, manual, or own class]).[m
[31m-latex_documents = [[m
[31m-    (master_doc, 'FreePythonGames.tex', 'Free Python Games Documentation',[m
[31m-     'Grant Jenks', 'manual'),[m
[31m-][m
[31m-[m
[31m-[m
[31m-# -- Options for manual page output ------------------------------------------[m
[31m-[m
[31m-# One entry per manual page. List of tuples[m
[31m-# (source start file, name, description, authors, manual section).[m
[31m-man_pages = [[m
[31m-    (master_doc, 'freepythongames', 'Free Python Games Documentation',[m
[31m-     [author], 1)[m
[31m-][m
[31m-[m
[31m-[m
[31m-# -- Options for Texinfo output ----------------------------------------------[m
[31m-[m
[31m-# Grouping the document tree into Texinfo files. List of tuples[m
[31m-# (source start file, target name, title, author,[m
[31m-#  dir menu entry, description, category)[m
[31m-texinfo_documents = [[m
[31m-    (master_doc, 'FreePythonGames', 'Free Python Games Documentation',[m
[31m-     author, 'FreePythonGames', 'Free Python Games for fun and learning.',[m
[31m-     'Miscellaneous'),[m
[31m-][m
[31m-[m
[31m-[m
[31m-# -- Options for Epub output -------------------------------------------------[m
[31m-[m
[31m-# Bibliographic Dublin Core info.[m
[31m-epub_title = project[m
[31m-[m
[31m-# The unique identifier of the text. This can be a ISBN number[m
[31m-# or the project homepage.[m
[31m-#[m
[31m-# epub_identifier = ''[m
[31m-[m
[31m-# A unique identification for the text.[m
[31m-#[m
[31m-# epub_uid = ''[m
[31m-[m
[31m-# A list of files that should not be packed into the epub file.[m
[31m-epub_exclude_files = ['search.html'][m
[31m-[m
[31m-[m
[31m-# -- Extension configuration -------------------------------------------------[m
[31m-[m
[31m-# -- Options for todo extension ----------------------------------------------[m
[31m-[m
[31m-# If true, `todo` and `todoList` produce output, else they produce nothing.[m
[31m-todo_include_todos = True[m
[1mdiff --git a/docs/connect.rst b/docs/connect.rst[m
[1mdeleted file mode 100644[m
[1mindex 3a34627..0000000[m
[1m--- a/docs/connect.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Connect Four[m
[31m-============[m
[31m-[m
[31m-Connect Four, two-player connection game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/connect.py[m
[1mdiff --git a/docs/crypto.rst b/docs/crypto.rst[m
[1mdeleted file mode 100644[m
[1mindex 70cc34c..0000000[m
[1m--- a/docs/crypto.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Crypto[m
[31m-======[m
[31m-[m
[31m-Crypto: tool for encrypting and decrypting messages.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/crypto.py[m
[1mdiff --git a/docs/curriculum.rst b/docs/curriculum.rst[m
[1mdeleted file mode 100644[m
[1mindex a97d30d..0000000[m
[1m--- a/docs/curriculum.rst[m
[1m+++ /dev/null[m
[36m@@ -1,198 +0,0 @@[m
[31m-Free Python Games Curriculum[m
[31m-============================[m
[31m-[m
[31m-What follows are notes for a week-long curriculum developed for Maker Camp at[m
[31m-The River Church Community. Maker Camp was a summer day camp for Middle School[m
[31m-students in the California Bay Area.[m
[31m-[m
[31m-- Each game has exercises at the top.[m
[31m-- Visualize code with http://pythontutor.com[m
[31m-- Extras: $ python3 -m turtledemo[m
[31m-[m
[31m-[m
[31m-Day 1[m
[31m------[m
[31m-[m
[31m-- What is a computer? Calculator + Clock.[m
[31m-- Discuss Alan Turing and Turing Machines.[m
[31m-- Discuss John Von Neumann and Von Neumann Machines.[m
[31m-- What is a program? Computer Recipe.[m
[31m-- Introduce Terminal, black background, give the computer commands.[m
[31m-- Introduce Python Shell, white background, write Python statements.[m
[31m-- Activity: connect and decorate computers.[m
[31m-- Problem solving: divide and conquer.[m
[31m-- Statements: assignment, if/elif/else, while, import[m
[31m-- Data types: int, str[m
[31m-- Functions: print, help, int[m
[31m-- Modules: random[m
[31m-[m
[31m-Games[m
[31m-.....[m
[31m-[m
[31m-- :doc:`guess`.py - Guess number within range.[m
[31m-[m
[31m-  - Explain: from random import randint[m
[31m-  - randint(...)[m
[31m-  - Variables[m
[31m-  - Equality[m
[31m-  - print(...)[m
[31m-  - Inequality[m
[31m-  - input(...)[m
[31m-  - int(...)[m
[31m-  - Increase range to 1,000 and guess the number.[m
[31m-  - Discuss method of guessing. That's an algorithm![m
[31m-[m
[31m-- :doc:`snake`.py - Classic arcade game.[m
[31m-[m
[31m-Bible Story[m
[31m-...........[m
[31m-[m
[31m-- Genesis 1 - God the Creator (Creation)[m
[31m-[m
[31m-  1. What did God do at the beginning?[m
[31m-  2. What did God see in creation?[m
[31m-  3. What is special about people?[m
[31m-  4. Why do we create things?[m
[31m-[m
[31m-[m
[31m-Day 2[m
[31m------[m
[31m-[m
[31m-- Activity: Blind partner obstacle course.[m
[31m-- Problem solving: brute-force.[m
[31m-- Famous Christian programmer: Donald Knuth[m
[31m-- Statements: try/except, for, def[m
[31m-- Data types: float, bool[m
[31m-- Functions: type, dir, str, ord, chr[m
[31m-- Modules: turtle[m
[31m-[m
[31m-Games[m
[31m-.....[m
[31m-[m
[31m-- :doc:`crypto`.py - Encrypt, decrypt and decode messages.[m
[31m-[m
[31m-  - ord function and chr function[m
[31m-  - modulo operator[m
[31m-  - Write decode function[m
[31m-  - Encrypt numbers[m
[31m-[m
[31m-- :doc:`paint`.py - Draw shapes.[m
[31m-[m
[31m-  - Draw line[m
[31m-  - Draw square[m
[31m-  - for-statement, range function.[m
[31m-  - Draw five-pointed star: forward(50); right(144) (x5)[m
[31m-  - Draw six-pointed star: forward(50); left(60); forward(50); right(120) (x6)[m
[31m-  - help(...)[m
[31m-  - undo(...)[m
[31m-  - def-statement, refactor code to star function[m
[31m-  - color('green'); color('blue', 'yellow')[m
[31m-  - begin_fill(); end_fill()[m
[31m-  - width function[m
[31m-  - Write polygon(sides, length) function[m
[31m-[m
[31m-- :doc:`flappy`.py - Flappy Bird inspired game.[m
[31m-[m
[31m-Bible Story[m
[31m-...........[m
[31m-[m
[31m-- Genesis 6:5-22 - God the Engineer (Noah)[m
[31m-[m
[31m-  1. Why did God regret making people?[m
[31m-  2. How was Noah different?[m
[31m-  3. What was God's plan?[m
[31m-  4. How are we washed today?[m
[31m-[m
[31m-[m
[31m-Day 3[m
[31m------[m
[31m-[m
[31m-- Activity: Simon Says[m
[31m-- Famous Christian programmer: Fred Brooks[m
[31m-- Functions: onscreenclick, onkey, ontimer[m
[31m-[m
[31m-Games[m
[31m-.....[m
[31m-[m
[31m-- :doc:`bagels`.py - Digit guessing puzzle.[m
[31m-- Animation[m
[31m-[m
[31m-  - Draw arc: circle(100, 90)[m
[31m-  - flower(...)[m
[31m-  - Draw flower and rotate[m
[31m-  - ontimer(...)[m
[31m-  - hideturtle(); tracer(False); polygon(4, 200); update()[m
[31m-[m
[31m-- :doc:`tictactoe`.py - Tic-tac-toe.[m
[31m-[m
[31m-  - line(...)[m
[31m-  - grid(...)[m
[31m-  - drawx(...)[m
[31m-  - drawo(...)[m
[31m-  - floor(...)[m
[31m-  - onscreenclick(goto)[m
[31m-[m
[31m-- :doc:`simonsays`.py - Simon Says[m
[31m-- :doc:`cannon`.py - Hitting targets with projectiles.[m
[31m-[m
[31m-Bible Story[m
[31m-...........[m
[31m-[m
[31m-- Mark 1:1-18 - God the Programmer ("fishers of people")[m
[31m-[m
[31m-  1. What did Isaiah say would happen?[m
[31m-  2. What did John the Baptist say would happen?[m
[31m-  3. What did God say about Jesus? When?[m
[31m-  4. How did Jesus give his disciples new jobs?[m
[31m-[m
[31m-[m
[31m-Day 4[m
[31m------[m
[31m-[m
[31m-- Activity: Collage of concepts.[m
[31m-- Famous Christian programmer: Larry Wall[m
[31m-- Data types: list, dict, vector[m
[31m-[m
[31m-Games[m
[31m-.....[m
[31m-[m
[31m-- :doc:`bounce`.py - Simple animation demo.[m
[31m-- :doc:`pong`.py - Classic arcade game.[m
[31m-- :doc:`ant`.py - Simple animation demo.[m
[31m-- :doc:`tron`.py - Classic arcade game.[m
[31m-- :doc:`tiles`.py - Puzzle game of number shuffling.[m
[31m-[m
[31m-Bible Story[m
[31m-...........[m
[31m-[m
[31m-* John 9:1-33 - God the Debugger (Blind Man and Jesus)[m
[31m-[m
[31m-  1. What does Jesus tell the disciples?[m
[31m-  2. What does the man tell the Pharisees?[m
[31m-  3. What does the man believe about Jesus?[m
[31m-  4. What do you believe about Jesus?[m
[31m-[m
[31m-[m
[31m-Day 5[m
[31m------[m
[31m-[m
[31m-- Activity: Make or modify your own game.[m
[31m-- Famous Christian programmer: Jon Skeet[m
[31m-- Answer: What next?[m
[31m-[m
[31m-Games[m
[31m-.....[m
[31m-[m
[31m-- :doc:`connect`.py - Connect Four[m
[31m-- :doc:`memory`.py - Puzzle game of number pairs.[m
[31m-- :doc:`pacman`.py - Classic arcade game.[m
[31m-[m
[31m-Bible Story[m
[31m-...........[m
[31m-[m
[31m-* Revelation 21 - God the Restorer (New Heaven and New Earth)[m
[31m-[m
[31m-  1. What does God make? When?[m
[31m-  2. Who is the Lamb and the Bride?[m
[31m-  3. What is special about the city?[m
[31m-  4. How can we live in the Holy City?[m
[1mdiff --git a/docs/demo.py b/docs/demo.py[m
[1mdeleted file mode 100644[m
[1mindex 787d228..0000000[m
[1m--- a/docs/demo.py[m
[1m+++ /dev/null[m
[36m@@ -1,226 +0,0 @@[m
[31m-import pyautogui[m
[31m-import pynput.keyboard as kb[m
[31m-import queue[m
[31m-import subprocess as sp[m
[31m-import threading[m
[31m-import time[m
[31m-[m
[31m-[m
[31m-slide = 0[m
[31m-slides = [[m
[31m-'''[m
[31m-# Give the Gift of Python[m
[31m-[m
[31m-## Grant Jenks[m
[31m-[m
[31m-# 1. Python trainer for Fortune 100 companies.[m
[31m-# 2. Married to Chemistry teacher, father of two.[m
[31m-# 3. 100s of hours of 4-12th grade instruction.[m
[31m-'''.splitlines(),[m
[31m-'''[m
[31m-[m
[31m-## Setup[m
[31m-[m
[31m-# 1. Install Python: https://www.python.org/[m
[31m-# 2. Run IDLE: $ python -m idlelib.idle[m
[31m-# 3. Use built-in Turtle module![m
[31m-'''.splitlines(),[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Open the Turtle Window',[m
[31m-        '',[m
[31m-        'from turtle import *', 0.5,[m
[31m-        'reset()', 0.5,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Basic Commands',[m
[31m-        '',[m
[31m-        'forward(100)', 1,[m
[31m-        'right(90)', 1,[m
[31m-        'fd(100)', 1,[m
[31m-        'rt(90)', 1,[m
[31m-        'backward(-100)', 1,[m
[31m-        'left(-90)', 1,[m
[31m-        'forward(100)', 1,[m
[31m-        'right(90)', 1,[m
[31m-        'undo()', 1,[m
[31m-        'undo()', 1,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Loops',[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'for each in range(5):', 0.5,[m
[31m-        'bk(100)', 0.5,[m
[31m-        'lt(144)', 0.5,[m
[31m-        '', 3,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Functions and Shapes',[m
[31m-        '',[m
[31m-        'def square():', 0.5,[m
[31m-        'begin_fill()', 0.5,[m
[31m-        'for each in range(4):', 0.5,[m
[31m-        'forward(100)', 0.5,[m
[31m-        'right(90)', 0.5,[m
[31m-        -1,[m
[31m-        'end_fill()', 0.5,[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'square()', 3,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Dots',[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'help(dot)', 1,[m
[31m-        'dot(100)', 1,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Colors'[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'from itertools import *', 0.5,[m
[31m-        "colors = cycle(['red', 'green', 'blue', 'purple'])", 0.5,[m
[31m-        'def present():', 0.5,[m
[31m-        'for i in range(4):', 0.5,[m
[31m-	'color(next(colors))', 0.5,[m
[31m-        'square()', 0.5,[m
[31m-        'left(90)', 0.5,[m
[31m-        '',[m
[31m-        'present()', 5,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Locations',[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'def line(a, b, x, y):', 0.5,[m
[31m-        'up()', 0.5,[m
[31m-        'goto(a, b)', 0.5,[m
[31m-        'down()', 0.5,[m
[31m-        'goto(x, y)', 0.5,[m
[31m-        '',[m
[31m-        "color('red')", 0.5,[m
[31m-        'width(20)', 0.5,[m
[31m-        'line(-100, -100, 0, 200)', 1,[m
[31m-        'line(0, 200, 100, -100)', 1,[m
[31m-        'line(100, -100, -100, -100)', 1,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Mouse Inputs',[m
[31m-        '',[m
[31m-        'width(10)', 0.5,[m
[31m-        "color('green')", 0.5,[m
[31m-        'def tap(x, y):', 0.5,[m
[31m-        'goto(x, y)', 0.5,[m
[31m-        'dot(20)', 0.5,[m
[31m-        '',[m
[31m-        'onscreenclick(tap)', 0.5,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Keyboard Events',[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'width(10)', 0.5,[m
[31m-        "onkey(lambda: fd(30), 'Up')", 0.5,[m
[31m-        "onkey(lambda: bk(30), 'Down')", 0.5,[m
[31m-        "onkey(lambda: lt(30), 'Left')", 0.5,[m
[31m-        "onkey(lambda: rt(30), 'Right')", 0.5,[m
[31m-        'listen()', 0.5,[m
[31m-    ],[m
[31m-    [[m
[31m-        '',[m
[31m-        '## Animation',[m
[31m-        '',[m
[31m-        'hideturtle()', 0.5,[m
[31m-        'tracer(False)', 0.5,[m
[31m-        'running = True', 0.5,[m
[31m-        'def draw():', 0.5,[m
[31m-        'clear()', 0.5,[m
[31m-        'present()', 0.5,[m
[31m-        'update()', 0.5,[m
[31m-        'left(1)', 0.5,[m
[31m-        'if running:', 0.5,[m
[31m-        'ontimer(draw, 100)',[m
[31m-        '',[m
[31m-        'reset()', 0.5,[m
[31m-        'draw()', 0.5,[m
[31m-    ],[m
[31m-'''[m
[31m-[m
[31m-## Free Python Games[m
[31m-[m
[31m-# 1. Search: Free Python Games[m
[31m-# 2. $ python -m pip install freegames[m
[31m-# 3. http://www.grantjenks.com/docs/freegames/[m
[31m-'''.splitlines(),[m
[31m-][m
[31m-[m
[31m-[m
[31m-def worker():[m
[31m-    global slide[m
[31m-    while True:[m
[31m-        key = inputs.get()[m
[31m-        if key == kb.Key.esc:[m
[31m-            print('Typing slide', slide)[m
[31m-            parts = slides[slide][m
[31m-            for part in parts:[m
[31m-                if part == '':[m
[31m-                    pyautogui.press('enter')[m
[31m-                    time.sleep(0.25)[m
[31m-                elif part == -1:[m
[31m-                    pyautogui.press('backspace')[m
[31m-                elif isinstance(part, str):[m
[31m-                    pyautogui.typewrite(part, interval=0.1)[m
[31m-                    pyautogui.press('enter')[m
[31m-                else:[m
[31m-                    time.sleep(part)[m
[31m-            slide += 1[m
[31m-[m
[31m-[m
[31m-def ticker():[m
[31m-    def on_press(key):[m
[31m-        inputs.put(key)[m
[31m-[m
[31m-    with kb.Listener(on_press=on_press) as listener:[m
[31m-        listener.join()[m
[31m-[m
[31m-[m
[31m-def commander():[m
[31m-    global slide[m
[31m-    while True:[m
[31m-        value = input()[m
[31m-        if value == 'q':[m
[31m-            exit()[m
[31m-        try:[m
[31m-            slide = int(value)[m
[31m-        except ValueError:[m
[31m-            pass[m
[31m-[m
[31m-[m
[31m-def main():[m
[31m-    global inputs[m
[31m-    idle = sp.Popen(['python', '-m', 'idlelib.idle'])[m
[31m-    inputs = queue.Queue()[m
[31m-    work = threading.Thread(target=worker)[m
[31m-    work.start()[m
[31m-    tick = threading.Thread(target=ticker)[m
[31m-    tick.start()[m
[31m-    cmdr = threading.Thread(target=commander)[m
[31m-    cmdr.start()[m
[31m-    cmdr.join()[m
[31m-    tick.join()[m
[31m-    work.join()[m
[31m-    idle.wait()[m
[31m-[m
[31m-[m
[31m-if __name__ == '__main__':[m
[31m-    main()[m
[1mdiff --git a/docs/development.rst b/docs/development.rst[m
[1mdeleted file mode 100644[m
[1mindex 9bebb26..0000000[m
[1m--- a/docs/development.rst[m
[1m+++ /dev/null[m
[36m@@ -1,75 +0,0 @@[m
[31m-Free Python Games Development[m
[31m-=============================[m
[31m-[m
[31m-:doc:`Free Python Games <index>` development is lead by Grant Jenks[m
[31m-<contact@grantjenks.com>.[m
[31m-[m
[31m-Collaborators Welcome[m
[31m----------------------[m
[31m-[m
[31m-#. Search issues or open a new issue to start a discussion around a bug.[m
[31m-#. Fork the `GitHub repository`_ and make your changes in a new branch.[m
[31m-#. Write a test which shows the bug was fixed.[m
[31m-#. Send a pull request and message the development lead until its merged and[m
[31m-   published.[m
[31m-[m
[31m-.. _`GitHub repository`: https://github.com/grantjenks/free-python-games/[m
[31m-[m
[31m-Requests for Contributions[m
[31m---------------------------[m
[31m-[m
[31m-#. Simplifications to existing games.[m
[31m-#. Refactoring to simplify games.[m
[31m-#. Improved documentation.[m
[31m-#. Additional games. Requirements for new games:[m
[31m-[m
[31m-   * Fun to play.[m
[31m-   * Matching code style.[m
[31m-   * Limited Python feature set.[m
[31m-   * Short (less than 100 lines of code).[m
[31m-[m
[31m-Get the Code[m
[31m-------------[m
[31m-[m
[31m-:doc:`Free Python Games <index>` is actively developed in a `GitHub[m
[31m-repository`_.[m
[31m-[m
[31m-You can either clone the public repository::[m
[31m-[m
[31m-    $ git clone https://github.com/grantjenks/free-python-games.git[m
[31m-[m
[31m-Download the `tarball <https://github.com/grantjenks/free-python-games/tarball/master>`_::[m
[31m-[m
[31m-    $ curl -OL https://github.com/grantjenks/free-python-games/tarball/master[m
[31m-[m
[31m-Or, download the `zipball <https://github.com/grantjenks/free-python-games/zipball/master>`_::[m
[31m-[m
[31m-    $ curl -OL https://github.com/grantjenks/free-python-games/zipball/master[m
[31m-[m
[31m-Installing Dependencies[m
[31m------------------------[m
[31m-[m
[31m-Install development dependencies with `pip <http://www.pip-installer.org/>`_::[m
[31m-[m
[31m-    $ pip install -r requirements.txt[m
[31m-[m
[31m-All packages for running tests and building documentation will be installed.[m
[31m-[m
[31m-Testing[m
[31m--------[m
[31m-[m
[31m-:doc:`Free Python Games <index>` currently tests against three versions of[m
[31m-Python:[m
[31m-[m
[31m-* CPython 3.4[m
[31m-* CPython 3.5[m
[31m-* CPython 3.6[m
[31m-[m
[31m-Testing uses `tox <https://pypi.python.org/pypi/tox>`_. If you don't want to[m
[31m-install all the development requirements, then, after downloading, you can[m
[31m-simply run::[m
[31m-[m
[31m-    $ python setup.py test[m
[31m-[m
[31m-The test argument to setup.py will download a minimal testing infrastructure[m
[31m-and run the tests.[m
[1mdiff --git a/docs/fidget.rst b/docs/fidget.rst[m
[1mdeleted file mode 100644[m
[1mindex 1e5a734..0000000[m
[1m--- a/docs/fidget.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Fidget[m
[31m-======[m
[31m-[m
[31m-Fidget, inspired by fidget spinners.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/fidget.py[m
[1mdiff --git a/docs/flappy.rst b/docs/flappy.rst[m
[1mdeleted file mode 100644[m
[1mindex eaead5f..0000000[m
[1m--- a/docs/flappy.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Flappy[m
[31m-======[m
[31m-[m
[31m-Flappy, game inspired by Flappy Bird.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/flappy.py[m
[1mdiff --git a/docs/give-gift-python.rst b/docs/give-gift-python.rst[m
[1mdeleted file mode 100644[m
[1mindex 69a2246..0000000[m
[1m--- a/docs/give-gift-python.rst[m
[1m+++ /dev/null[m
[36m@@ -1,165 +0,0 @@[m
[31m-Give the Gift of Python[m
[31m-=======================[m
[31m-[m
[31m-* `Give the Gift of Python Video`_[m
[31m-* Talk given at SF Python Holiday Party on December 5, 2018.[m
[31m-[m
[31m-.. _`Give the Gift of Python Video`: https://www.youtube.com/watch?v=BVI78g4V4so[m
[31m-[m
[31m-Who am I?[m
[31m----------[m
[31m-[m
[31m-1. Python programmer.[m
[31m-2. Hundreds of hours of classroom instruction.[m
[31m-[m
[31m-What we need?[m
[31m--------------[m
[31m-[m
[31m-1. Interest![m
[31m-2. Typing skills.[m
[31m-3. Math: Arithmetic, Algebra, Geometry[m
[31m-[m
[31m-Setup[m
[31m------[m
[31m-[m
[31m-1. Install Python, https://www.python.org/[m
[31m-2. Run IDLE, ``$ python -m idlelib.idle``[m
[31m-3. Write code.[m
[31m-[m
[31m-Open the Turtle Window[m
[31m-......................[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> from turtle import *[m
[31m-   >>> reset()[m
[31m-[m
[31m-Commands[m
[31m-........[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> forward(100)[m
[31m-   >>> right(90)[m
[31m-   >>> forward(100)[m
[31m-   >>> right(90)[m
[31m-   >>> forward(100)[m
[31m-   >>> right(90)[m
[31m-   >>> forward(100)[m
[31m-   >>> right(90)[m
[31m-[m
[31m-Loops[m
[31m-.....[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> for each in range(4):[m
[31m-   ...     forward(100)[m
[31m-   ...     right(90)[m
[31m-[m
[31m-Shapes[m
[31m-......[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> begin_fill()[m
[31m-   >>> for each in range(4):[m
[31m-   ...     forward(100)[m
[31m-   ...     right(90)[m
[31m-   >>> end_fill()[m
[31m-[m
[31m-Dots[m
[31m-....[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> dot(10)[m
[31m-[m
[31m-Functions[m
[31m-.........[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> def square():[m
[31m-   ...     begin_fill()[m
[31m-   ...     for each in range(4):[m
[31m-   ...         forward(100)[m
[31m-   ...         right(90)[m
[31m-   ...         end_fill()[m
[31m-   >>> reset()[m
[31m-   >>> square()[m
[31m-[m
[31m-Colors[m
[31m-......[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> color('orange')[m
[31m-   >>> square()[m
[31m-[m
[31m-Locations[m
[31m-.........[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> up()[m
[31m-   >>> goto(-100, 100)[m
[31m-   >>> down()[m
[31m-   >>> square()[m
[31m-[m
[31m-Inputs[m
[31m-......[m
[31m-[m
[31m-- listen[m
[31m-- onclick[m
[31m-- onkey[m
[31m-[m
[31m-Animation[m
[31m-.........[m
[31m-[m
[31m-- ontimer[m
[31m-- hideturtle[m
[31m-- tracer[m
[31m-- clear[m
[31m-- update[m
[31m-[m
[31m-.. code-block:: python[m
[31m-[m
[31m-   >>> reset()[m
[31m-   >>> hideturtle()[m
[31m-   >>> tracer(False)[m
[31m-   >>> square()[m
[31m-   >>> clear()[m
[31m-   >>> square()[m
[31m-   >>> update()[m
[31m-[m
[31m-Tips[m
[31m-----[m
[31m-[m
[31m-1. help(...)[m
[31m-2. undo(...)[m
[31m-3. Embrace copy/paste[m
[31m-4. Close window/reset()[m
[31m-[m
[31m-Activities[m
[31m-----------[m
[31m-[m
[31m-1. Spell your name.[m
[31m-2. ``python -m pip install freegames``[m
[31m-[m
[31m-Notes[m
[31m------[m
[31m-[m
[31m-1. Start simple! Start easy! Start plain![m
[31m-2. Focus on fun! No PEP8. No Pylint.[m
[31m-3. Make it readable! Say it aloud.[m
[31m-4. No special shells! No IPython.[m
[31m-5. Show them mistakes! Red is your favorite color![m
[31m-6. No virtual environments![m
[31m-7. If they're not ready, don't push them![m
[31m-8. No dunder methods or attributes! No __name__ or __main__.[m
[1mdiff --git a/docs/guess.rst b/docs/guess.rst[m
[1mdeleted file mode 100644[m
[1mindex f158f8d..0000000[m
[1m--- a/docs/guess.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Guess[m
[31m-=====[m
[31m-[m
[31m-Guess a number within a range.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/guess.py[m
[1mdiff --git a/docs/illusion.rst b/docs/illusion.rst[m
[1mdeleted file mode 100644[m
[1mindex 6bb58ed..0000000[m
[1m--- a/docs/illusion.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Illusion[m
[31m-========[m
[31m-[m
[31m-An optical illusion.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/illusion.py[m
[1mdiff --git a/docs/index.rst b/docs/index.rst[m
[1mdeleted file mode 100644[m
[1mindex eeef745..0000000[m
[1m--- a/docs/index.rst[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-.. include:: ../README.rst[m
[31m-[m
[31m-.. toctree::[m
[31m-   :hidden:[m
[31m-[m
[31m-   give-gift-python[m
[31m-   curriculum[m
[31m-   api[m
[31m-   development[m
[31m-   guess[m
[31m-   snake[m
[31m-   crypto[m
[31m-   illusion[m
[31m-   paint[m
[31m-   maze[m
[31m-   flappy[m
[31m-   bagels[m
[31m-   tictactoe[m
[31m-   ant[m
[31m-   simonsays[m
[31m-   cannon[m
[31m-   bounce[m
[31m-   pong[m
[31m-   life[m
[31m-   tron[m
[31m-   typing[m
[31m-   tiles[m
[31m-   connect[m
[31m-   memory[m
[31m-   minesweeper[m
[31m-   avoid[m
[31m-   pacman[m
[31m-   fidget[m
[31m-   madlibs[m
[31m-   rps[m
[1mdiff --git a/docs/life.rst b/docs/life.rst[m
[1mdeleted file mode 100644[m
[1mindex c4e7ad7..0000000[m
[1m--- a/docs/life.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Life[m
[31m-====[m
[31m-[m
[31m-Game of Life simulation.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/life.py[m
[1mdiff --git a/docs/madlibs.rst b/docs/madlibs.rst[m
[1mdeleted file mode 100644[m
[1mindex f10ea4a..0000000[m
[1m--- a/docs/madlibs.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Mad Libs[m
[31m-========[m
[31m-[m
[31m-Create a funny story from a not-so funny story[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/madlibs.py[m
[1mdiff --git a/docs/make.bat b/docs/make.bat[m
[1mdeleted file mode 100644[m
[1mindex cf66c02..0000000[m
[1m--- a/docs/make.bat[m
[1m+++ /dev/null[m
[36m@@ -1,36 +0,0 @@[m
[31m-@ECHO OFF[m
[31m-[m
[31m-pushd %~dp0[m
[31m-[m
[31m-REM Command file for Sphinx documentation[m
[31m-[m
[31m-if "%SPHINXBUILD%" == "" ([m
[31m-	set SPHINXBUILD=python -msphinx[m
[31m-)[m
[31m-set SOURCEDIR=.[m
[31m-set BUILDDIR=_build[m
[31m-set SPHINXPROJ=FreeGames[m
[31m-[m
[31m-if "%1" == "" goto help[m
[31m-[m
[31m-%SPHINXBUILD% >NUL 2>NUL[m
[31m-if errorlevel 9009 ([m
[31m-	echo.[m
[31m-	echo.The Sphinx module was not found. Make sure you have Sphinx installed,[m
[31m-	echo.then set the SPHINXBUILD environment variable to point to the full[m
[31m-	echo.path of the 'sphinx-build' executable. Alternatively you may add the[m
[31m-	echo.Sphinx directory to PATH.[m
[31m-	echo.[m
[31m-	echo.If you don't have Sphinx installed, grab it from[m
[31m-	echo.http://sphinx-doc.org/[m
[31m-	exit /b 1[m
[31m-)[m
[31m-[m
[31m-%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS%[m
[31m-goto end[m
[31m-[m
[31m-:help[m
[31m-%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS%[m
[31m-[m
[31m-:end[m
[31m-popd[m
[1mdiff --git a/docs/maze.rst b/docs/maze.rst[m
[1mdeleted file mode 100644[m
[1mindex 5c191e2..0000000[m
[1m--- a/docs/maze.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Maze[m
[31m-====[m
[31m-[m
[31m-Maze, move from one side to another.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/maze.py[m
[1mdiff --git a/docs/memory.rst b/docs/memory.rst[m
[1mdeleted file mode 100644[m
[1mindex fb9f1fb..0000000[m
[1m--- a/docs/memory.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Memory[m
[31m-======[m
[31m-[m
[31m-Memory, puzzle game of number pairs.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/memory.py[m
[1mdiff --git a/docs/minesweeper.rst b/docs/minesweeper.rst[m
[1mdeleted file mode 100644[m
[1mindex ecb9c18..0000000[m
[1m--- a/docs/minesweeper.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Minesweeper[m
[31m-===========[m
[31m-[m
[31m-Minesweeper, a logic puzzle game to clear the hidden mines.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/minesweeper.py[m
[1mdiff --git a/docs/pacman.rst b/docs/pacman.rst[m
[1mdeleted file mode 100644[m
[1mindex 023ee5b..0000000[m
[1m--- a/docs/pacman.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Pacman[m
[31m-======[m
[31m-[m
[31m-Pacman, classic arcade game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/pacman.py[m
[1mdiff --git a/docs/paint.rst b/docs/paint.rst[m
[1mdeleted file mode 100644[m
[1mindex 11f3926..0000000[m
[1m--- a/docs/paint.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Paint[m
[31m-=====[m
[31m-[m
[31m-Paint, for drawing shapes.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/paint.py[m
[1mdiff --git a/docs/pong.rst b/docs/pong.rst[m
[1mdeleted file mode 100644[m
[1mindex 03ba616..0000000[m
[1m--- a/docs/pong.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Pong[m
[31m-====[m
[31m-[m
[31m-Pong, classic arcade game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/pong.py[m
[1mdiff --git a/docs/rps.rst b/docs/rps.rst[m
[1mdeleted file mode 100644[m
[1mindex 57180fe..0000000[m
[1m--- a/docs/rps.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Rock, Paper, Scissors[m
[31m-=====================[m
[31m-[m
[31m-Rock, Paper, Scissors -- classic hand-to-hand combat game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/rps.py[m
[1mdiff --git a/docs/simonsays.rst b/docs/simonsays.rst[m
[1mdeleted file mode 100644[m
[1mindex ceeced1..0000000[m
[1m--- a/docs/simonsays.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Simon Says[m
[31m-==========[m
[31m-[m
[31m-A game of watching and recalling patterns.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/simonsays.py[m
[1mdiff --git a/docs/snake.rst b/docs/snake.rst[m
[1mdeleted file mode 100644[m
[1mindex a2e62a7..0000000[m
[1m--- a/docs/snake.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Snake[m
[31m-=====[m
[31m-[m
[31m-Snake, classic arcade game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/snake.py[m
[1mdiff --git a/docs/tictactoe.rst b/docs/tictactoe.rst[m
[1mdeleted file mode 100644[m
[1mindex c4f182e..0000000[m
[1m--- a/docs/tictactoe.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Tic Tac Toe[m
[31m-===========[m
[31m-[m
[31m-A paper-and-pencil game for two players.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/tictactoe.py[m
[1mdiff --git a/docs/tiles.rst b/docs/tiles.rst[m
[1mdeleted file mode 100644[m
[1mindex b474a3c..0000000[m
[1m--- a/docs/tiles.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Tiles[m
[31m-=====[m
[31m-[m
[31m-Tiles, number swapping game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/tiles.py[m
[1mdiff --git a/docs/tron.rst b/docs/tron.rst[m
[1mdeleted file mode 100644[m
[1mindex 4f7daef..0000000[m
[1m--- a/docs/tron.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Tron[m
[31m-====[m
[31m-[m
[31m-Tron, classic arcade game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/tron.py[m
[1mdiff --git a/docs/typing.rst b/docs/typing.rst[m
[1mdeleted file mode 100644[m
[1mindex 86062c5..0000000[m
[1m--- a/docs/typing.rst[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-Typing[m
[31m-======[m
[31m-[m
[31m-Typing, simple typing game.[m
[31m-[m
[31m-.. literalinclude:: ../src/freegames/typing.py[m
[1mdiff --git a/pacman.py b/pacman.py[m
[1mdeleted file mode 100644[m
[1mindex 644b35a..0000000[m
[1m--- a/pacman.py[m
[1m+++ /dev/null[m
[36m@@ -1,180 +0,0 @@[m
[31m-"""Pacman, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the board.[m
[31m-2. Change the number of ghosts.[m
[31m-3. Change where pacman starts.[m
[31m-4. Make the ghosts faster/slower.[m
[31m-5. Make the ghosts smarter.[m
[31m-"""[m
[31m-[m
[31m-from random import choice[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import floor, vector[m
[31m-[m
[31m-state = {'score': 0}[m
[31m-path = Turtle(visible=False)[m
[31m-writer = Turtle(visible=False)[m
[31m-aim = vector(5, 0)[m
[31m-pacman = vector(-40, -80)[m
[31m-ghosts = [[m
[31m-    [vector(-180, 160), vector(5, 0)],[m
[31m-    [vector(-180, -160), vector(0, 5)],[m
[31m-    [vector(100, 160), vector(0, -5)],[m
[31m-    [vector(100, -160), vector(-5, 0)],[m
[31m-][m
[31m-# fmt: off[m
[31m-tiles = [[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-][m
[31m-# fmt: on[m
[31m-[m
[31m-[m
[31m-def square(x, y):[m
[31m-    """Draw square using path at (x, y)."""[m
[31m-    path.up()[m
[31m-    path.goto(x, y)[m
[31m-    path.down()[m
[31m-    path.begin_fill()[m
[31m-[m
[31m-    for count in range(4):[m
[31m-        path.forward(20)[m
[31m-        path.left(90)[m
[31m-[m
[31m-    path.end_fill()[m
[31m-[m
[31m-[m
[31m-def offset(point):[m
[31m-    """Return offset of point in tiles."""[m
[31m-    x = (floor(point.x, 20) + 200) / 20[m
[31m-    y = (180 - floor(point.y, 20)) / 20[m
[31m-    index = int(x + y * 20)[m
[31m-    return index[m
[31m-[m
[31m-[m
[31m-def valid(point):[m
[31m-    """Return True if point is valid in tiles."""[m
[31m-    index = offset(point)[m
[31m-[m
[31m-    if tiles[index] == 0:[m
[31m-        return False[m
[31m-[m
[31m-    index = offset(point + 19)[m
[31m-[m
[31m-    if tiles[index] == 0:[m
[31m-        return False[m
[31m-[m
[31m-    return point.x % 20 == 0 or point.y % 20 == 0[m
[31m-[m
[31m-[m
[31m-def world():[m
[31m-    """Draw world using path."""[m
[31m-    bgcolor('black')[m
[31m-    path.color('blue')[m
[31m-[m
[31m-    for index in range(len(tiles)):[m
[31m-        tile = tiles[index][m
[31m-[m
[31m-        if tile > 0:[m
[31m-            x = (index % 20) * 20 - 200[m
[31m-            y = 180 - (index // 20) * 20[m
[31m-            square(x, y)[m
[31m-[m
[31m-            if tile == 1:[m
[31m-                path.up()[m
[31m-                path.goto(x + 10, y + 10)[m
[31m-                path.dot(2, 'white')[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Move pacman and all ghosts."""[m
[31m-    writer.undo()[m
[31m-    writer.write(state['score'])[m
[31m-[m
[31m-    clear()[m
[31m-[m
[31m-    if valid(pacman + aim):[m
[31m-        pacman.move(aim)[m
[31m-[m
[31m-    index = offset(pacman)[m
[31m-[m
[31m-    if tiles[index] == 1:[m
[31m-        tiles[index] = 2[m
[31m-        state['score'] += 1[m
[31m-        x = (index % 20) * 20 - 200[m
[31m-        y = 180 - (index // 20) * 20[m
[31m-        square(x, y)[m
[31m-[m
[31m-    up()[m
[31m-    goto(pacman.x + 10, pacman.y + 10)[m
[31m-    dot(20, 'yellow')[m
[31m-[m
[31m-    for point, course in ghosts:[m
[31m-        if valid(point + course):[m
[31m-            point.move(course)[m
[31m-        else:[m
[31m-            options = [[m
[31m-                vector(5, 0),[m
[31m-                vector(-5, 0),[m
[31m-                vector(0, 5),[m
[31m-                vector(0, -5),[m
[31m-            ][m
[31m-            plan = choice(options)[m
[31m-            course.x = plan.x[m
[31m-            course.y = plan.y[m
[31m-[m
[31m-        up()[m
[31m-        goto(point.x + 10, point.y + 10)[m
[31m-        dot(20, 'red')[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-    for point, course in ghosts:[m
[31m-        if abs(pacman - point) < 20:[m
[31m-            return[m
[31m-[m
[31m-    ontimer(move, 100)[m
[31m-[m
[31m-[m
[31m-def change(x, y):[m
[31m-    """Change pacman aim if valid."""[m
[31m-    if valid(pacman + vector(x, y)):[m
[31m-        aim.x = x[m
[31m-        aim.y = y[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-writer.goto(160, 160)[m
[31m-writer.color('white')[m
[31m-writer.write(state['score'])[m
[31m-listen()[m
[31m-onkey(lambda: change(5, 0), 'Right')[m
[31m-onkey(lambda: change(-5, 0), 'Left')[m
[31m-onkey(lambda: change(0, 5), 'Up')[m
[31m-onkey(lambda: change(0, -5), 'Down')[m
[31m-world()[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/pyproject.toml b/pyproject.toml[m
[1mdeleted file mode 100644[m
[1mindex f9fe6ef..0000000[m
[1m--- a/pyproject.toml[m
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-[build-system][m
[31m-requires = ["setuptools"][m
[31m-build-backend = "setuptools.build_meta"[m
[31m-[m
[31m-[project][m
[31m-name = "freegames"[m
[31m-description = "Free Python Games"[m
[31m-authors = [[m
[31m-    {"name" = "Grant Jenks", "email" = "contact@grantjenks.com"},[m
[31m-][m
[31m-readme = "README.rst"[m
[31m-requires-python = ">=3.7"[m
[31m-keywords = ["free", "games"][m
[31m-license = {"text" = "Apache 2.0"}[m
[31m-classifiers = [[m
[31m-    "Development Status :: 5 - Production/Stable",[m
[31m-    "Intended Audience :: Education",[m
[31m-    "Intended Audience :: End Users/Desktop",[m
[31m-    "License :: OSI Approved :: Apache Software License",[m
[31m-    "Natural Language :: English",[m
[31m-    "Programming Language :: Python",[m
[31m-    "Programming Language :: Python :: 3",[m
[31m-    "Topic :: Games/Entertainment",[m
[31m-    "Topic :: Games/Entertainment :: Arcade",[m
[31m-    "Topic :: Games/Entertainment :: Board Games",[m
[31m-    "Topic :: Games/Entertainment :: Puzzle Games",[m
[31m-    "Topic :: Games/Entertainment :: Side-Scrolling/Arcade Games",[m
[31m-    "Topic :: Games/Entertainment :: Simulation",[m
[31m-    "Topic :: Games/Entertainment :: Turn Based Strategy",[m
[31m-][m
[31m-dynamic = ["version"][m
[31m-[m
[31m-[project.scripts][m
[31m-freegames = "freegames.__main__:main"[m
[31m-[m
[31m-[project.urls][m
[31m-Documentation = "https://grantjenks.com/docs/freegames/"[m
[31m-Funding = "https://gum.co/freegames"[m
[31m-Source = "https://github.com/grantjenks/free-python-games"[m
[31m-Tracker = "https://github.com/grantjenks/django-codemirror6/issues"[m
[31m-[m
[31m-[tool.setuptools.dynamic][m
[31m-version = {attr = "freegames.__version__"}[m
[31m-[m
[31m-[tool.setuptools.package-data][m
[31m-freegames = ["*.gif"][m
[31m-[m
[31m-[tool.setuptools.packages.find][m
[31m-where = ["src"][m
[1mdiff --git a/requirements-dev.txt b/requirements-dev.txt[m
[1mdeleted file mode 100644[m
[1mindex 7f3b5cf..0000000[m
[1m--- a/requirements-dev.txt[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m--r requirements.txt[m
[31m-blue[m
[31m-build[m
[31m-coverage[m
[31m-doc8[m
[31m-flake8[m
[31m-isort[m
[31m-ipython[m
[31m-pytest[m
[31m-pytest-cov[m
[31m-rstcheck[m
[31m-sphinx[m
[31m-tox[m
[31m-twine[m
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mdeleted file mode 100644[m
[1mindex d6e1198..0000000[m
[1m--- a/requirements.txt[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m--e .[m
[1mdiff --git a/src/freegames/__init__.py b/src/freegames/__init__.py[m
[1mdeleted file mode 100644[m
[1mindex 84e1d1a..0000000[m
[1m--- a/src/freegames/__init__.py[m
[1m+++ /dev/null[m
[36m@@ -1,68 +0,0 @@[m
[31m-"""Free Python Games[m
[31m-[m
[31m-Free Python Games is an Apache2 licensed collection of free Python games[m
[31m-intended for education and fun. The games are written in simple Python code and[m
[31m-designed for experimentation and changes. Simplified versions of several[m
[31m-classic arcade games are included.[m
[31m-[m
[31m-Python is one of the top-five most popular programming languages in the world[m
[31m-and available for free from www.python.org. Python includes an extensive[m
[31m-Standard Library distributed with your installation. The Standard Library has a[m
[31m-module called Turtle which is a popular way to introduce programming to[m
[31m-kids. Turtle was part of the original Logo programming language developed by[m
[31m-Wally Feurzig and Seymour Papert in 1966. All of the games in Free Python Games[m
[31m-are implemented using Python and its Turtle module.[m
[31m-[m
[31m-Starting in 2012, Free Python Games began as an after school program to teach[m
[31m-programming to inner-city youth. The goal was to have fun as much as it was to[m
[31m-learn. Since then the games have been improved and used in a variety of[m
[31m-settings ranging from classrooms to summer day-camps.[m
[31m-[m
[31m-The games run anywhere Python can be installed which includes desktop computers[m
[31m-running Windows, Mac OS, or Linux and older or low-power hardware such as the[m
[31m-Raspberry Pi. Kids across the United States in grades 6th-12th have enjoyed[m
[31m-learning about topics such as encryption and projectile motion through games.[m
[31m-[m
[31m-Each game is entirely independent from the others and includes comments along[m
[31m-with a list of exercises to work through with students. Creativity and[m
[31m-flexibility is important. There is no right or wrong way to implement a new[m
[31m-feature or behavior! You never know which games students will engage with best.[m
[31m-[m
[31m-Free Python Games supports a command-line interface (CLI). Help for the CLI is[m
[31m-available using::[m
[31m-[m
[31m-  $ python3 -m freegames --help[m
[31m-[m
[31m-The CLI supports three commands: list, copy, and show. For a list of all games[m
[31m-run::[m
[31m-[m
[31m-  $ python3 -m freegames list[m
[31m-[m
[31m-Any of the listed games may be played by executing the Python module from the[m
[31m-command-line. To reference the Python module, combine "freegames" with the name[m
[31m-of the game. For example, to play the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m freegames.snake[m
[31m-[m
[31m-Games can be modified by copying their source code. The copy command will[m
[31m-create a Python file in your local directory which you can edit. For example,[m
[31m-to copy and play the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m freegames copy snake[m
[31m-  $ python3 snake.py[m
[31m-[m
[31m-Python includes a built-in text editor named IDLE which can also execute Python[m
[31m-code. To launch the editor and make changes to the "snake" game run::[m
[31m-[m
[31m-  $ python3 -m idlelib.idle snake.py[m
[31m-"""[m
[31m-[m
[31m-from .utils import floor, line, path, square, vector[m
[31m-[m
[31m-__all__ = ['floor', 'line', 'path', 'square', 'vector'][m
[31m-[m
[31m-__title__ = 'freegames'[m
[31m-__version__ = '2.5.3'[m
[31m-__author__ = 'Grant Jenks'[m
[31m-__license__ = 'Apache 2.0'[m
[31m-__copyright__ = '2017-2023, Grant Jenks'[m
[1mdiff --git a/src/freegames/__main__.py b/src/freegames/__main__.py[m
[1mdeleted file mode 100644[m
[1mindex 73ed8a6..0000000[m
[1m--- a/src/freegames/__main__.py[m
[1m+++ /dev/null[m
[36m@@ -1,75 +0,0 @@[m
[31m-"""Free Games CLI[m
[31m-"""[m
[31m-[m
[31m-import argparse[m
[31m-import os[m
[31m-import runpy[m
[31m-[m
[31m-[m
[31m-def game_file(name):[m
[31m-    """Return True if filename represents a game."""[m
[31m-    return ([m
[31m-        name.endswith('.py')[m
[31m-        and not name.startswith('__')[m
[31m-        and name != 'utils.py'[m
[31m-    )[m
[31m-[m
[31m-[m
[31m-def main():[m
[31m-    directory = os.path.dirname(os.path.realpath(__file__))[m
[31m-    contents = os.listdir(directory)[m
[31m-    games = sorted(name[:-3] for name in contents if game_file(name))[m
[31m-[m
[31m-    parser = argparse.ArgumentParser([m
[31m-        prog='freegames',[m
[31m-        description='Free Python Games',[m
[31m-        epilog='Copyright 2023 Grant Jenks',[m
[31m-    )[m
[31m-    subparsers = parser.add_subparsers(dest='command', help='sub-command help')[m
[31m-    subparsers.required = True[m
[31m-[m
[31m-    subparsers.add_parser('list', help='list games')[m
[31m-[m
[31m-    parser_play = subparsers.add_parser('play', help='play free Python games')[m
[31m-    parser_play.add_argument('game', choices=games, help='game name')[m
[31m-[m
[31m-    parser_show = subparsers.add_parser('show', help='show game source code')[m
[31m-    parser_show.add_argument('game', choices=games, help='game name')[m
[31m-[m
[31m-    parser_copy = subparsers.add_parser('copy', help='copy game source code')[m
[31m-    parser_copy.add_argument('game', choices=games, help='game name')[m
[31m-    parser_copy.add_argument([m
[31m-        '--force',[m
[31m-        action='store_true',[m
[31m-        help='overwrite existing file',[m
[31m-    )[m
[31m-[m
[31m-    args = parser.parse_args()[m
[31m-[m
[31m-    if args.command == 'list':[m
[31m-        for game in games:[m
[31m-            print(game)[m
[31m-    elif args.command == 'play':[m
[31m-        runpy.run_module('freegames.' + args.game)[m
[31m-    elif args.command == 'show':[m
[31m-        with open(os.path.join(directory, args.game + '.py')) as reader:[m
[31m-            print(reader.read())[m
[31m-    else:[m
[31m-        assert args.command == 'copy'[m
[31m-        filename = args.game + '.py'[m
[31m-[m
[31m-        with open(os.path.join(directory, filename)) as reader:[m
[31m-            text = reader.read()[m
[31m-[m
[31m-        cwd = os.getcwd()[m
[31m-        path = os.path.join(cwd, filename)[m
[31m-[m
[31m-        if args.force or not os.path.exists(path):[m
[31m-            with open(path, 'w') as writer:[m
[31m-                writer.write(text)[m
[31m-        else:[m
[31m-            print('ERROR: File already exists. Specify --force to overwrite.')[m
[31m-[m
[31m-[m
[31m-if __name__ == '__main__':[m
[31m-    main()  # pragma: no cover[m
[1mdiff --git a/src/freegames/ant.py b/src/freegames/ant.py[m
[1mdeleted file mode 100644[m
[1mindex 45b32fc..0000000[m
[1m--- a/src/freegames/ant.py[m
[1m+++ /dev/null[m
[36m@@ -1,46 +0,0 @@[m
[31m-"""Ant, simple animation demo.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Wrap ant around screen boundaries.[m
[31m-2. Make the ant leave a trail.[m
[31m-3. Change the ant color based on position.[m
[31m-   Hint: colormode(255); color(0, 100, 200)[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-ant = vector(0, 0)[m
[31m-aim = vector(2, 0)[m
[31m-[m
[31m-[m
[31m-def wrap(value):[m
[31m-    """Wrap value around -200 and 200."""[m
[31m-    return value  # TODO[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Move ant and draw screen."""[m
[31m-    ant.move(aim)[m
[31m-    ant.x = wrap(ant.x)[m
[31m-    ant.y = wrap(ant.y)[m
[31m-[m
[31m-    aim.move(random() - 0.5)[m
[31m-    aim.rotate(random() * 10 - 5)[m
[31m-[m
[31m-    clear()[m
[31m-    goto(ant.x, ant.y)[m
[31m-    dot(4)[m
[31m-[m
[31m-    ontimer(draw, 100)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-up()[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/avoid.py b/src/freegames/avoid.py[m
[1mdeleted file mode 100644[m
[1mindex 4c33933..0000000[m
[1m--- a/src/freegames/avoid.py[m
[1m+++ /dev/null[m
[36m@@ -1,94 +0,0 @@[m
[31m-"""Avoid, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Display the duration of the game.[m
[31m-2. Vary the size of the bombs.[m
[31m-3. Vary the speed of the bombs.[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-north, south = vector(0, 4), vector(0, -4)[m
[31m-east, west = vector(4, 0), vector(-4, 0)[m
[31m-options = north, south, east, west[m
[31m-[m
[31m-player = vector(0, 0)[m
[31m-aim = choice(options).copy()[m
[31m-bombs = [][m
[31m-speeds = [][m
[31m-[m
[31m-[m
[31m-def inside(point):[m
[31m-    """Return True if point on screen."""[m
[31m-    return -200 < point.x < 200 and -200 < point.y < 200[m
[31m-[m
[31m-[m
[31m-def draw(alive):[m
[31m-    """Draw screen objects."""[m
[31m-    clear()[m
[31m-    goto(player.x, player.y)[m
[31m-    color = 'blue' if alive else 'red'[m
[31m-    dot(10, color)[m
[31m-    for bomb in bombs:[m
[31m-        goto(bomb.x, bomb.y)[m
[31m-        dot(20, 'black')[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Update player and bomb positions."""[m
[31m-    player.move(aim)[m
[31m-[m
[31m-    for bomb, speed in zip(bombs, speeds):[m
[31m-        bomb.move(speed)[m
[31m-[m
[31m-    if randrange(10) == 0:[m
[31m-        speed = choice(options).copy()[m
[31m-        offset = randrange(-199, 200)[m
[31m-[m
[31m-        if speed == north:[m
[31m-            bomb = vector(offset, -199)[m
[31m-        if speed == south:[m
[31m-            bomb = vector(offset, 199)[m
[31m-        if speed == east:[m
[31m-            bomb = vector(-199, offset)[m
[31m-        if speed == west:[m
[31m-            bomb = vector(199, offset)[m
[31m-[m
[31m-        bombs.append(bomb)[m
[31m-        speeds.append(speed)[m
[31m-[m
[31m-    for index in reversed(range(len(bombs))):[m
[31m-        bomb = bombs[index][m
[31m-        if not inside(bomb):[m
[31m-            del bombs[index][m
[31m-            del speeds[index][m
[31m-[m
[31m-    if not inside(player):[m
[31m-        draw(False)[m
[31m-        return[m
[31m-[m
[31m-    for bomb in bombs:[m
[31m-        if abs(bomb - player) < 15:[m
[31m-            draw(False)[m
[31m-            return[m
[31m-[m
[31m-    draw(True)[m
[31m-    ontimer(move, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-up()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-onkey(lambda: aim.set(north), 'Up')[m
[31m-onkey(lambda: aim.set(south), 'Down')[m
[31m-onkey(lambda: aim.set(east), 'Right')[m
[31m-onkey(lambda: aim.set(west), 'Left')[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/bagels.py b/src/freegames/bagels.py[m
[1mdeleted file mode 100644[m
[1mindex 4616b2f..0000000[m
[1m--- a/src/freegames/bagels.py[m
[1m+++ /dev/null[m
[36m@@ -1,73 +0,0 @@[m
[31m-"""Bagels, a number puzzle game.[m
[31m-[m
[31m-Exercises:[m
[31m-[m
[31m-1. Can you guess the number?[m
[31m-2. How much harder is 6 digits? Do you need more guesses?[m
[31m-3. What's the maximum number of digits we could support?[m
[31m-[m
[31m-Adapted from code in https://inventwithpython.com/chapter11.html[m
[31m-"""[m
[31m-[m
[31m-from random import sample, shuffle[m
[31m-[m
[31m-digits = 3[m
[31m-guesses = 10[m
[31m-[m
[31m-print('I am thinking of a', digits, 'digit number.')[m
[31m-print('Try to guess what it is.')[m
[31m-print('Here are some clues:')[m
[31m-print('When I say:    That means:')[m
[31m-print('  pico         One digit is correct but in the wrong position.')[m
[31m-print('  fermi        One digit is correct and in the right position.')[m
[31m-print('  bagels       No digit is correct.')[m
[31m-print('There are no repeated digits in the number.')[m
[31m-[m
[31m-# Create a random number.[m
[31m-[m
[31m-letters = sample('0123456789', digits)[m
[31m-[m
[31m-if letters[0] == '0':[m
[31m-    letters.reverse()[m
[31m-[m
[31m-number = ''.join(letters)[m
[31m-[m
[31m-print('I have thought up a number.')[m
[31m-print('You have', guesses, 'guesses to get it.')[m
[31m-[m
[31m-counter = 1[m
[31m-[m
[31m-while True:[m
[31m-    print('Guess #', counter)[m
[31m-    guess = input()[m
[31m-[m
[31m-    if len(guess) != digits:[m
[31m-        print('Wrong number of digits. Try again!')[m
[31m-        continue[m
[31m-[m
[31m-    # Create the clues.[m
[31m-[m
[31m-    clues = [][m
[31m-[m
[31m-    for index in range(digits):[m
[31m-        if guess[index] == number[index]:[m
[31m-            clues.append('fermi')[m
[31m-        elif guess[index] in number:[m
[31m-            clues.append('pico')[m
[31m-[m
[31m-    shuffle(clues)[m
[31m-[m
[31m-    if len(clues) == 0:[m
[31m-        print('bagels')[m
[31m-    else:[m
[31m-        print(' '.join(clues))[m
[31m-[m
[31m-    counter += 1[m
[31m-[m
[31m-    if guess == number:[m
[31m-        print('You got it!')[m
[31m-        break[m
[31m-[m
[31m-    if counter > guesses:[m
[31m-        print('You ran out of guesses. The answer was', number)[m
[31m-        break[m
[1mdiff --git a/src/freegames/bounce.py b/src/freegames/bounce.py[m
[1mdeleted file mode 100644[m
[1mindex ddc14ee..0000000[m
[1m--- a/src/freegames/bounce.py[m
[1m+++ /dev/null[m
[36m@@ -1,52 +0,0 @@[m
[31m-"""Bounce, a simple animation demo.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Make the ball speed up and down.[m
[31m-2. Change how the ball bounces when it hits a wall.[m
[31m-3. Make the ball leave a trail.[m
[31m-4. Change the ball color based on position.[m
[31m-   Hint: colormode(255); color(0, 100, 200)[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-[m
[31m-def value():[m
[31m-    """Randomly generate value between (-5, -3) or (3, 5)."""[m
[31m-    return (3 + random() * 2) * choice([1, -1])[m
[31m-[m
[31m-[m
[31m-ball = vector(0, 0)[m
[31m-aim = vector(value(), value())[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Move ball and draw game."""[m
[31m-    ball.move(aim)[m
[31m-[m
[31m-    x = ball.x[m
[31m-    y = ball.y[m
[31m-[m
[31m-    if x < -200 or x > 200:[m
[31m-        aim.x = -aim.x[m
[31m-[m
[31m-    if y < -200 or y > 200:[m
[31m-        aim.y = -aim.y[m
[31m-[m
[31m-    clear()[m
[31m-    goto(x, y)[m
[31m-    dot(10)[m
[31m-[m
[31m-    ontimer(draw, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-up()[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/cannon.py b/src/freegames/cannon.py[m
[1mdeleted file mode 100644[m
[1mindex c68da9b..0000000[m
[1m--- a/src/freegames/cannon.py[m
[1m+++ /dev/null[m
[36m@@ -1,86 +0,0 @@[m
[31m-"""Cannon, hitting targets with projectiles.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Keep score by counting target hits.[m
[31m-2. Vary the effect of gravity.[m
[31m-3. Apply gravity to the targets.[m
[31m-4. Change the speed of the ball.[m
[31m-"""[m
[31m-[m
[31m-from random import randrange[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-ball = vector(-200, -200)[m
[31m-speed = vector(0, 0)[m
[31m-targets = [][m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Respond to screen tap."""[m
[31m-    if not inside(ball):[m
[31m-        ball.x = -199[m
[31m-        ball.y = -199[m
[31m-        speed.x = (x + 200) / 25[m
[31m-        speed.y = (y + 200) / 25[m
[31m-[m
[31m-[m
[31m-def inside(xy):[m
[31m-    """Return True if xy within screen."""[m
[31m-    return -200 < xy.x < 200 and -200 < xy.y < 200[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw ball and targets."""[m
[31m-    clear()[m
[31m-[m
[31m-    for target in targets:[m
[31m-        goto(target.x, target.y)[m
[31m-        dot(20, 'blue')[m
[31m-[m
[31m-    if inside(ball):[m
[31m-        goto(ball.x, ball.y)[m
[31m-        dot(6, 'red')[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Move ball and targets."""[m
[31m-    if randrange(40) == 0:[m
[31m-        y = randrange(-150, 150)[m
[31m-        target = vector(200, y)[m
[31m-        targets.append(target)[m
[31m-[m
[31m-    for target in targets:[m
[31m-        target.x -= 0.5[m
[31m-[m
[31m-    if inside(ball):[m
[31m-        speed.y -= 0.35[m
[31m-        ball.move(speed)[m
[31m-[m
[31m-    dupe = targets.copy()[m
[31m-    targets.clear()[m
[31m-[m
[31m-    for target in dupe:[m
[31m-        if abs(target - ball) > 13:[m
[31m-            targets.append(target)[m
[31m-[m
[31m-    draw()[m
[31m-[m
[31m-    for target in targets:[m
[31m-        if not inside(target):[m
[31m-            return[m
[31m-[m
[31m-    ontimer(move, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-up()[m
[31m-tracer(False)[m
[31m-onscreenclick(tap)[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/car.gif b/src/freegames/car.gif[m
[1mdeleted file mode 100644[m
[1mindex 30bef0c..0000000[m
Binary files a/src/freegames/car.gif and /dev/null differ
[1mdiff --git a/src/freegames/connect.py b/src/freegames/connect.py[m
[1mdeleted file mode 100644[m
[1mindex 5c39e16..0000000[m
[1m--- a/src/freegames/connect.py[m
[1m+++ /dev/null[m
[36m@@ -1,61 +0,0 @@[m
[31m-"""Connect Four[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the colors.[m
[31m-2. Draw squares instead of circles for open spaces.[m
[31m-3. Add logic to detect a full row.[m
[31m-4. Create a random computer player.[m
[31m-5. How would you detect a winner?[m
[31m-"""[m
[31m-[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import line[m
[31m-[m
[31m-turns = {'red': 'yellow', 'yellow': 'red'}[m
[31m-state = {'player': 'yellow', 'rows': [0] * 8}[m
[31m-[m
[31m-[m
[31m-def grid():[m
[31m-    """Draw Connect Four grid."""[m
[31m-    bgcolor('light blue')[m
[31m-[m
[31m-    for x in range(-150, 200, 50):[m
[31m-        line(x, -200, x, 200)[m
[31m-[m
[31m-    for x in range(-175, 200, 50):[m
[31m-        for y in range(-175, 200, 50):[m
[31m-            up()[m
[31m-            goto(x, y)[m
[31m-            dot(40, 'white')[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Draw red or yellow circle in tapped row."""[m
[31m-    player = state['player'][m
[31m-    rows = state['rows'][m
[31m-[m
[31m-    row = int((x + 200) // 50)[m
[31m-    count = rows[row][m
[31m-[m
[31m-    x = ((x + 200) // 50) * 50 - 200 + 25[m
[31m-    y = count * 50 - 200 + 25[m
[31m-[m
[31m-    up()[m
[31m-    goto(x, y)[m
[31m-    dot(40, player)[m
[31m-    update()[m
[31m-[m
[31m-    rows[row] = count + 1[m
[31m-    state['player'] = turns[player][m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-grid()[m
[31m-onscreenclick(tap)[m
[31m-done()[m
[1mdiff --git a/src/freegames/crypto.py b/src/freegames/crypto.py[m
[1mdeleted file mode 100644[m
[1mindex a59affd..0000000[m
[1m--- a/src/freegames/crypto.py[m
[1m+++ /dev/null[m
[36m@@ -1,90 +0,0 @@[m
[31m-"""Crypto: tool for encrypting and decrypting messages.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Review 'ord' and 'chr' functions and letter-to-number mapping.[m
[31m-2. Explain what happens if you use key 26.[m
[31m-3. Find a way to decode a message without a key.[m
[31m-4. Encrypt numbers.[m
[31m-5. Make the encryption harder to decode.[m
[31m-[m
[31m-Adapted from code in https://inventwithpython.com/chapter14.html[m
[31m-"""[m
[31m-[m
[31m-[m
[31m-def encrypt(message, key):[m
[31m-    """Encrypt message with key."""[m
[31m-    result = ''[m
[31m-[m
[31m-    # Iterate letters in message and encrypt each individually.[m
[31m-[m
[31m-    for letter in message:[m
[31m-        if letter.isalpha():[m
[31m-[m
[31m-            # Letters are numbered like so:[m
[31m-            # A, B, C - Z is 65, 66, 67 - 90[m
[31m-            # a, b, c - z is 97, 98, 99 - 122[m
[31m-[m
[31m-            num = ord(letter)[m
[31m-[m
[31m-            if letter.isupper():[m
[31m-                base = ord('A')[m
[31m-            else:[m
[31m-                assert letter.islower()[m
[31m-                base = ord('a')[m
[31m-[m
[31m-            # The encryption equation:[m
[31m-[m
[31m-            num = (num - base + key) % 26 + base[m
[31m-[m
[31m-            result += chr(num)[m
[31m-[m
[31m-        elif letter.isdigit():[m
[31m-[m
[31m-            # TODO: Encrypt digits.[m
[31m-            result += letter[m
[31m-[m
[31m-        else:[m
[31m-            result += letter[m
[31m-[m
[31m-    return result[m
[31m-[m
[31m-[m
[31m-def decrypt(message, key):[m
[31m-    """Decrypt message with key."""[m
[31m-    return encrypt(message, -key)[m
[31m-[m
[31m-[m
[31m-def decode(message):[m
[31m-    """Decode message without key."""[m
[31m-    pass  # TODO[m
[31m-[m
[31m-[m
[31m-def get_key():[m
[31m-    """Get key from user."""[m
[31m-    try:[m
[31m-        text = input('Enter a key (1 - 25): ')[m
[31m-        key = int(text)[m
[31m-        return key[m
[31m-    except:[m
[31m-        print('Invalid key. Using key: 0.')[m
[31m-        return 0[m
[31m-[m
[31m-[m
[31m-print('Do you wish to encrypt, decrypt, or decode a message?')[m
[31m-choice = input()[m
[31m-[m
[31m-if choice == 'encrypt':[m
[31m-    phrase = input('Message: ')[m
[31m-    code = get_key()[m
[31m-    print('Encrypted message:', encrypt(phrase, code))[m
[31m-elif choice == 'decrypt':[m
[31m-    phrase = input('Message: ')[m
[31m-    code = get_key()[m
[31m-    print('Decrypted message:', decrypt(phrase, code))[m
[31m-elif choice == 'decode':[m
[31m-    phrase = input('Message: ')[m
[31m-    print('Decoding message:')[m
[31m-    decode(phrase)[m
[31m-else:[m
[31m-    print('Error: Unrecognized Command')[m
[1mdiff --git a/src/freegames/fidget.py b/src/freegames/fidget.py[m
[1mdeleted file mode 100644[m
[1mindex 84d50d5..0000000[m
[1m--- a/src/freegames/fidget.py[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-"""Fidget, inspired by fidget spinners.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the spinner pattern.[m
[31m-2. Respond to mouse clicks.[m
[31m-3. Change its acceleration.[m
[31m-4. Make it go forwards and backwards.[m
[31m-"""[m
[31m-[m
[31m-from turtle import *[m
[31m-[m
[31m-state = {'turn': 0}[m
[31m-[m
[31m-[m
[31m-def spinner():[m
[31m-    """Draw fidget spinner."""[m
[31m-    clear()[m
[31m-    angle = state['turn'] / 10[m
[31m-    right(angle)[m
[31m-    forward(100)[m
[31m-    dot(120, 'red')[m
[31m-    back(100)[m
[31m-    right(120)[m
[31m-    forward(100)[m
[31m-    dot(120, 'green')[m
[31m-    back(100)[m
[31m-    right(120)[m
[31m-    forward(100)[m
[31m-    dot(120, 'blue')[m
[31m-    back(100)[m
[31m-    right(120)[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def animate():[m
[31m-    """Animate fidget spinner."""[m
[31m-    if state['turn'] > 0:[m
[31m-        state['turn'] -= 1[m
[31m-[m
[31m-    spinner()[m
[31m-    ontimer(animate, 20)[m
[31m-[m
[31m-[m
[31m-def flick():[m
[31m-    """Flick fidget spinner."""[m
[31m-    state['turn'] += 10[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-width(20)[m
[31m-onkey(flick, 'space')[m
[31m-listen()[m
[31m-animate()[m
[31m-done()[m
[1mdiff --git a/src/freegames/flappy.py b/src/freegames/flappy.py[m
[1mdeleted file mode 100644[m
[1mindex 1894c2d..0000000[m
[1m--- a/src/freegames/flappy.py[m
[1m+++ /dev/null[m
[36m@@ -1,83 +0,0 @@[m
[31m-"""Flappy, game inspired by Flappy Bird.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Keep score.[m
[31m-2. Vary the speed.[m
[31m-3. Vary the size of the balls.[m
[31m-4. Allow the bird to move forward and back.[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-bird = vector(0, 0)[m
[31m-balls = [][m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Move bird up in response to screen tap."""[m
[31m-    up = vector(0, 30)[m
[31m-    bird.move(up)[m
[31m-[m
[31m-[m
[31m-def inside(point):[m
[31m-    """Return True if point on screen."""[m
[31m-    return -200 < point.x < 200 and -200 < point.y < 200[m
[31m-[m
[31m-[m
[31m-def draw(alive):[m
[31m-    """Draw screen objects."""[m
[31m-    clear()[m
[31m-[m
[31m-    goto(bird.x, bird.y)[m
[31m-[m
[31m-    if alive:[m
[31m-        dot(10, 'green')[m
[31m-    else:[m
[31m-        dot(10, 'red')[m
[31m-[m
[31m-    for ball in balls:[m
[31m-        goto(ball.x, ball.y)[m
[31m-        dot(20, 'black')[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Update object positions."""[m
[31m-    bird.y -= 5[m
[31m-[m
[31m-    for ball in balls:[m
[31m-        ball.x -= 3[m
[31m-[m
[31m-    if randrange(10) == 0:[m
[31m-        y = randrange(-199, 199)[m
[31m-        ball = vector(199, y)[m
[31m-        balls.append(ball)[m
[31m-[m
[31m-    while len(balls) > 0 and not inside(balls[0]):[m
[31m-        balls.pop(0)[m
[31m-[m
[31m-    if not inside(bird):[m
[31m-        draw(False)[m
[31m-        return[m
[31m-[m
[31m-    for ball in balls:[m
[31m-        if abs(ball - bird) < 15:[m
[31m-            draw(False)[m
[31m-            return[m
[31m-[m
[31m-    draw(True)[m
[31m-    ontimer(move, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-up()[m
[31m-tracer(False)[m
[31m-onscreenclick(tap)[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/guess.py b/src/freegames/guess.py[m
[1mdeleted file mode 100644[m
[1mindex d77fd84..0000000[m
[1m--- a/src/freegames/guess.py[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-"""Guess a number within a range.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the range to be from 0 to 1,000,000.[m
[31m-2. Can you still guess the number?[m
[31m-3. Print the number of guesses made.[m
[31m-4. Limit the number of guesses to the minimum required.[m
[31m-"""[m
[31m-[m
[31m-from random import randint[m
[31m-[m
[31m-start = 1[m
[31m-end = 100[m
[31m-value = randint(start, end)[m
[31m-[m
[31m-# print(value)[m
[31m-print("I'm thinking of a number between", start, 'and', end)[m
[31m-[m
[31m-guess = None[m
[31m-[m
[31m-while guess != value:[m
[31m-    text = input('Guess the number: ')[m
[31m-    guess = int(text)[m
[31m-[m
[31m-    if guess < value:[m
[31m-        print('Higher.')[m
[31m-    elif guess > value:[m
[31m-        print('Lower.')[m
[31m-[m
[31m-print('Congratulations! You guessed the right answer:', value)[m
[1mdiff --git a/src/freegames/illusion.py b/src/freegames/illusion.py[m
[1mdeleted file mode 100644[m
[1mindex a102d5a..0000000[m
[1m--- a/src/freegames/illusion.py[m
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-"""Illusion[m
[31m-[m
[31m-Exercises:[m
[31m-[m
[31m-1. Change the size of the squares.[m
[31m-2. Change the number of rows and lines.[m
[31m-"""[m
[31m-[m
[31m-from itertools import cycle[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import line, square[m
[31m-[m
[31m-size = 25[m
[31m-[m
[31m-[m
[31m-def draw_row(x, y):[m
[31m-    for i in range(0, 10):[m
[31m-        offset = x + (i * size * 2)[m
[31m-        square(offset, y, size, 'black')[m
[31m-[m
[31m-[m
[31m-def draw_rows():[m
[31m-    offsets = [-200, -190, -180, -190][m
[31m-    pairs = zip(cycle(offsets), range(150, -176, -25))[m
[31m-    for offset, y in pairs:[m
[31m-        draw_row(offset, y)[m
[31m-[m
[31m-[m
[31m-def draw_lines():[m
[31m-    x = -200[m
[31m-    y = 150[m
[31m-    for i in range(0, 14):[m
[31m-        line(x, y - i * size, x + 16 * size, y - i * size)[m
[31m-[m
[31m-[m
[31m-setup(420, 400, 30, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-draw_rows()[m
[31m-draw_lines()[m
[31m-done()[m
[1mdiff --git a/src/freegames/life.py b/src/freegames/life.py[m
[1mdeleted file mode 100644[m
[1mindex fcee86a..0000000[m
[1m--- a/src/freegames/life.py[m
[1m+++ /dev/null[m
[36m@@ -1,69 +0,0 @@[m
[31m-"""Game of Life simulation.[m
[31m-[m
[31m-Conway's game of life is a classic cellular automation created in 1970 by John[m
[31m-Conway. https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Can you identify any Still Lifes, Oscillators, or Spaceships?[m
[31m-2. How can you make the simulation faster? Or bigger?[m
[31m-3. How would you modify the initial state?[m
[31m-4. Try changing the rules of life :)[m
[31m-"""[m
[31m-[m
[31m-from random import choice[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import square[m
[31m-[m
[31m-cells = {}[m
[31m-[m
[31m-[m
[31m-def initialize():[m
[31m-    """Randomly initialize the cells."""[m
[31m-    for x in range(-200, 200, 10):[m
[31m-        for y in range(-200, 200, 10):[m
[31m-            cells[x, y] = False[m
[31m-[m
[31m-    for x in range(-50, 50, 10):[m
[31m-        for y in range(-50, 50, 10):[m
[31m-            cells[x, y] = choice([True, False])[m
[31m-[m
[31m-[m
[31m-def step():[m
[31m-    """Compute one step in the Game of Life."""[m
[31m-    neighbors = {}[m
[31m-[m
[31m-    for x in range(-190, 190, 10):[m
[31m-        for y in range(-190, 190, 10):[m
[31m-            count = -cells[x, y][m
[31m-            for h in [-10, 0, 10]:[m
[31m-                for v in [-10, 0, 10]:[m
[31m-                    count += cells[x + h, y + v][m
[31m-            neighbors[x, y] = count[m
[31m-[m
[31m-    for cell, count in neighbors.items():[m
[31m-        if cells[cell]:[m
[31m-            if count < 2 or count > 3:[m
[31m-                cells[cell] = False[m
[31m-        elif count == 3:[m
[31m-            cells[cell] = True[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw all the squares."""[m
[31m-    step()[m
[31m-    clear()[m
[31m-    for (x, y), alive in cells.items():[m
[31m-        color = 'green' if alive else 'black'[m
[31m-        square(x, y, 10, color)[m
[31m-    update()[m
[31m-    ontimer(draw, 100)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-initialize()[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/madlibs.py b/src/freegames/madlibs.py[m
[1mdeleted file mode 100644[m
[1mindex 0328d7f..0000000[m
[1m--- a/src/freegames/madlibs.py[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-"""Mad Libs: Funny Story Creation Game[m
[31m-[m
[31m-Exercises:[m
[31m-[m
[31m-1. How to replace the story?[m
[31m-2. How load the story and from a file?[m
[31m-3. How to add additional parts of speech?[m
[31m-"""[m
[31m-[m
[31m-# The quick brown fox jumps over the lazy dog.[m
[31m-template = 'The |1| |2| |3| |4| over the |5| |6|.'[m
[31m-parts = {[m
[31m-    '1': 'adjective',[m
[31m-    '2': 'adjective',[m
[31m-    '3': 'noun',[m
[31m-    '4': 'verb',[m
[31m-    '5': 'adjective',[m
[31m-    '6': 'noun',[m
[31m-}[m
[31m-[m
[31m-chunks = [][m
[31m-[m
[31m-for chunk in template.split('|'):[m
[31m-    if chunk in parts:[m
[31m-        description = parts[chunk][m
[31m-        prompt = 'Enter [{}]: '.format(description)[m
[31m-        word = input(prompt)[m
[31m-        chunks.append(word)[m
[31m-    else:[m
[31m-        chunks.append(chunk)[m
[31m-[m
[31m-print('=' * 80)[m
[31m-story = ''.join(chunks)[m
[31m-print(story)[m
[1mdiff --git a/src/freegames/maze.py b/src/freegames/maze.py[m
[1mdeleted file mode 100644[m
[1mindex ca40786..0000000[m
[1m--- a/src/freegames/maze.py[m
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-"""Maze, move from one side to another.[m
[31m-[m
[31m-Excercises[m
[31m-[m
[31m-1. Keep score by counting taps.[m
[31m-2. Make the maze harder.[m
[31m-3. Generate the same maze twice.[m
[31m-"""[m
[31m-[m
[31m-from random import random[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import line[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw maze."""[m
[31m-    color('black')[m
[31m-    width(5)[m
[31m-[m
[31m-    for x in range(-200, 200, 40):[m
[31m-        for y in range(-200, 200, 40):[m
[31m-            if random() > 0.5:[m
[31m-                line(x, y, x + 40, y + 40)[m
[31m-            else:[m
[31m-                line(x, y + 40, x + 40, y)[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Draw line and dot for screen tap."""[m
[31m-    if abs(x) > 198 or abs(y) > 198:[m
[31m-        up()[m
[31m-    else:[m
[31m-        down()[m
[31m-[m
[31m-    width(2)[m
[31m-    color('red')[m
[31m-    goto(x, y)[m
[31m-    dot(4)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-draw()[m
[31m-onscreenclick(tap)[m
[31m-done()[m
[1mdiff --git a/src/freegames/memory.py b/src/freegames/memory.py[m
[1mdeleted file mode 100644[m
[1mindex c0d2ad3..0000000[m
[1m--- a/src/freegames/memory.py[m
[1m+++ /dev/null[m
[36m@@ -1,91 +0,0 @@[m
[31m-"""Memory, puzzle game of number pairs.[m
[31m-[m
[31m-Exercises:[m
[31m-[m
[31m-1. Count and print how many taps occur.[m
[31m-2. Decrease the number of tiles to a 4x4 grid.[m
[31m-3. Detect when all tiles are revealed.[m
[31m-4. Center single-digit tile.[m
[31m-5. Use letters instead of tiles.[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import path[m
[31m-[m
[31m-car = path('car.gif')[m
[31m-tiles = list(range(32)) * 2[m
[31m-state = {'mark': None}[m
[31m-hide = [True] * 64[m
[31m-[m
[31m-[m
[31m-def square(x, y):[m
[31m-    """Draw white square with black outline at (x, y)."""[m
[31m-    up()[m
[31m-    goto(x, y)[m
[31m-    down()[m
[31m-    color('black', 'white')[m
[31m-    begin_fill()[m
[31m-    for count in range(4):[m
[31m-        forward(50)[m
[31m-        left(90)[m
[31m-    end_fill()[m
[31m-[m
[31m-[m
[31m-def index(x, y):[m
[31m-    """Convert (x, y) coordinates to tiles index."""[m
[31m-    return int((x + 200) // 50 + ((y + 200) // 50) * 8)[m
[31m-[m
[31m-[m
[31m-def xy(count):[m
[31m-    """Convert tiles count to (x, y) coordinates."""[m
[31m-    return (count % 8) * 50 - 200, (count // 8) * 50 - 200[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Update mark and hidden tiles based on tap."""[m
[31m-    spot = index(x, y)[m
[31m-    mark = state['mark'][m
[31m-[m
[31m-    if mark is None or mark == spot or tiles[mark] != tiles[spot]:[m
[31m-        state['mark'] = spot[m
[31m-    else:[m
[31m-        hide[spot] = False[m
[31m-        hide[mark] = False[m
[31m-        state['mark'] = None[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw image and tiles."""[m
[31m-    clear()[m
[31m-    goto(0, 0)[m
[31m-    shape(car)[m
[31m-    stamp()[m
[31m-[m
[31m-    for count in range(64):[m
[31m-        if hide[count]:[m
[31m-            x, y = xy(count)[m
[31m-            square(x, y)[m
[31m-[m
[31m-    mark = state['mark'][m
[31m-[m
[31m-    if mark is not None and hide[mark]:[m
[31m-        x, y = xy(mark)[m
[31m-        up()[m
[31m-        goto(x + 2, y)[m
[31m-        color('black')[m
[31m-        write(tiles[mark], font=('Arial', 30, 'normal'))[m
[31m-[m
[31m-    update()[m
[31m-    ontimer(draw, 100)[m
[31m-[m
[31m-[m
[31m-shuffle(tiles)[m
[31m-setup(420, 420, 370, 0)[m
[31m-addshape(car)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-onscreenclick(tap)[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/minesweeper.py b/src/freegames/minesweeper.py[m
[1mdeleted file mode 100644[m
[1mindex 4278af0..0000000[m
[1m--- a/src/freegames/minesweeper.py[m
[1m+++ /dev/null[m
[36m@@ -1,95 +0,0 @@[m
[31m-"""Minesweeper[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. What does the `seed(0)` function call do?[m
[31m-2. Change the number of bombs on the grid.[m
[31m-3. Change the size of the grid.[m
[31m-"""[m
[31m-[m
[31m-from random import randrange, seed[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import floor, square[m
[31m-[m
[31m-seed(0)[m
[31m-bombs = {}[m
[31m-shown = {}[m
[31m-counts = {}[m
[31m-[m
[31m-[m
[31m-def initialize():[m
[31m-    """Initialize `bombs`, `counts`, and `shown` grids."""[m
[31m-    for x in range(-250, 250, 50):[m
[31m-        for y in range(-250, 250, 50):[m
[31m-            bombs[x, y] = False[m
[31m-            shown[x, y] = False[m
[31m-            counts[x, y] = -1[m
[31m-[m
[31m-    for count in range(8):[m
[31m-        x = randrange(-200, 200, 50)[m
[31m-        y = randrange(-200, 200, 50)[m
[31m-        bombs[x, y] = True[m
[31m-[m
[31m-    for x in range(-200, 200, 50):[m
[31m-        for y in range(-200, 200, 50):[m
[31m-            total = 0[m
[31m-            for i in (-50, 0, 50):[m
[31m-                for j in (-50, 0, 50):[m
[31m-                    total += bombs[x + i, y + j][m
[31m-            counts[x, y] = total[m
[31m-[m
[31m-[m
[31m-def stamp(x, y, text):[m
[31m-    """Display `text` at coordinates `x` and `y`."""[m
[31m-    square(x, y, 50, 'white')[m
[31m-    color('black')[m
[31m-    write(text, font=('Arial', 50, 'normal'))[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw the initial board grid."""[m
[31m-    for x in range(-200, 200, 50):[m
[31m-        for y in range(-200, 200, 50):[m
[31m-            stamp(x, y, '?')[m
[31m-[m
[31m-[m
[31m-def end():[m
[31m-    """Draw the bombs as X's on the grid."""[m
[31m-    for x in range(-200, 200, 50):[m
[31m-        for y in range(-200, 200, 50):[m
[31m-            if bombs[x, y]:[m
[31m-                stamp(x, y, 'X')[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Respond to screen click at `x` and `y` coordinates."""[m
[31m-    x = floor(x, 50)[m
[31m-    y = floor(y, 50)[m
[31m-[m
[31m-    if bombs[x, y]:[m
[31m-        end()[m
[31m-        return[m
[31m-[m
[31m-    pairs = [(x, y)][m
[31m-[m
[31m-    while pairs:[m
[31m-        x, y = pairs.pop()[m
[31m-        stamp(x, y, counts[x, y])[m
[31m-        shown[x, y] = True[m
[31m-[m
[31m-        if counts[x, y] == 0:[m
[31m-            for i in (-50, 0, 50):[m
[31m-                for j in (-50, 0, 50):[m
[31m-                    pair = x + i, y + j[m
[31m-                    if not shown[pair]:[m
[31m-                        pairs.append(pair)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-initialize()[m
[31m-draw()[m
[31m-onscreenclick(tap)[m
[31m-done()[m
[1mdiff --git a/src/freegames/pacman.py b/src/freegames/pacman.py[m
[1mdeleted file mode 100644[m
[1mindex 644b35a..0000000[m
[1m--- a/src/freegames/pacman.py[m
[1m+++ /dev/null[m
[36m@@ -1,180 +0,0 @@[m
[31m-"""Pacman, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the board.[m
[31m-2. Change the number of ghosts.[m
[31m-3. Change where pacman starts.[m
[31m-4. Make the ghosts faster/slower.[m
[31m-5. Make the ghosts smarter.[m
[31m-"""[m
[31m-[m
[31m-from random import choice[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import floor, vector[m
[31m-[m
[31m-state = {'score': 0}[m
[31m-path = Turtle(visible=False)[m
[31m-writer = Turtle(visible=False)[m
[31m-aim = vector(5, 0)[m
[31m-pacman = vector(-40, -80)[m
[31m-ghosts = [[m
[31m-    [vector(-180, 160), vector(5, 0)],[m
[31m-    [vector(-180, -160), vector(0, 5)],[m
[31m-    [vector(100, 160), vector(0, -5)],[m
[31m-    [vector(100, -160), vector(-5, 0)],[m
[31m-][m
[31m-# fmt: off[m
[31m-tiles = [[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,[m
[31m-    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,[m
[31m-][m
[31m-# fmt: on[m
[31m-[m
[31m-[m
[31m-def square(x, y):[m
[31m-    """Draw square using path at (x, y)."""[m
[31m-    path.up()[m
[31m-    path.goto(x, y)[m
[31m-    path.down()[m
[31m-    path.begin_fill()[m
[31m-[m
[31m-    for count in range(4):[m
[31m-        path.forward(20)[m
[31m-        path.left(90)[m
[31m-[m
[31m-    path.end_fill()[m
[31m-[m
[31m-[m
[31m-def offset(point):[m
[31m-    """Return offset of point in tiles."""[m
[31m-    x = (floor(point.x, 20) + 200) / 20[m
[31m-    y = (180 - floor(point.y, 20)) / 20[m
[31m-    index = int(x + y * 20)[m
[31m-    return index[m
[31m-[m
[31m-[m
[31m-def valid(point):[m
[31m-    """Return True if point is valid in tiles."""[m
[31m-    index = offset(point)[m
[31m-[m
[31m-    if tiles[index] == 0:[m
[31m-        return False[m
[31m-[m
[31m-    index = offset(point + 19)[m
[31m-[m
[31m-    if tiles[index] == 0:[m
[31m-        return False[m
[31m-[m
[31m-    return point.x % 20 == 0 or point.y % 20 == 0[m
[31m-[m
[31m-[m
[31m-def world():[m
[31m-    """Draw world using path."""[m
[31m-    bgcolor('black')[m
[31m-    path.color('blue')[m
[31m-[m
[31m-    for index in range(len(tiles)):[m
[31m-        tile = tiles[index][m
[31m-[m
[31m-        if tile > 0:[m
[31m-            x = (index % 20) * 20 - 200[m
[31m-            y = 180 - (index // 20) * 20[m
[31m-            square(x, y)[m
[31m-[m
[31m-            if tile == 1:[m
[31m-                path.up()[m
[31m-                path.goto(x + 10, y + 10)[m
[31m-                path.dot(2, 'white')[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Move pacman and all ghosts."""[m
[31m-    writer.undo()[m
[31m-    writer.write(state['score'])[m
[31m-[m
[31m-    clear()[m
[31m-[m
[31m-    if valid(pacman + aim):[m
[31m-        pacman.move(aim)[m
[31m-[m
[31m-    index = offset(pacman)[m
[31m-[m
[31m-    if tiles[index] == 1:[m
[31m-        tiles[index] = 2[m
[31m-        state['score'] += 1[m
[31m-        x = (index % 20) * 20 - 200[m
[31m-        y = 180 - (index // 20) * 20[m
[31m-        square(x, y)[m
[31m-[m
[31m-    up()[m
[31m-    goto(pacman.x + 10, pacman.y + 10)[m
[31m-    dot(20, 'yellow')[m
[31m-[m
[31m-    for point, course in ghosts:[m
[31m-        if valid(point + course):[m
[31m-            point.move(course)[m
[31m-        else:[m
[31m-            options = [[m
[31m-                vector(5, 0),[m
[31m-                vector(-5, 0),[m
[31m-                vector(0, 5),[m
[31m-                vector(0, -5),[m
[31m-            ][m
[31m-            plan = choice(options)[m
[31m-            course.x = plan.x[m
[31m-            course.y = plan.y[m
[31m-[m
[31m-        up()[m
[31m-        goto(point.x + 10, point.y + 10)[m
[31m-        dot(20, 'red')[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-    for point, course in ghosts:[m
[31m-        if abs(pacman - point) < 20:[m
[31m-            return[m
[31m-[m
[31m-    ontimer(move, 100)[m
[31m-[m
[31m-[m
[31m-def change(x, y):[m
[31m-    """Change pacman aim if valid."""[m
[31m-    if valid(pacman + vector(x, y)):[m
[31m-        aim.x = x[m
[31m-        aim.y = y[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-writer.goto(160, 160)[m
[31m-writer.color('white')[m
[31m-writer.write(state['score'])[m
[31m-listen()[m
[31m-onkey(lambda: change(5, 0), 'Right')[m
[31m-onkey(lambda: change(-5, 0), 'Left')[m
[31m-onkey(lambda: change(0, 5), 'Up')[m
[31m-onkey(lambda: change(0, -5), 'Down')[m
[31m-world()[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/paint.py b/src/freegames/paint.py[m
[1mdeleted file mode 100644[m
[1mindex adc5dec..0000000[m
[1m--- a/src/freegames/paint.py[m
[1m+++ /dev/null[m
[36m@@ -1,87 +0,0 @@[m
[31m-"""Paint, for drawing shapes.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Add a color.[m
[31m-2. Complete circle.[m
[31m-3. Complete rectangle.[m
[31m-4. Complete triangle.[m
[31m-5. Add width parameter.[m
[31m-"""[m
[31m-[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-[m
[31m-def line(start, end):[m
[31m-    """Draw line from start to end."""[m
[31m-    up()[m
[31m-    goto(start.x, start.y)[m
[31m-    down()[m
[31m-    goto(end.x, end.y)[m
[31m-[m
[31m-[m
[31m-def square(start, end):[m
[31m-    """Draw square from start to end."""[m
[31m-    up()[m
[31m-    goto(start.x, start.y)[m
[31m-    down()[m
[31m-    begin_fill()[m
[31m-[m
[31m-    for count in range(4):[m
[31m-        forward(end.x - start.x)[m
[31m-        left(90)[m
[31m-[m
[31m-    end_fill()[m
[31m-[m
[31m-[m
[31m-def circle(start, end):[m
[31m-    """Draw circle from start to end."""[m
[31m-    pass  # TODO[m
[31m-[m
[31m-[m
[31m-def rectangle(start, end):[m
[31m-    """Draw rectangle from start to end."""[m
[31m-    pass  # TODO[m
[31m-[m
[31m-[m
[31m-def triangle(start, end):[m
[31m-    """Draw triangle from start to end."""[m
[31m-    pass  # TODO[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Store starting point or draw shape."""[m
[31m-    start = state['start'][m
[31m-[m
[31m-    if start is None:[m
[31m-        state['start'] = vector(x, y)[m
[31m-    else:[m
[31m-        shape = state['shape'][m
[31m-        end = vector(x, y)[m
[31m-        shape(start, end)[m
[31m-        state['start'] = None[m
[31m-[m
[31m-[m
[31m-def store(key, value):[m
[31m-    """Store value in state at key."""[m
[31m-    state[key] = value[m
[31m-[m
[31m-[m
[31m-state = {'start': None, 'shape': line}[m
[31m-setup(420, 420, 370, 0)[m
[31m-onscreenclick(tap)[m
[31m-listen()[m
[31m-onkey(undo, 'u')[m
[31m-onkey(lambda: color('black'), 'K')[m
[31m-onkey(lambda: color('white'), 'W')[m
[31m-onkey(lambda: color('green'), 'G')[m
[31m-onkey(lambda: color('blue'), 'B')[m
[31m-onkey(lambda: color('red'), 'R')[m
[31m-onkey(lambda: store('shape', line), 'l')[m
[31m-onkey(lambda: store('shape', square), 's')[m
[31m-onkey(lambda: store('shape', circle), 'c')[m
[31m-onkey(lambda: store('shape', rectangle), 'r')[m
[31m-onkey(lambda: store('shape', triangle), 't')[m
[31m-done()[m
[1mdiff --git a/src/freegames/pong.py b/src/freegames/pong.py[m
[1mdeleted file mode 100644[m
[1mindex cbabedc..0000000[m
[1m--- a/src/freegames/pong.py[m
[1m+++ /dev/null[m
[36m@@ -1,97 +0,0 @@[m
[31m-"""Pong, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the colors.[m
[31m-2. What is the frame rate? Make it faster or slower.[m
[31m-3. Change the speed of the ball.[m
[31m-4. Change the size of the paddles.[m
[31m-5. Change how the ball bounces off walls.[m
[31m-6. How would you add a computer player?[m
[31m-6. Add a second ball.[m
[31m-"""[m
[31m-[m
[31m-from random import choice, random[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-[m
[31m-def value():[m
[31m-    """Randomly generate value between (-5, -3) or (3, 5)."""[m
[31m-    return (3 + random() * 2) * choice([1, -1])[m
[31m-[m
[31m-[m
[31m-ball = vector(0, 0)[m
[31m-aim = vector(value(), value())[m
[31m-state = {1: 0, 2: 0}[m
[31m-[m
[31m-[m
[31m-def move(player, change):[m
[31m-    """Move player position by change."""[m
[31m-    state[player] += change[m
[31m-[m
[31m-[m
[31m-def rectangle(x, y, width, height):[m
[31m-    """Draw rectangle at (x, y) with given width and height."""[m
[31m-    up()[m
[31m-    goto(x, y)[m
[31m-    down()[m
[31m-    begin_fill()[m
[31m-    for count in range(2):[m
[31m-        forward(width)[m
[31m-        left(90)[m
[31m-        forward(height)[m
[31m-        left(90)[m
[31m-    end_fill()[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw game and move pong ball."""[m
[31m-    clear()[m
[31m-    rectangle(-200, state[1], 10, 50)[m
[31m-    rectangle(190, state[2], 10, 50)[m
[31m-[m
[31m-    ball.move(aim)[m
[31m-    x = ball.x[m
[31m-    y = ball.y[m
[31m-[m
[31m-    up()[m
[31m-    goto(x, y)[m
[31m-    dot(10)[m
[31m-    update()[m
[31m-[m
[31m-    if y < -200 or y > 200:[m
[31m-        aim.y = -aim.y[m
[31m-[m
[31m-    if x < -185:[m
[31m-        low = state[1][m
[31m-        high = state[1] + 50[m
[31m-[m
[31m-        if low <= y <= high:[m
[31m-            aim.x = -aim.x[m
[31m-        else:[m
[31m-            return[m
[31m-[m
[31m-    if x > 185:[m
[31m-        low = state[2][m
[31m-        high = state[2] + 50[m
[31m-[m
[31m-        if low <= y <= high:[m
[31m-            aim.x = -aim.x[m
[31m-        else:[m
[31m-            return[m
[31m-[m
[31m-    ontimer(draw, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-onkey(lambda: move(1, 20), 'w')[m
[31m-onkey(lambda: move(1, -20), 's')[m
[31m-onkey(lambda: move(2, 20), 'i')[m
[31m-onkey(lambda: move(2, -20), 'k')[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/rps.py b/src/freegames/rps.py[m
[1mdeleted file mode 100644[m
[1mindex 24b32bf..0000000[m
[1m--- a/src/freegames/rps.py[m
[1m+++ /dev/null[m
[36m@@ -1,91 +0,0 @@[m
[31m-"""Rock, Paper, Scissors[m
[31m-[m
[31m-The game is played in a series as follows:[m
[31m-[m
[31m-1. Player chooses "r" for rock, "p" for paper, or "s" for scissors.[m
[31m-2. The computer will also choose rock, paper, or scissors.[m
[31m-3. The result will either be a win, loss, or tie:[m
[31m-   a. Rock crushes scissors.[m
[31m-   b. Scissors cuts paper.[m
[31m-   c. Paper covers rock.[m
[31m-[m
[31m-First to score 5 points wins the series![m
[31m-"""[m
[31m-# Exercises:[m
[31m-#[m
[31m-# 1. Create a strategy to rotate through 'r', 'p', and 's' in a cycle.[m
[31m-# 2. Create a strategy to do the same as the last computer choice.[m
[31m-# 3. Create a new strategy of your own.[m
[31m-[m
[31m-import random[m
[31m-[m
[31m-beats = {'r': 's', 'p': 'r', 's': 'p'}[m
[31m-loses = {value: key for key, value in beats.items()}[m
[31m-state = {'player': 0, 'computer': 0, 'ties': 0}[m
[31m-guesses = [][m
[31m-default = random.choice('rps')[m
[31m-[m
[31m-[m
[31m-def always_same():[m
[31m-    return default[m
[31m-[m
[31m-[m
[31m-def random_strategy():[m
[31m-    return random.choice('rps')[m
[31m-[m
[31m-[m
[31m-def beat_last():[m
[31m-    if not guesses:[m
[31m-        return default[m
[31m-    last, _ = guesses[-1][m
[31m-    return loses[last][m
[31m-[m
[31m-[m
[31m-strategies = [always_same, random_strategy, beat_last][m
[31m-strategy = random.choice(strategies)[m
[31m-[m
[31m-[m
[31m-def get_option():[m
[31m-    while True:[m
[31m-        choice = input('Enter "r" for rock, "p" for paper, "s" for scissors: ')[m
[31m-        if choice not in beats:[m
[31m-            print('Invalid choice.')[m
[31m-            continue[m
[31m-        return choice[m
[31m-[m
[31m-[m
[31m-print(__doc__)[m
[31m-[m
[31m-while True:[m
[31m-    player = get_option()[m
[31m-    computer = strategy()[m
[31m-    guess = (player, computer)[m
[31m-    guesses.append(guess)[m
[31m-[m
[31m-    print('Player chooses:', player)[m
[31m-    print('Computer chooses:', computer)[m
[31m-[m
[31m-    if player == computer:[m
[31m-        state['ties'] += 1[m
[31m-        print('Tie!')[m
[31m-    elif beats[player] == computer:[m
[31m-        state['player'] += 1[m
[31m-        print('Player wins!')[m
[31m-    else:[m
[31m-        state['computer'] += 1[m
[31m-        print('Computer wins!')[m
[31m-[m
[31m-    print()[m
[31m-    print('Player points:', state['player'])[m
[31m-    print('Computer points:', state['computer'])[m
[31m-    print()[m
[31m-[m
[31m-    if state['player'] == 5:[m
[31m-        print('PLAYER WINS!')[m
[31m-        break[m
[31m-[m
[31m-    if state['computer'] == 5:[m
[31m-        print('COMPUTER WINS!')[m
[31m-        break[m
[31m-[m
[31m-print('Computer strategy:', strategy.__name__)[m
[1mdiff --git a/src/freegames/simonsays.py b/src/freegames/simonsays.py[m
[1mdeleted file mode 100644[m
[1mindex d583afc..0000000[m
[1m--- a/src/freegames/simonsays.py[m
[1m+++ /dev/null[m
[36m@@ -1,88 +0,0 @@[m
[31m-"""Simon Says[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Speed up tile flash rate.[m
[31m-2. Add more tiles.[m
[31m-"""[m
[31m-[m
[31m-from random import choice[m
[31m-from time import sleep[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import floor, square, vector[m
[31m-[m
[31m-pattern = [][m
[31m-guesses = [][m
[31m-tiles = {[m
[31m-    vector(0, 0): ('red', 'dark red'),[m
[31m-    vector(0, -200): ('blue', 'dark blue'),[m
[31m-    vector(-200, 0): ('green', 'dark green'),[m
[31m-    vector(-200, -200): ('yellow', 'khaki'),[m
[31m-}[m
[31m-[m
[31m-[m
[31m-def grid():[m
[31m-    """Draw grid of tiles."""[m
[31m-    square(0, 0, 200, 'dark red')[m
[31m-    square(0, -200, 200, 'dark blue')[m
[31m-    square(-200, 0, 200, 'dark green')[m
[31m-    square(-200, -200, 200, 'khaki')[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def flash(tile):[m
[31m-    """Flash tile in grid."""[m
[31m-    glow, dark = tiles[tile][m
[31m-    square(tile.x, tile.y, 200, glow)[m
[31m-    update()[m
[31m-    sleep(0.5)[m
[31m-    square(tile.x, tile.y, 200, dark)[m
[31m-    update()[m
[31m-    sleep(0.5)[m
[31m-[m
[31m-[m
[31m-def grow():[m
[31m-    """Grow pattern and flash tiles."""[m
[31m-    tile = choice(list(tiles))[m
[31m-    pattern.append(tile)[m
[31m-[m
[31m-    for tile in pattern:[m
[31m-        flash(tile)[m
[31m-[m
[31m-    print('Pattern length:', len(pattern))[m
[31m-    guesses.clear()[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Respond to screen tap."""[m
[31m-    onscreenclick(None)[m
[31m-    x = floor(x, 200)[m
[31m-    y = floor(y, 200)[m
[31m-    tile = vector(x, y)[m
[31m-    index = len(guesses)[m
[31m-[m
[31m-    if tile != pattern[index]:[m
[31m-        exit()[m
[31m-[m
[31m-    guesses.append(tile)[m
[31m-    flash(tile)[m
[31m-[m
[31m-    if len(guesses) == len(pattern):[m
[31m-        grow()[m
[31m-[m
[31m-    onscreenclick(tap)[m
[31m-[m
[31m-[m
[31m-def start(x, y):[m
[31m-    """Start game."""[m
[31m-    grow()[m
[31m-    onscreenclick(tap)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-grid()[m
[31m-onscreenclick(start)[m
[31m-done()[m
[1mdiff --git a/src/freegames/snake.py b/src/freegames/snake.py[m
[1mdeleted file mode 100644[m
[1mindex f1f2599..0000000[m
[1m--- a/src/freegames/snake.py[m
[1m+++ /dev/null[m
[36m@@ -1,70 +0,0 @@[m
[31m-"""Snake, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. How do you make the snake faster or slower?[m
[31m-2. How can you make the snake go around the edges?[m
[31m-3. How would you move the food?[m
[31m-4. Change the snake to respond to mouse clicks.[m
[31m-"""[m
[31m-[m
[31m-from random import randrange[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import square, vector[m
[31m-[m
[31m-food = vector(0, 0)[m
[31m-snake = [vector(10, 0)][m
[31m-aim = vector(0, -10)[m
[31m-[m
[31m-[m
[31m-def change(x, y):[m
[31m-    """Change snake direction."""[m
[31m-    aim.x = x[m
[31m-    aim.y = y[m
[31m-[m
[31m-[m
[31m-def inside(head):[m
[31m-    """Return True if head inside boundaries."""[m
[31m-    return -200 < head.x < 190 and -200 < head.y < 190[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Move snake forward one segment."""[m
[31m-    head = snake[-1].copy()[m
[31m-    head.move(aim)[m
[31m-[m
[31m-    if not inside(head) or head in snake:[m
[31m-        square(head.x, head.y, 9, 'red')[m
[31m-        update()[m
[31m-        return[m
[31m-[m
[31m-    snake.append(head)[m
[31m-[m
[31m-    if head == food:[m
[31m-        print('Snake:', len(snake))[m
[31m-        food.x = randrange(-15, 15) * 10[m
[31m-        food.y = randrange(-15, 15) * 10[m
[31m-    else:[m
[31m-        snake.pop(0)[m
[31m-[m
[31m-    clear()[m
[31m-[m
[31m-    for body in snake:[m
[31m-        square(body.x, body.y, 9, 'black')[m
[31m-[m
[31m-    square(food.x, food.y, 9, 'green')[m
[31m-    update()[m
[31m-    ontimer(move, 100)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-onkey(lambda: change(10, 0), 'Right')[m
[31m-onkey(lambda: change(-10, 0), 'Left')[m
[31m-onkey(lambda: change(0, 10), 'Up')[m
[31m-onkey(lambda: change(0, -10), 'Down')[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/tictactoe.py b/src/freegames/tictactoe.py[m
[1mdeleted file mode 100644[m
[1mindex 23a3142..0000000[m
[1m--- a/src/freegames/tictactoe.py[m
[1m+++ /dev/null[m
[36m@@ -1,64 +0,0 @@[m
[31m-"""Tic Tac Toe[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Give the X and O a different color and width.[m
[31m-2. What happens when someone taps a taken spot?[m
[31m-3. How would you detect when someone has won?[m
[31m-4. How could you create a computer player?[m
[31m-"""[m
[31m-[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import line[m
[31m-[m
[31m-[m
[31m-def grid():[m
[31m-    """Draw tic-tac-toe grid."""[m
[31m-    line(-67, 200, -67, -200)[m
[31m-    line(67, 200, 67, -200)[m
[31m-    line(-200, -67, 200, -67)[m
[31m-    line(-200, 67, 200, 67)[m
[31m-[m
[31m-[m
[31m-def drawx(x, y):[m
[31m-    """Draw X player."""[m
[31m-    line(x, y, x + 133, y + 133)[m
[31m-    line(x, y + 133, x + 133, y)[m
[31m-[m
[31m-[m
[31m-def drawo(x, y):[m
[31m-    """Draw O player."""[m
[31m-    up()[m
[31m-    goto(x + 67, y + 5)[m
[31m-    down()[m
[31m-    circle(62)[m
[31m-[m
[31m-[m
[31m-def floor(value):[m
[31m-    """Round value down to grid with square size 133."""[m
[31m-    return ((value + 200) // 133) * 133 - 200[m
[31m-[m
[31m-[m
[31m-state = {'player': 0}[m
[31m-players = [drawx, drawo][m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Draw X or O in tapped square."""[m
[31m-    x = floor(x)[m
[31m-    y = floor(y)[m
[31m-    player = state['player'][m
[31m-    draw = players[player][m
[31m-    draw(x, y)[m
[31m-    update()[m
[31m-    state['player'] = not player[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-grid()[m
[31m-update()[m
[31m-onscreenclick(tap)[m
[31m-done()[m
[1mdiff --git a/src/freegames/tiles.py b/src/freegames/tiles.py[m
[1mdeleted file mode 100644[m
[1mindex 94efda2..0000000[m
[1m--- a/src/freegames/tiles.py[m
[1m+++ /dev/null[m
[36m@@ -1,99 +0,0 @@[m
[31m-"""Tiles, number swapping game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Track a score by the number of tile moves.[m
[31m-2. Permit diagonal squares as neighbors.[m
[31m-3. Respond to arrow keys instead of mouse clicks.[m
[31m-4. Make the grid bigger.[m
[31m-"""[m
[31m-[m
[31m-from random import *[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import floor, vector[m
[31m-[m
[31m-tiles = {}[m
[31m-neighbors = [[m
[31m-    vector(100, 0),[m
[31m-    vector(-100, 0),[m
[31m-    vector(0, 100),[m
[31m-    vector(0, -100),[m
[31m-][m
[31m-[m
[31m-[m
[31m-def load():[m
[31m-    """Load tiles and scramble."""[m
[31m-    count = 1[m
[31m-[m
[31m-    for y in range(-200, 200, 100):[m
[31m-        for x in range(-200, 200, 100):[m
[31m-            mark = vector(x, y)[m
[31m-            tiles[mark] = count[m
[31m-            count += 1[m
[31m-[m
[31m-    tiles[mark] = None[m
[31m-[m
[31m-    for count in range(1000):[m
[31m-        neighbor = choice(neighbors)[m
[31m-        spot = mark + neighbor[m
[31m-[m
[31m-        if spot in tiles:[m
[31m-            number = tiles[spot][m
[31m-            tiles[spot] = None[m
[31m-            tiles[mark] = number[m
[31m-            mark = spot[m
[31m-[m
[31m-[m
[31m-def square(mark, number):[m
[31m-    """Draw white square with black outline and number."""[m
[31m-    up()[m
[31m-    goto(mark.x, mark.y)[m
[31m-    down()[m
[31m-[m
[31m-    color('black', 'white')[m
[31m-    begin_fill()[m
[31m-    for count in range(4):[m
[31m-        forward(99)[m
[31m-        left(90)[m
[31m-    end_fill()[m
[31m-[m
[31m-    if number is None:[m
[31m-        return[m
[31m-    elif number < 10:[m
[31m-        forward(20)[m
[31m-[m
[31m-    write(number, font=('Arial', 60, 'normal'))[m
[31m-[m
[31m-[m
[31m-def tap(x, y):[m
[31m-    """Swap tile and empty square."""[m
[31m-    x = floor(x, 100)[m
[31m-    y = floor(y, 100)[m
[31m-    mark = vector(x, y)[m
[31m-[m
[31m-    for neighbor in neighbors:[m
[31m-        spot = mark + neighbor[m
[31m-[m
[31m-        if spot in tiles and tiles[spot] is None:[m
[31m-            number = tiles[mark][m
[31m-            tiles[spot] = number[m
[31m-            square(spot, number)[m
[31m-            tiles[mark] = None[m
[31m-            square(mark, None)[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw all tiles."""[m
[31m-    for mark in tiles:[m
[31m-        square(mark, tiles[mark])[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-load()[m
[31m-draw()[m
[31m-onscreenclick(tap)[m
[31m-done()[m
[1mdiff --git a/src/freegames/tron.py b/src/freegames/tron.py[m
[1mdeleted file mode 100644[m
[1mindex 6cdf0b1..0000000[m
[1m--- a/src/freegames/tron.py[m
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-"""Tron, classic arcade game.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Make the tron players faster/slower.[m
[31m-2. Stop a tron player from running into itself.[m
[31m-3. Allow the tron player to go around the edge of the screen.[m
[31m-4. How would you create a computer player?[m
[31m-"""[m
[31m-[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import square, vector[m
[31m-[m
[31m-p1xy = vector(-100, 0)[m
[31m-p1aim = vector(4, 0)[m
[31m-p1body = set()[m
[31m-[m
[31m-p2xy = vector(100, 0)[m
[31m-p2aim = vector(-4, 0)[m
[31m-p2body = set()[m
[31m-[m
[31m-[m
[31m-def inside(head):[m
[31m-    """Return True if head inside screen."""[m
[31m-    return -200 < head.x < 200 and -200 < head.y < 200[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Advance players and draw game."""[m
[31m-    p1xy.move(p1aim)[m
[31m-    p1head = p1xy.copy()[m
[31m-[m
[31m-    p2xy.move(p2aim)[m
[31m-    p2head = p2xy.copy()[m
[31m-[m
[31m-    if not inside(p1head) or p1head in p2body:[m
[31m-        print('Player blue wins!')[m
[31m-        return[m
[31m-[m
[31m-    if not inside(p2head) or p2head in p1body:[m
[31m-        print('Player red wins!')[m
[31m-        return[m
[31m-[m
[31m-    p1body.add(p1head)[m
[31m-    p2body.add(p2head)[m
[31m-[m
[31m-    square(p1xy.x, p1xy.y, 3, 'red')[m
[31m-    square(p2xy.x, p2xy.y, 3, 'blue')[m
[31m-    update()[m
[31m-    ontimer(draw, 50)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-onkey(lambda: p1aim.rotate(90), 'a')[m
[31m-onkey(lambda: p1aim.rotate(-90), 'd')[m
[31m-onkey(lambda: p2aim.rotate(90), 'j')[m
[31m-onkey(lambda: p2aim.rotate(-90), 'l')[m
[31m-draw()[m
[31m-done()[m
[1mdiff --git a/src/freegames/typing.py b/src/freegames/typing.py[m
[1mdeleted file mode 100644[m
[1mindex cb40098..0000000[m
[1m--- a/src/freegames/typing.py[m
[1m+++ /dev/null[m
[36m@@ -1,82 +0,0 @@[m
[31m-"""Game to practice typing.[m
[31m-[m
[31m-Exercises[m
[31m-[m
[31m-1. Change the speed of letters.[m
[31m-2. Add uppercase letters.[m
[31m-3. Make the game faster as the score gets higher.[m
[31m-4. Make the letters more frequent as the score gets higher.[m
[31m-"""[m
[31m-[m
[31m-from random import choice, randrange[m
[31m-from string import ascii_lowercase[m
[31m-from turtle import *[m
[31m-[m
[31m-from freegames import vector[m
[31m-[m
[31m-targets = [][m
[31m-letters = [][m
[31m-score = 0[m
[31m-[m
[31m-[m
[31m-def inside(point):[m
[31m-    """Return True if point on screen."""[m
[31m-    return -200 < point.x < 200 and -200 < point.y < 200[m
[31m-[m
[31m-[m
[31m-def draw():[m
[31m-    """Draw letters."""[m
[31m-    clear()[m
[31m-[m
[31m-    for target, letter in zip(targets, letters):[m
[31m-        goto(target.x, target.y)[m
[31m-        write(letter, align='center', font=('Consolas', 20, 'normal'))[m
[31m-[m
[31m-    update()[m
[31m-[m
[31m-[m
[31m-def move():[m
[31m-    """Move letters."""[m
[31m-    if randrange(20) == 0:[m
[31m-        x = randrange(-150, 150)[m
[31m-        target = vector(x, 200)[m
[31m-        targets.append(target)[m
[31m-        letter = choice(ascii_lowercase)[m
[31m-        letters.append(letter)[m
[31m-[m
[31m-    for target in targets:[m
[31m-        target.y -= 1[m
[31m-[m
[31m-    draw()[m
[31m-[m
[31m-    for target in targets:[m
[31m-        if not inside(target):[m
[31m-            return[m
[31m-[m
[31m-    ontimer(move, 100)[m
[31m-[m
[31m-[m
[31m-def press(key):[m
[31m-    """Press key."""[m
[31m-    global score[m
[31m-[m
[31m-    if key in letters:[m
[31m-        score += 1[m
[31m-        pos = letters.index(key)[m
[31m-        del targets[pos][m
[31m-        del letters[pos][m
[31m-    else:[m
[31m-        score -= 1[m
[31m-[m
[31m-    print('Score:', score)[m
[31m-[m
[31m-[m
[31m-setup(420, 420, 370, 0)[m
[31m-hideturtle()[m
[31m-up()[m
[31m-tracer(False)[m
[31m-listen()[m
[31m-for letter in ascii_lowercase:[m
[31m-    onkey(lambda letter=letter: press(letter), letter)[m
[31m-move()[m
[31m-done()[m
[1mdiff --git a/src/freegames/utils.py b/src/freegames/utils.py[m
[1mdeleted file mode 100644[m
[1mindex e535aef..0000000[m
[1m--- a/src/freegames/utils.py[m
[1m+++ /dev/null[m
[36m@@ -1,488 +0,0 @@[m
[31m-"""Utilities[m
[31m-"""[m
[31m-# pylint: disable=no-member[m
[31m-[m
[31m-import collections.abc[m
[31m-import math[m
[31m-import os[m
[31m-[m
[31m-[m
[31m-def floor(value, size, offset=200):[m
[31m-    """Floor of `value` given `size` and `offset`.[m
[31m-[m
[31m-    The floor function is best understood with a diagram of the number line::[m
[31m-[m
[31m-         -200  -100    0    100   200[m
[31m-        <--|--x--|-----|--y--|--z--|-->[m
[31m-[m
[31m-    The number line shown has offset 200 denoted by the left-hand tick mark at[m
[31m-    -200 and size 100 denoted by the tick marks at -100, 0, 100, and 200. The[m
[31m-    floor of a value is the left-hand tick mark of the range where it lies. So[m
[31m-    for the points show above: ``floor(x)`` is -200, ``floor(y)`` is 0, and[m
[31m-    ``floor(z)`` is 100.[m
[31m-[m
[31m-    >>> floor(10, 100)[m
[31m-    0.0[m
[31m-    >>> floor(120, 100)[m
[31m-    100.0[m
[31m-    >>> floor(-10, 100)[m
[31m-    -100.0[m
[31m-    >>> floor(-150, 100)[m
[31m-    -200.0[m
[31m-    >>> floor(50, 167)[m
[31m-    -33.0[m
[31m-[m
[31m-    """[m
[31m-    return float(((value + offset) // size) * size - offset)[m
[31m-[m
[31m-[m
[31m-def path(filename):[m
[31m-    """Return full path to `filename` in freegames module."""[m
[31m-    filepath = os.path.realpath(__file__)[m
[31m-    dirpath = os.path.dirname(filepath)[m
[31m-    fullpath = os.path.join(dirpath, filename)[m
[31m-    return fullpath[m
[31m-[m
[31m-[m
[31m-def line(a, b, x, y):[m
[31m-    """Draw line from `(a, b)` to `(x, y)`."""[m
[31m-    import turtle[m
[31m-[m
[31m-    turtle.up()[m
[31m-    turtle.goto(a, b)[m
[31m-    turtle.down()[m
[31m-    turtle.goto(x, y)[m
[31m-[m
[31m-[m
[31m-def square(x, y, size, name):[m
[31m-    """Draw square at `(x, y)` with side length `size` and fill color `name`.[m
[31m-[m
[31m-    The square is oriented so the bottom left corner is at (x, y).[m
[31m-[m
[31m-    """[m
[31m-    import turtle[m
[31m-[m
[31m-    turtle.up()[m
[31m-    turtle.goto(x, y)[m
[31m-    turtle.down()[m
[31m-    turtle.color(name)[m
[31m-    turtle.begin_fill()[m
[31m-[m
[31m-    for count in range(4):[m
[31m-        turtle.forward(size)[m
[31m-        turtle.left(90)[m
[31m-[m
[31m-    turtle.end_fill()[m
[31m-[m
[31m-[m
[31m-class vector(collections.abc.Sequence):[m
[31m-    """Two-dimensional vector.[m
[31m-[m
[31m-    Vectors can be modified in-place.[m
[31m-[m
[31m-    >>> v = vector(0, 1)[m
[31m-    >>> v.move(1)[m
[31m-    >>> v[m
[31m-    vector(1, 2)[m
[31m-    >>> v.rotate(90)[m
[31m-    >>> v[m
[31m-    vector(-2.0, 1.0)[m
[31m-[m
[31m-    """[m
[31m-[m
[31m-    # pylint: disable=invalid-name[m
[31m-    PRECISION = 6[m
[31m-[m
[31m-    __slots__ = ('_x', '_y', '_hash')[m
[31m-[m
[31m-    def __init__(self, x, y):[m
[31m-        """Initialize vector with coordinates: x, y.[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> v.x[m
[31m-        1[m
[31m-        >>> v.y[m
[31m-        2[m
[31m-[m
[31m-        """[m
[31m-        self._hash = None[m
[31m-        self._x = round(x, self.PRECISION)[m
[31m-        self._y = round(y, self.PRECISION)[m
[31m-[m
[31m-    @property[m
[31m-    def x(self):[m
[31m-        """X-axis component of vector.[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> v.x[m
[31m-        1[m
[31m-        >>> v.x = 3[m
[31m-        >>> v.x[m
[31m-        3[m
[31m-[m
[31m-        """[m
[31m-        return self._x[m
[31m-[m
[31m-    @x.setter[m
[31m-    def x(self, value):[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot set x after hashing')[m
[31m-        self._x = round(value, self.PRECISION)[m
[31m-[m
[31m-    @property[m
[31m-    def y(self):[m
[31m-        """Y-axis component of vector.[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> v.y[m
[31m-        2[m
[31m-        >>> v.y = 5[m
[31m-        >>> v.y[m
[31m-        5[m
[31m-[m
[31m-        """[m
[31m-        return self._y[m
[31m-[m
[31m-    @y.setter[m
[31m-    def y(self, value):[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot set y after hashing')[m
[31m-        self._y = round(value, self.PRECISION)[m
[31m-[m
[31m-    def __hash__(self):[m
[31m-        """v.__hash__() -> hash(v)[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> h = hash(v)[m
[31m-        >>> v.x = 2[m
[31m-        Traceback (most recent call last):[m
[31m-            ...[m
[31m-        ValueError: cannot set x after hashing[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is None:[m
[31m-            pair = (self.x, self.y)[m
[31m-            self._hash = hash(pair)[m
[31m-        return self._hash[m
[31m-[m
[31m-    def set(self, other):[m
[31m-        """Set vector x, y to other x, y.[m
[31m-[m
[31m-        >>> a = vector(0, 0)[m
[31m-        >>> b = vector(1, 2)[m
[31m-        >>> a.set(b)[m
[31m-        >>> a[m
[31m-        vector(1, 2)[m
[31m-[m
[31m-        """[m
[31m-        self.x = other.x[m
[31m-        self.y = other.y[m
[31m-[m
[31m-    def __len__(self):[m
[31m-        """v.__len__() -> len(v)[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> len(v)[m
[31m-        2[m
[31m-[m
[31m-        """[m
[31m-        return 2[m
[31m-[m
[31m-    def __getitem__(self, index):[m
[31m-        """v.__getitem__(v, i) -> v[i][m
[31m-[m
[31m-        >>> v = vector(3, 4)[m
[31m-        >>> v[0][m
[31m-        3[m
[31m-        >>> v[1][m
[31m-        4[m
[31m-        >>> v[2][m
[31m-        Traceback (most recent call last):[m
[31m-            ...[m
[31m-        IndexError[m
[31m-[m
[31m-        """[m
[31m-        if index == 0:[m
[31m-            return self.x[m
[31m-        if index == 1:[m
[31m-            return self.y[m
[31m-        raise IndexError[m
[31m-[m
[31m-    def copy(self):[m
[31m-        """Return copy of vector.[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = v.copy()[m
[31m-        >>> v is w[m
[31m-        False[m
[31m-[m
[31m-        """[m
[31m-        type_self = type(self)[m
[31m-        return type_self(self.x, self.y)[m
[31m-[m
[31m-    def __eq__(self, other):[m
[31m-        """v.__eq__(w) -> v == w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(1, 2)[m
[31m-        >>> v == w[m
[31m-        True[m
[31m-[m
[31m-        """[m
[31m-        if isinstance(other, vector):[m
[31m-            return self.x == other.x and self.y == other.y[m
[31m-        return NotImplemented[m
[31m-[m
[31m-    def __ne__(self, other):[m
[31m-        """v.__ne__(w) -> v != w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v != w[m
[31m-        True[m
[31m-[m
[31m-        """[m
[31m-        if isinstance(other, vector):[m
[31m-            return self.x != other.x or self.y != other.y[m
[31m-        return NotImplemented[m
[31m-[m
[31m-    def __iadd__(self, other):[m
[31m-        """v.__iadd__(w) -> v += w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v += w[m
[31m-        >>> v[m
[31m-        vector(4, 6)[m
[31m-        >>> v += 1[m
[31m-        >>> v[m
[31m-        vector(5, 7)[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot add vector after hashing')[m
[31m-        if isinstance(other, vector):[m
[31m-            self.x += other.x[m
[31m-            self.y += other.y[m
[31m-        else:[m
[31m-            self.x += other[m
[31m-            self.y += other[m
[31m-        return self[m
[31m-[m
[31m-    def __add__(self, other):[m
[31m-        """v.__add__(w) -> v + w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v + w[m
[31m-        vector(4, 6)[m
[31m-        >>> v + 1[m
[31m-        vector(2, 3)[m
[31m-        >>> 2.0 + v[m
[31m-        vector(3.0, 4.0)[m
[31m-[m
[31m-        """[m
[31m-        copy = self.copy()[m
[31m-        return copy.__iadd__(other)[m
[31m-[m
[31m-    __radd__ = __add__[m
[31m-[m
[31m-    def move(self, other):[m
[31m-        """Move vector by other (in-place).[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v.move(w)[m
[31m-        >>> v[m
[31m-        vector(4, 6)[m
[31m-        >>> v.move(3)[m
[31m-        >>> v[m
[31m-        vector(7, 9)[m
[31m-[m
[31m-        """[m
[31m-        self.__iadd__(other)[m
[31m-[m
[31m-    def __isub__(self, other):[m
[31m-        """v.__isub__(w) -> v -= w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v -= w[m
[31m-        >>> v[m
[31m-        vector(-2, -2)[m
[31m-        >>> v -= 1[m
[31m-        >>> v[m
[31m-        vector(-3, -3)[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot subtract vector after hashing')[m
[31m-        if isinstance(other, vector):[m
[31m-            self.x -= other.x[m
[31m-            self.y -= other.y[m
[31m-        else:[m
[31m-            self.x -= other[m
[31m-            self.y -= other[m
[31m-        return self[m
[31m-[m
[31m-    def __sub__(self, other):[m
[31m-        """v.__sub__(w) -> v - w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v - w[m
[31m-        vector(-2, -2)[m
[31m-        >>> v - 1[m
[31m-        vector(0, 1)[m
[31m-[m
[31m-        """[m
[31m-        copy = self.copy()[m
[31m-        return copy.__isub__(other)[m
[31m-[m
[31m-    def __imul__(self, other):[m
[31m-        """v.__imul__(w) -> v *= w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v *= w[m
[31m-        >>> v[m
[31m-        vector(3, 8)[m
[31m-        >>> v *= 2[m
[31m-        >>> v[m
[31m-        vector(6, 16)[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot multiply vector after hashing')[m
[31m-        if isinstance(other, vector):[m
[31m-            self.x *= other.x[m
[31m-            self.y *= other.y[m
[31m-        else:[m
[31m-            self.x *= other[m
[31m-            self.y *= other[m
[31m-        return self[m
[31m-[m
[31m-    def __mul__(self, other):[m
[31m-        """v.__mul__(w) -> v * w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v * w[m
[31m-        vector(3, 8)[m
[31m-        >>> v * 2[m
[31m-        vector(2, 4)[m
[31m-        >>> 3.0 * v[m
[31m-        vector(3.0, 6.0)[m
[31m-[m
[31m-        """[m
[31m-        copy = self.copy()[m
[31m-        return copy.__imul__(other)[m
[31m-[m
[31m-    __rmul__ = __mul__[m
[31m-[m
[31m-    def scale(self, other):[m
[31m-        """Scale vector by other (in-place).[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> v.scale(w)[m
[31m-        >>> v[m
[31m-        vector(3, 8)[m
[31m-        >>> v.scale(0.5)[m
[31m-        >>> v[m
[31m-        vector(1.5, 4.0)[m
[31m-[m
[31m-        """[m
[31m-        self.__imul__(other)[m
[31m-[m
[31m-    def __itruediv__(self, other):[m
[31m-        """v.__itruediv__(w) -> v /= w[m
[31m-[m
[31m-        >>> v = vector(2, 4)[m
[31m-        >>> w = vector(4, 8)[m
[31m-        >>> v /= w[m
[31m-        >>> v[m
[31m-        vector(0.5, 0.5)[m
[31m-        >>> v /= 2[m
[31m-        >>> v[m
[31m-        vector(0.25, 0.25)[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot divide vector after hashing')[m
[31m-        if isinstance(other, vector):[m
[31m-            self.x /= other.x[m
[31m-            self.y /= other.y[m
[31m-        else:[m
[31m-            self.x /= other[m
[31m-            self.y /= other[m
[31m-        return self[m
[31m-[m
[31m-    def __truediv__(self, other):[m
[31m-        """v.__truediv__(w) -> v / w[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> w = vector(3, 4)[m
[31m-        >>> w / v[m
[31m-        vector(3.0, 2.0)[m
[31m-        >>> v / 2[m
[31m-        vector(0.5, 1.0)[m
[31m-[m
[31m-        """[m
[31m-        copy = self.copy()[m
[31m-        return copy.__itruediv__(other)[m
[31m-[m
[31m-    def __neg__(self):[m
[31m-        """v.__neg__() -> -v[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> -v[m
[31m-        vector(-1, -2)[m
[31m-[m
[31m-        """[m
[31m-        # pylint: disable=invalid-unary-operand-type[m
[31m-        copy = self.copy()[m
[31m-        copy.x = -copy.x[m
[31m-        copy.y = -copy.y[m
[31m-        return copy[m
[31m-[m
[31m-    def __abs__(self):[m
[31m-        """v.__abs__() -> abs(v)[m
[31m-[m
[31m-        >>> v = vector(3, 4)[m
[31m-        >>> abs(v)[m
[31m-        5.0[m
[31m-[m
[31m-        """[m
[31m-        return (self.x**2 + self.y**2) ** 0.5[m
[31m-[m
[31m-    def rotate(self, angle):[m
[31m-        """Rotate vector counter-clockwise by angle (in-place).[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> v.rotate(90)[m
[31m-        >>> v == vector(-2, 1)[m
[31m-        True[m
[31m-[m
[31m-        """[m
[31m-        if self._hash is not None:[m
[31m-            raise ValueError('cannot rotate vector after hashing')[m
[31m-        radians = angle * math.pi / 180.0[m
[31m-        cosine = math.cos(radians)[m
[31m-        sine = math.sin(radians)[m
[31m-        x = self.x[m
[31m-        y = self.y[m
[31m-        self.x = x * cosine - y * sine[m
[31m-        self.y = y * cosine + x * sine[m
[31m-[m
[31m-    def __repr__(self):[m
[31m-        """v.__repr__() -> repr(v)[m
[31m-[m
[31m-        >>> v = vector(1, 2)[m
[31m-        >>> repr(v)[m
[31m-        'vector(1, 2)'[m
[31m-[m
[31m-        """[m
[31m-        type_self = type(self)[m
[31m-        name = type_self.__name__[m
[31m-        return '{}({!r}, {!r})'.format(name, self.x, self.y)[m
[1mdiff --git a/tests/__init__.py b/tests/__init__.py[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/tests/mockturtle.py b/tests/mockturtle.py[m
[1mdeleted file mode 100644[m
[1mindex 8a26ac3..0000000[m
[1m--- a/tests/mockturtle.py[m
[1m+++ /dev/null[m
[36m@@ -1,148 +0,0 @@[m
[31m-"""Mock turtle module.[m
[31m-"""[m
[31m-[m
[31m-state = {}[m
[31m-events = [][m
[31m-[m
[31m-[m
[31m-class Turtle:[m
[31m-    def __init__(self, visible=True):[m
[31m-        pass[m
[31m-[m
[31m-    def goto(self, x, y):[m
[31m-        pass[m
[31m-[m
[31m-    def up(self):[m
[31m-        pass[m
[31m-[m
[31m-    def down(self):[m
[31m-        pass[m
[31m-[m
[31m-    def width(self, size):[m
[31m-        pass[m
[31m-[m
[31m-    def color(self, fill, outline=None):[m
[31m-        pass[m
[31m-[m
[31m-    def write(self, text, font=None, align=None):[m
[31m-        pass[m
[31m-[m
[31m-    def begin_fill(self):[m
[31m-        pass[m
[31m-[m
[31m-    def end_fill(self):[m
[31m-        pass[m
[31m-[m
[31m-    def forward(self, steps):[m
[31m-        pass[m
[31m-[m
[31m-    def back(self, steps):[m
[31m-        pass[m
[31m-[m
[31m-    def addshape(self, reference):[m
[31m-        pass[m
[31m-[m
[31m-    def shape(self, reference):[m
[31m-        pass[m
[31m-[m
[31m-    def stamp(self):[m
[31m-        pass[m
[31m-[m
[31m-    def left(self, degrees):[m
[31m-        pass[m
[31m-[m
[31m-    def right(self, degrees):[m
[31m-        pass[m
[31m-[m
[31m-    def hideturtle(self):[m
[31m-        pass[m
[31m-[m
[31m-    def tracer(self, state):[m
[31m-        pass[m
[31m-[m
[31m-    def dot(self, size, color=None):[m
[31m-        pass[m
[31m-[m
[31m-    def clear(self):[m
[31m-        pass[m
[31m-[m
[31m-    def circle(self, radius):[m
[31m-        pass[m
[31m-[m
[31m-    def bgcolor(self, name):[m
[31m-        pass[m
[31m-[m
[31m-    def update(self):[m
[31m-        pass[m
[31m-[m
[31m-    def undo(self):[m
[31m-        pass[m
[31m-[m
[31m-[m
[31m-_turtle = Turtle()[m
[31m-goto = _turtle.goto[m
[31m-up = _turtle.up[m
[31m-down = _turtle.down[m
[31m-width = _turtle.width[m
[31m-color = _turtle.color[m
[31m-write = _turtle.write[m
[31m-begin_fill = _turtle.begin_fill[m
[31m-end_fill = _turtle.end_fill[m
[31m-forward = _turtle.forward[m
[31m-back = _turtle.back[m
[31m-addshape = _turtle.addshape[m
[31m-shape = _turtle.shape[m
[31m-stamp = _turtle.stamp[m
[31m-left = _turtle.left[m
[31m-right = _turtle.right[m
[31m-hideturtle = _turtle.hideturtle[m
[31m-tracer = _turtle.tracer[m
[31m-dot = _turtle.dot[m
[31m-clear = _turtle.clear[m
[31m-circle = _turtle.circle[m
[31m-bgcolor = _turtle.bgcolor[m
[31m-update = _turtle.update[m
[31m-undo = _turtle.undo[m
[31m-[m
[31m-[m
[31m-def setup(width, height, x, y):[m
[31m-    pass[m
[31m-[m
[31m-[m
[31m-def listen():[m
[31m-    pass[m
[31m-[m
[31m-[m
[31m-def onkey(function, key):[m
[31m-    state['key ' + key] = function[m
[31m-[m
[31m-[m
[31m-def ontimer(function, delay):[m
[31m-    state['timer'] = function[m
[31m-    state['delay'] = delay[m
[31m-[m
[31m-[m
[31m-def onscreenclick(function):[m
[31m-    state['click'] = function[m
[31m-[m
[31m-[m
[31m-def done():[m
[31m-    for event in events:[m
[31m-        name = event[0][m
[31m-[m
[31m-        try:[m
[31m-            function = state[name][m
[31m-        except KeyError:[m
[31m-            if name == 'timer':[m
[31m-                if event[1:] and event[1]:[m
[31m-                    continue[m
[31m-            raise[m
[31m-[m
[31m-        if name == 'timer':[m
[31m-            del state['timer'][m
[31m-            del state['delay'][m
[31m-            args = ()[m
[31m-        else:[m
[31m-            args = event[1:][m
[31m-[m
[31m-        function(*args)[m
[1mdiff --git a/tests/test_ant.py b/tests/test_ant.py[m
[1mdeleted file mode 100644[m
[1mindex 9925130..0000000[m
[1m--- a/tests/test_ant.py[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_ant():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [('timer',)] * 600[m
[31m-    runpy.run_module('freegames.ant')[m
[1mdiff --git a/tests/test_avoid.py b/tests/test_avoid.py[m
[1mdeleted file mode 100644[m
[1mindex d2dd6c5..0000000[m
[1m--- a/tests/test_avoid.py[m
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_avoid_1():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer',)] * 10[m
[31m-    mockturtle.events += [('key Up',)][m
[31m-    mockturtle.events += [('timer',)] * 10[m
[31m-    mockturtle.events += [('key Down',)][m
[31m-    mockturtle.events += [('timer', True)] * 1000[m
[31m-    runpy.run_module('freegames.avoid')[m
[31m-[m
[31m-[m
[31m-def test_avoid_2():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [[m
[31m-        ('timer', True),[m
[31m-        ('key Up',),[m
[31m-        ('timer', True),[m
[31m-        ('key Down',),[m
[31m-    ] * 1000[m
[31m-    runpy.run_module('freegames.avoid')[m
[1mdiff --git a/tests/test_bagels.py b/tests/test_bagels.py[m
[1mdeleted file mode 100644[m
[1mindex 9c63159..0000000[m
[1m--- a/tests/test_bagels.py[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-[m
[31m-def test_bagels_pass():[m
[31m-    random.seed(2)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['123', '1234', '456', '789', '810'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.bagels')[m
[31m-[m
[31m-[m
[31m-def test_bagels_fail():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['123'] * 11[m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.bagels')[m
[1mdiff --git a/tests/test_bounce.py b/tests/test_bounce.py[m
[1mdeleted file mode 100644[m
[1mindex eef2bc2..0000000[m
[1m--- a/tests/test_bounce.py[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_bounce():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [('timer',)] * 600[m
[31m-    runpy.run_module('freegames.bounce')[m
[1mdiff --git a/tests/test_cannon.py b/tests/test_cannon.py[m
[1mdeleted file mode 100644[m
[1mindex 082c423..0000000[m
[1m--- a/tests/test_cannon.py[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_cannon():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = ([m
[31m-        [('timer',)] * 300 + [('click', 0, 0)] + [('timer', True)] * 3000[m
[31m-    )[m
[31m-    runpy.run_module('freegames.cannon')[m
[1mdiff --git a/tests/test_connect.py b/tests/test_connect.py[m
[1mdeleted file mode 100644[m
[1mindex 09066d8..0000000[m
[1m--- a/tests/test_connect.py[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_connect():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [[m
[31m-        ('click', 25, 0),[m
[31m-        ('click', 75, 0),[m
[31m-    ][m
[31m-    runpy.run_module('freegames.connect')[m
[1mdiff --git a/tests/test_crypto.py b/tests/test_crypto.py[m
[1mdeleted file mode 100644[m
[1mindex 2f3a88f..0000000[m
[1m--- a/tests/test_crypto.py[m
[1m+++ /dev/null[m
[36m@@ -1,53 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-[m
[31m-def test_crypto_encrypt():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['encrypt', 'Python since 1991', '10'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.crypto')[m
[31m-[m
[31m-[m
[31m-def test_crypto_encrypt_bad_key():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['encrypt', 'Python since 1991', 'abc'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.crypto')[m
[31m-[m
[31m-[m
[31m-def test_crypto_bad_command():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['bad command'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.crypto')[m
[31m-[m
[31m-[m
[31m-def test_crypto_decrypt():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['decrypt', 'Zidryx csxmo 1991', '10'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.crypto')[m
[31m-[m
[31m-[m
[31m-def test_crypto_decode():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = ['decode', 'Zidryx csxmo 1991'][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.crypto')[m
[1mdiff --git a/tests/test_doctest.py b/tests/test_doctest.py[m
[1mdeleted file mode 100644[m
[1mindex 7ae079c..0000000[m
[1m--- a/tests/test_doctest.py[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-import doctest[m
[31m-[m
[31m-import freegames.utils[m
[31m-[m
[31m-[m
[31m-def test_utils():[m
[31m-    failures, _ = doctest.testmod(freegames.utils)[m
[31m-    assert failures == 0[m
[1mdiff --git a/tests/test_fidget.py b/tests/test_fidget.py[m
[1mdeleted file mode 100644[m
[1mindex 62101c0..0000000[m
[1m--- a/tests/test_fidget.py[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_fidget():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer',), ('key space',)] * 30[m
[31m-    mockturtle.events += [('timer',)] * 600[m
[31m-    runpy.run_module('freegames.fidget')[m
[1mdiff --git a/tests/test_flappy.py b/tests/test_flappy.py[m
[1mdeleted file mode 100644[m
[1mindex 5e6b017..0000000[m
[1m--- a/tests/test_flappy.py[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_flappy_outside():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [('timer', True)] * 300[m
[31m-    runpy.run_module('freegames.flappy')[m
[31m-[m
[31m-[m
[31m-def test_flappy_collision():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = ([('timer', True)] * 6 + [('click', 0, 0)]) * 100[m
[31m-    runpy.run_module('freegames.flappy')[m
[1mdiff --git a/tests/test_guess.py b/tests/test_guess.py[m
[1mdeleted file mode 100644[m
[1mindex 0ecadb4..0000000[m
[1m--- a/tests/test_guess.py[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-[m
[31m-def test_guess():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = [20, 70, 50][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.guess')[m
[1mdiff --git a/tests/test_illusion.py b/tests/test_illusion.py[m
[1mdeleted file mode 100644[m
[1mindex 6a0fad1..0000000[m
[1m--- a/tests/test_illusion.py[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_illusion():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer', True)] * 10[m
[31m-    runpy.run_module('freegames.illusion')[m
[1mdiff --git a/tests/test_life.py b/tests/test_life.py[m
[1mdeleted file mode 100644[m
[1mindex 150dc3f..0000000[m
[1m--- a/tests/test_life.py[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_life():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [('timer',)] * 60[m
[31m-    runpy.run_module('freegames.life')[m
[1mdiff --git a/tests/test_madlibs.py b/tests/test_madlibs.py[m
[1mdeleted file mode 100644[m
[1mindex 7e7c470..0000000[m
[1m--- a/tests/test_madlibs.py[m
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-[m
[31m-def test_madlibs():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = [[m
[31m-        'quick',[m
[31m-        'brown',[m
[31m-        'lazy',[m
[31m-        'brown',[m
[31m-        'dog',[m
[31m-        'car',[m
[31m-        'jumps',[m
[31m-    ][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.madlibs')[m
[1mdiff --git a/tests/test_main.py b/tests/test_main.py[m
[1mdeleted file mode 100644[m
[1mindex 5090647..0000000[m
[1m--- a/tests/test_main.py[m
[1m+++ /dev/null[m
[36m@@ -1,55 +0,0 @@[m
[31m-import io[m
[31m-import os[m
[31m-import random[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-from freegames import __main__[m
[31m-[m
[31m-[m
[31m-def test_main_list():[m
[31m-    random.seed(0)[m
[31m-[m
[31m-    with mock.patch('sys.argv', ['__main__.py', 'list']):[m
[31m-        __main__.main()[m
[31m-[m
[31m-[m
[31m-def test_main_copy():[m
[31m-    random.seed(0)[m
[31m-    mock_open = mock.Mock()[m
[31m-    mock_open.side_effect = [io.StringIO(), io.StringIO()][m
[31m-[m
[31m-    with mock.patch('sys.argv', ['__main__.py', 'copy', 'guess']):[m
[31m-        with mock.patch('builtins.open', mock_open):[m
[31m-            __main__.main()[m
[31m-[m
[31m-[m
[31m-def test_main_copy_error():[m
[31m-    cwd = os.getcwd()[m
[31m-    path = os.path.join(cwd, 'guess.py')[m
[31m-[m
[31m-    with open(path, 'w'):[m
[31m-        pass[m
[31m-[m
[31m-    try:[m
[31m-        with mock.patch('sys.argv', ['__main__.py', 'copy', 'guess']):[m
[31m-            __main__.main()[m
[31m-    finally:[m
[31m-        os.remove('guess.py')[m
[31m-[m
[31m-[m
[31m-def test_main_show():[m
[31m-    random.seed(0)[m
[31m-[m
[31m-    with mock.patch('sys.argv', ['__main__.py', 'show', 'guess']):[m
[31m-        __main__.main()[m
[31m-[m
[31m-[m
[31m-def test_main_play():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = [20, 70, 50][m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        with mock.patch('sys.argv', ['__main__.py', 'play', 'guess']):[m
[31m-            __main__.main()[m
[1mdiff --git a/tests/test_maze.py b/tests/test_maze.py[m
[1mdeleted file mode 100644[m
[1mindex 16b7196..0000000[m
[1m--- a/tests/test_maze.py[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_maze():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [[m
[31m-        ('click', -200, 0),[m
[31m-        ('click', -190, 10),[m
[31m-        ('click', -170, 30),[m
[31m-    ][m
[31m-    runpy.run_module('freegames.maze')[m
[1mdiff --git a/tests/test_memory.py b/tests/test_memory.py[m
[1mdeleted file mode 100644[m
[1mindex 2e039ac..0000000[m
[1m--- a/tests/test_memory.py[m
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_memory():[m
[31m-    random.seed(0)[m
[31m-    events = [][m
[31m-[m
[31m-    for x in range(-200, 200, 50):[m
[31m-        for y in range(-200, 200, 50):[m
[31m-            events += [('timer',)] * 10[m
[31m-            events += [('click', x + 25, y + 25)][m
[31m-[m
[31m-    events += [('timer',)] * 10[m
[31m-    mockturtle.events[:] = events[m
[31m-    runpy.run_module('freegames.memory')[m
[1mdiff --git a/tests/test_minesweeper.py b/tests/test_minesweeper.py[m
[1mdeleted file mode 100644[m
[1mindex 2c4e5e5..0000000[m
[1m--- a/tests/test_minesweeper.py[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_minesweeper():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = ([m
[31m-        ('click', 175, -175),[m
[31m-        ('click', -75, -75),[m
[31m-        ('click', 125, 125),[m
[31m-    )[m
[31m-[m
[31m-    try:[m
[31m-        with mock.patch('time.sleep', lambda delay: None):[m
[31m-            runpy.run_module('freegames.minesweeper')[m
[31m-    except SystemExit:[m
[31m-        pass[m
[1mdiff --git a/tests/test_pacman.py b/tests/test_pacman.py[m
[1mdeleted file mode 100644[m
[1mindex b9f8a45..0000000[m
[1m--- a/tests/test_pacman.py[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_pacman():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer', True), ('key Up',)] * 600[m
[31m-    mockturtle.events += [('timer', True)] * 3000[m
[31m-    runpy.run_module('freegames.pacman')[m
[1mdiff --git a/tests/test_paint.py b/tests/test_paint.py[m
[1mdeleted file mode 100644[m
[1mindex 492d648..0000000[m
[1m--- a/tests/test_paint.py[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_paint():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [[m
[31m-        ('key K',),[m
[31m-        ('key l',),[m
[31m-        ('click', 0, 0),[m
[31m-        ('click', 10, 10),[m
[31m-        ('key W',),[m
[31m-        ('key s',),[m
[31m-        ('click', 20, 20),[m
[31m-        ('click', 30, 30),[m
[31m-        ('key G',),[m
[31m-        ('key c',),[m
[31m-        ('click', 30, 30),[m
[31m-        ('click', 40, 40),[m
[31m-        ('key B',),[m
[31m-        ('key r',),[m
[31m-        ('click', 30, 30),[m
[31m-        ('click', 40, 40),[m
[31m-        ('key R',),[m
[31m-        ('key t',),[m
[31m-        ('click', 30, 30),[m
[31m-        ('click', 40, 40),[m
[31m-    ][m
[31m-    runpy.run_module('freegames.paint')[m
[1mdiff --git a/tests/test_pong.py b/tests/test_pong.py[m
[1mdeleted file mode 100644[m
[1mindex c350058..0000000[m
[1m--- a/tests/test_pong.py[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_pong_1():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer',), ('key s',)] * 12[m
[31m-    mockturtle.events += [('timer',), ('key w',)] * 4[m
[31m-    mockturtle.events += [('timer', True)] * 600[m
[31m-    runpy.run_module('freegames.pong')[m
[31m-[m
[31m-[m
[31m-def test_pong_2():[m
[31m-    random.seed(1)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer',), ('key k',)] * 18[m
[31m-    mockturtle.events += [('timer',), ('key i',)] * 6[m
[31m-    mockturtle.events += [('timer', True)] * 600[m
[31m-    runpy.run_module('freegames.pong')[m
[1mdiff --git a/tests/test_rps.py b/tests/test_rps.py[m
[1mdeleted file mode 100644[m
[1mindex 8afece1..0000000[m
[1m--- a/tests/test_rps.py[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-[m
[31m-def test_rps_same():[m
[31m-    random.seed(0)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = list('xrpsrpsrpsrpsrpsrpsrpsrps')[m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.rps')[m
[31m-[m
[31m-[m
[31m-def test_rps_beat_last():[m
[31m-    random.seed(1)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = list('sprsprsprsprsprsprsprspr')[m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.rps')[m
[31m-[m
[31m-[m
[31m-def test_rps_random():[m
[31m-    random.seed(2)[m
[31m-    mock_input = mock.Mock()[m
[31m-    mock_input.side_effect = list('rpsrpsrpsrpsrpsrpsrpsrps')[m
[31m-    mocks = {'print': lambda *args: None, 'input': mock_input}[m
[31m-[m
[31m-    with mock.patch.multiple('builtins', **mocks):[m
[31m-        runpy.run_module('freegames.rps')[m
[1mdiff --git a/tests/test_simonsays.py b/tests/test_simonsays.py[m
[1mdeleted file mode 100644[m
[1mindex f9716d3..0000000[m
[1m--- a/tests/test_simonsays.py[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-import unittest.mock as mock[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_simonsays():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = ([m
[31m-        ('click', 0, 0),[m
[31m-        ('click', -100, -100),[m
[31m-        ('click', 100, 100),[m
[31m-    )[m
[31m-[m
[31m-    try:[m
[31m-        with mock.patch('time.sleep', lambda delay: None):[m
[31m-            runpy.run_module('freegames.simonsays')[m
[31m-    except SystemExit:[m
[31m-        pass[m
[1mdiff --git a/tests/test_snake.py b/tests/test_snake.py[m
[1mdeleted file mode 100644[m
[1mindex 2b12276..0000000[m
[1m--- a/tests/test_snake.py[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_snake():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [[m
[31m-        ('timer',),[m
[31m-        ('key Left',),[m
[31m-        ('timer',),[m
[31m-        ('key Up',),[m
[31m-        ('timer',),[m
[31m-        ('key Right',),[m
[31m-        ('timer',),[m
[31m-        ('key Down',),[m
[31m-        ('timer',),[m
[31m-        ('key Left',),[m
[31m-        ('timer',),[m
[31m-        ('key Up',),[m
[31m-    ][m
[31m-    mockturtle.events += [('timer', True)] * 300[m
[31m-    runpy.run_module('freegames.snake')[m
[1mdiff --git a/tests/test_tictactoe.py b/tests/test_tictactoe.py[m
[1mdeleted file mode 100644[m
[1mindex c78c2d3..0000000[m
[1m--- a/tests/test_tictactoe.py[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_tictactoe():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = [[m
[31m-        ('click', 100, 100),[m
[31m-        ('click', 100, 0),[m
[31m-    ][m
[31m-    runpy.run_module('freegames.tictactoe')[m
[1mdiff --git a/tests/test_tiles.py b/tests/test_tiles.py[m
[1mdeleted file mode 100644[m
[1mindex 1784572..0000000[m
[1m--- a/tests/test_tiles.py[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_tiles():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events[:] = ([m
[31m-        ('click', x + 50, y + 50)[m
[31m-        for x in range(-200, 200, 100)[m
[31m-        for y in range(-200, 200, 100)[m
[31m-    )[m
[31m-    runpy.run_module('freegames.tiles')[m
[1mdiff --git a/tests/test_tron.py b/tests/test_tron.py[m
[1mdeleted file mode 100644[m
[1mindex 0d871d1..0000000[m
[1m--- a/tests/test_tron.py[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_tron_1():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('key a',), ('key d',), ('key a',)][m
[31m-    mockturtle.events += [('timer', True)] * 600[m
[31m-    runpy.run_module('freegames.tron')[m
[31m-[m
[31m-[m
[31m-def test_tron_2():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('key j',), ('key l',), ('key j',)][m
[31m-    mockturtle.events += [('timer', True)] * 600[m
[31m-    runpy.run_module('freegames.tron')[m
[1mdiff --git a/tests/test_typing.py b/tests/test_typing.py[m
[1mdeleted file mode 100644[m
[1mindex 23ba07e..0000000[m
[1m--- a/tests/test_typing.py[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-import random[m
[31m-import runpy[m
[31m-import sys[m
[31m-[m
[31m-import mockturtle[m
[31m-[m
[31m-sys.modules['turtle'] = sys.modules['mockturtle'][m
[31m-[m
[31m-[m
[31m-def test_typing():[m
[31m-    random.seed(0)[m
[31m-    mockturtle.events.clear()[m
[31m-    mockturtle.events += [('timer',)] * 100[m
[31m-    mockturtle.events += [('key i',)][m
[31m-    mockturtle.events += [('timer',)] * 100[m
[31m-    mockturtle.events += [('key k',)][m
[31m-    mockturtle.events += [('timer', True)] * 1000[m
[31m-    runpy.run_module('freegames.typing')[m
[1mdiff --git a/tests/test_utils.py b/tests/test_utils.py[m
[1mdeleted file mode 100644[m
[1mindex 435f463..0000000[m
[1m--- a/tests/test_utils.py[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-from pytest import raises[m
[31m-[m
[31m-import freegames.utils as utils[m
[31m-[m
[31m-[m
[31m-def test_change_after_hash():[m
[31m-    v = utils.vector(0, 0)[m
[31m-    hash(v)[m
[31m-    with raises(ValueError):[m
[31m-        v.x = 1[m
[31m-    with raises(ValueError):[m
[31m-        v.y = 1[m
[31m-    with raises(ValueError):[m
[31m-        v += 1[m
[31m-    with raises(ValueError):[m
[31m-        v -= 1[m
[31m-    with raises(ValueError):[m
[31m-        v *= 2[m
[31m-    with raises(ValueError):[m
[31m-        v /= 2[m
[31m-    with raises(ValueError):[m
[31m-        v.rotate(90)[m
[31m-[m
[31m-[m
[31m-def test_not_implemented_paths():[m
[31m-    v = utils.vector(0, 0)[m
[31m-    assert not (v == 0)[m
[31m-    assert v != 0[m
[1mdiff --git a/tox.ini b/tox.ini[m
[1mdeleted file mode 100644[m
[1mindex f788373..0000000[m
[1m--- a/tox.ini[m
[1m+++ /dev/null[m
[36m@@ -1,77 +0,0 @@[m
[31m-[tox][m
[31m-envlist=bluecheck,doc8,docs,flake8,isortcheck,rstcheck,py37,py38,py39,py310,py311[m
[31m-skip_missing_interpreters=True[m
[31m-[m
[31m-[testenv][m
[31m-deps=[m
[31m-    coverage[m
[31m-    pytest[m
[31m-    pytest-cov[m
[31m-commands=pytest tests[m
[31m-setenv=[m
[31m-    PYTHONPATH={toxinidir}:{toxinidir}/tests[m
[31m-[m
[31m-[testenv:blue][m
[31m-commands=blue {toxinidir}/src/freegames {toxinidir}/tests[m
[31m-deps=blue[m
[31m-[m
[31m-[testenv:bluecheck][m
[31m-commands=blue --check {toxinidir}/src/freegames {toxinidir}/tests[m
[31m-deps=blue[m
[31m-[m
[31m-[testenv:doc8][m
[31m-deps=doc8[m
[31m-commands=doc8 docs --ignore-path docs/_build[m
[31m-[m
[31m-[testenv:docs][m
[31m-allowlist_externals=make[m
[31m-changedir=docs[m
[31m-commands=make html[m
[31m-deps=[m
[31m-    sphinx[m
[31m-[m
[31m-[testenv:flake8][m
[31m-commands=flake8 {toxinidir}/src/freegames {toxinidir}/tests[m
[31m-deps=flake8[m
[31m-[m
[31m-[testenv:isort][m
[31m-commands=isort {toxinidir}/src/freegames {toxinidir}/tests[m
[31m-deps=isort[m
[31m-[m
[31m-[testenv:isortcheck][m
[31m-commands=isort --check {toxinidir}/src/freegames {toxinidir}/tests[m
[31m-deps=isort[m
[31m-[m
[31m-[testenv:rstcheck][m
[31m-commands=rstcheck --report-level warning {toxinidir}/README.rst[m
[31m-deps=rstcheck[m
[31m-[m
[31m-[testenv:uploaddocs][m
[31m-allowlist_externals=rsync[m
[31m-changedir=docs[m
[31m-commands=rsync --rsync-path 'sudo -u herokuish rsync' -avzP --stats --delete _build/html/ grantjenks.com:/srv/www/grantjenks.com/public/docs/freegames/[m
[31m-[m
[31m-[isort][m
[31m-multi_line_output = 3[m
[31m-include_trailing_comma = True[m
[31m-force_grid_wrap = 0[m
[31m-use_parentheses = True[m
[31m-ensure_newline_before_comments = True[m
[31m-line_length = 80[m
[31m-[m
[31m-[pytest][m
[31m-addopts=[m
[31m-    --cov-fail-under=100[m
[31m-    --cov-report=term-missing[m
[31m-    --cov=freegames[m
[31m-    --doctest-glob="*.rst"[m
[31m-    --doctest-modules[m
[31m-    --import-mode append[m
[31m-testpaths=docs src/freegames tests README.rst[m
[31m-[m
[31m-[doc8][m
[31m-# ignore=D000[m
[31m-[m
[31m-[flake8][m
[31m-ignore=E722,F403,F405,W503[m
[31m-max-line-length=120[m
